{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/xmlrpcssl/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["f49880de724011dd54fc7e3eb38816aca6558bd552882fe1b36197138cc34692"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["0, 1"], "Date": ["Fri, 23 Dec 2016 10:45:47 GMT"], "X-Served-By": ["cache-iad2126-IAD, cache-hhn1520-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489947.171934,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2535910"], "X-Cache": ["MISS, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["32710"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["6495"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/xmlrpcssl/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"ssl secure https xmlrpc rpc xml ldap\", \n        \"package_url\": \"http://pypi.python.org/pypi/xmlrpcssl\", \n        \"author\": \"Jonatan Dellagostin\", \n        \"author_email\": \"jdellagostin@gmail.com\", \n        \"download_url\": null, \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.1.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \".. image:: https://readthedocs.org/projects/xmlrpcssl/badge/?version=latest\\n   :target: http://xmlrpcssl.readthedocs.io/en/latest/?badge=latest\\n   :alt: Documentation Status\\n\\n.. image:: https://coveralls.io/repos/github/jonDel/xmlrpcssl/badge.svg?branch=master\\n   :target: https://coveralls.io/github/jonDel/xmlrpcssl?branch=master\\n\\n.. image:: https://landscape.io/github/jonDel/xmlrpcssl/master/landscape.svg?style=flat\\n    :target: https://landscape.io/github/jonDel/xmlrpcssl/master\\n    :alt: Code Health\\n\\n.. image:: https://www.versioneye.com/user/projects/58233fdf613b6800422cb9b6/badge.svg?style=flat\\n    :target: https://www.versioneye.com/user/projects/58233fdf613b6800422cb9b6\\n\\n\\nxmlrpcssl\\n=========\\n\\n**xmlprcssl** is a Python library that provides secure communication (`TLS <https://en.wikipedia.org/wiki/Transport_Layer_Security>`__) beetween clients and servers through xmlrpc protocol. It supports plugable handlers to provide user authentication. For now, it has as an example a ldap based authentication handler.\\n\\n\\nServer configuration\\n--------------------\\n\\n.. code:: python\\n\\n  >>> from xmlrpcssl import SecureAuthenticatedXMLRPCServer\\n  >>> from xmlrpcssl.handlers import LdapVerifyingRequestHandler\\n  >>> from datetime import datetime\\n  >>> keySsl='/tmp/server.key'\\n  >>> crtSsl='/tmp/server.crt'\\n  >>> tcpPort=433\\n  >>> serverIp='10.0.0.1'\\n  >>> ldapHost = 'ldapHost' # User must have access granted to this host in ldap\\n  >>> ldapServer = 'ldapServer' # ip or name of ldap server\\n  >>> gidNumber = 111 # User must be in this group in order to be authenticated\\n  >>> isMasterUser = False # True if the user has write permissions in the ldap server\\n  >>> baseUsrLoginDn = 'o=Organization,c=US' # user base DN to perform login in\\n   # the ldap server\\n  >>> baseSearchDn = 'o=Organization,c=US' # search base DN to perform a search in\\n   # the ldap server base\\n  >>> RequestHandler = LdapVerifyingRequestHandler # a handler that inherits from\\n   # BaseRequestHandler and performs user authentication\\n  >>> optArgs={'isMasterUser':isMasterUser,'baseUsrLoginDn':baseUsrLoginDn,\\n  ...  'ldapServer':ldapServer,'gidNumber':gidNumber,'baseSearchDn':baseSearchDn,\\n  ...  'host':ldapHost,'RequestHandler':RequestHandler}\\n  >>> serverSSL=SecureAuthenticatedXMLRPCServer((serverIp,tcpPort),keySsl,crtSsl,**optArgs)\\n  >>> def test():\\n  ...  # toy test function\\n  ...  return datetime.now().strftime(\\\"%H:%M:%S\\\")\\n  >>> serverSSL.register_function(test)\\n  >>> serverSSL.serve_forever()\\n\\n\\nClient configuration\\n--------------------\\n\\n.. code:: python\\n\\n  >>> from xmlrpclib import ServerProxy\\n  >>> userName = 'ldapUser'\\n  >>> password = 'ldapUserPassword'\\n  >>> tcpPort=433\\n  >>> serverIp='10.0.0.1'\\n  >>> clientXml=ServerProxy('https://'+userName+':'+password+'@'+serverIp+':'+str(tcpPort))\\n  >>> response = clientXml.test()\\n  >>> print response\\n\\nInstallation\\n------------\\n\\nTo install xmlrpcssl, simply run:\\n\\n::\\n\\n  $ pip install xmlrpcssl\\n\\nxmlrpcssl is compatible with Python 2.6+\\n\\nDocumentation\\n-------------\\n\\nhttps://xmlrpcssl.readthedocs.io\\n\\nSource Code\\n-----------\\n\\nFeel free to fork, evaluate and contribute to this project.\\n\\nSource: https://github.com/jonDel/xmlrpcssl\\n\\nLicense\\n-------\\n\\nGPLv3 licensed.\\n\\nCredits\\n-------\\n\\n-  http://code.activestate.com/recipes/496786-simple-xml-rpc-server-over-https and https://github.com/nosmo/python-xmlrpcssl for inspiration\", \n        \"release_url\": \"http://pypi.python.org/pypi/xmlrpcssl/0.1.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"License :: OSI Approved :: GNU General Public License v3 (GPLv3)\", \n            \"Programming Language :: Python :: 2.6\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Topic :: Internet :: WWW/HTTP :: HTTP Servers\", \n            \"Topic :: System :: Systems Administration :: Authentication/Directory\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"xmlrpcssl\", \n        \"license\": \"GPLv3\", \n        \"summary\": \"xmlrpc server with basic authentication and secured with ssl\", \n        \"home_page\": \"https://github.com/jonDel/xmlrpcssl\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-09T16:14:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/5c/5c/449306768eec895060a2cf6c735628cd368bc5348de0819a6f7b1b67ca25/xmlrpcssl-0.1.3-py2.7.egg\", \n                \"md5_digest\": \"732cabab2ac9e56b783df1d95c552566\", \n                \"downloads\": 19, \n                \"filename\": \"xmlrpcssl-0.1.3-py2.7.egg\", \n                \"packagetype\": \"bdist_egg\", \n                \"path\": \"5c/5c/449306768eec895060a2cf6c735628cd368bc5348de0819a6f7b1b67ca25/xmlrpcssl-0.1.3-py2.7.egg\", \n                \"size\": 5951\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-09T16:15:25\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/14/07/31293a5e4b632a550679d797211bd0dd325f12fe1bd82b31019ec30e7d08/xmlrpcssl-0.1.3.tar.gz\", \n                \"md5_digest\": \"460a1dc248483b7af00ae1220b1c52e9\", \n                \"downloads\": 19, \n                \"filename\": \"xmlrpcssl-0.1.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"14/07/31293a5e4b632a550679d797211bd0dd325f12fe1bd82b31019ec30e7d08/xmlrpcssl-0.1.3.tar.gz\", \n                \"size\": 27524\n            }\n        ], \n        \"0.1.3\": []\n    }, \n    \"urls\": []\n}"}}, "recorded_at": "2016-12-23T10:45:47"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/jonDel/xmlrpcssl", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EE:E6615EF:585D005B"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:45:47 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["29885c8097c6d503a86029451b2e021c"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["9a5acd52b97c4eb3979c243d942606d3"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.235010"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:45:47 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNTYzOTg3YWQyMTU3M2ZiN2RhNzhiM2NiOTQ2YzI4YmEiLCJzcHlfcmVwbyI6ImpvbkRlbC94bWxycGNzc2wiLCJzcHlfcmVwb19hdCI6MTQ4MjQ4OTk0NywiX2NzcmZfdG9rZW4iOiJjN29Mc252c21ObmJXUVc2WFZTNFoxN0Rjc09XbkxycTd2aTJtQmdpaVlJPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--a7985f16f5fc8b872b0b4f58c1e0ff98a6edd784; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/jonDel/xmlrpcssl", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:45:47"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/jonDel/xmlrpcssl/master/CHANGES.txt", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C16:51AF:484D542:585D005B"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:45:48 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1544-HHN"], "X-Fastly-Request-ID": ["3b06e296e69bb20cf98ad42d6747feb463d52e27"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489948.077028,VS0,VE114"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"55ad81499a01c470a56757836daf6ad4b1976fd6\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["101"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:50:48 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/jonDel/xmlrpcssl/master/CHANGES.txt", "body": {"base64_string": "H4sIAAAAAAAAAysz0DPUUTA00Dey0DcyMDRT0NVV8MzLLMlMzFEoSs1JTSxO1eMqAyrSMwYqM9Q3sIQrCyjKL8tMycxLVygoyi9ILVJIyU8uzU3NK0ksyczP4wIAzqkA2loAAAA=", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:45:48"}], "recorded_with": "betamax/0.8.0"}