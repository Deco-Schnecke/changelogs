{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/qiita/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["3855e163f3b84a4acdb5882e027a2346530e1b906636b6e414e7d04ee6ef0ad0"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:44:07 GMT"], "X-Served-By": ["cache-iad2132-IAD, cache-hhn1535-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489847.668768,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534605"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["83234"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["8081"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/qiita/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/qiita\", \n        \"author\": \"Shinya Ohyanagi\", \n        \"author_email\": \"sohyanagi@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"any\", \n        \"version\": \"0.1.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Qiita\\n=====\\n\\nPython wrapper for Qiita API v1.\\n\\n.. image:: https://secure.travis-ci.org/heavenshell/py-qiita.png\\n\\nInstallation\\n------------\\n\\n::\\n\\n  $ virtualenv --distribute qiita_sample\\n  $ source qiita_sample/bin/activate\\n  $ cd qiita_sample\\n  $ pip install qiita\\n\\nQiita depends on `Requests <http://docs.python-requests.org/en/latest/index.html>`_.\\n\\n\\nUsage\\n-----\\n\\nGet user's items\\n~~~~~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Items\\n\\n  client = Items()\\n  items = client.user_items('heavenshell')\\n\\n\\nGet tag's items\\n~~~~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Tags\\n\\n  client = Tags()\\n  items = client.tag_items('python')\\n\\nGet a specified item with comments and raw markdown content\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Items\\n\\n  client = Items()\\n  item_uuid = '1234567890abcdefg'\\n  items = client.item(item_uuid)\\n\\n\\nAuthenticated requests\\n----------------------\\n\\nLogin with \\\"username & password\\\" or \\\"token\\\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Client\\n\\n  client = Client(url_name='heavenshell', password='mysecret')\\n  token = client.token # => contains token\\n  # or\\n  client = Client(token='myauthtoken')\\n\\nGet my items\\n~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Items\\n\\n  client = Client(token='myauthtoken')\\n  items = client.user_item()\\n\\nPost/Update/Delete an item\\n~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Items\\n\\n  client = Client(token='myauthtoken')\\n  params = {\\n    'title': 'Hello',\\n    'body': 'markdown text',\\n    'tags': [{name: 'python', versions: ['2.6', '2.7']}],\\n    'private': False\\n  }\\n  # post\\n  item = client.post_item(params)\\n\\n  # update\\n  params['title'] = 'modified'\\n  client.update_item(item['uuid'], params)\\n\\n  # delete\\n  client.delete_item(item['uuid'])\\n\\nStock/Unstock item\\n~~~~~~~~~~~~~~~~~~\\n\\n::\\n\\n  # -*- coding: utf-8 -*-\\n  from qiita import Items\\n\\n  client = Items(token='myauthtoken')\\n  item_uuid = '1489e2b291fed74713b2'\\n  # Stock\\n  client.stock_item(item_uuid)\\n\\n  # Unstock\\n  client.unstock_item(item_uuid)\\n\\nContributing\\n------------\\n1. Fork it\\n2. Create your feature branch (git checkout -b my-new-feature)\\n3. Commit your changes (git commit -am 'Add some feature')\\n4. Push to the branch (git push origin my-new-feature)\\n5. Create new Pull Request\", \n        \"release_url\": \"http://pypi.python.org/pypi/qiita/0.1.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"Environment :: Web Environment\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Topic :: Internet :: WWW/HTTP\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"qiita\", \n        \"license\": \"BSD\", \n        \"summary\": \"Qiita api wrapper for Python\", \n        \"home_page\": \"http://github.com/heavenshell/py-qiita\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-10-21T05:13:39\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/63/b9/900b78bde808a72442733b3924203f841d70cb09fd2245b2d6811f75b026/qiita-0.1-py2.7.egg\", \n                \"md5_digest\": \"e5938218920f919a77201c45134ce31d\", \n                \"downloads\": 3649, \n                \"filename\": \"qiita-0.1-py2.7.egg\", \n                \"packagetype\": \"bdist_egg\", \n                \"path\": \"63/b9/900b78bde808a72442733b3924203f841d70cb09fd2245b2d6811f75b026/qiita-0.1-py2.7.egg\", \n                \"size\": 2202\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-10-21T05:13:36\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/75/e0/ac72ba0aff8d789bccbf939a08f7f96aced4e772a6dce234e96940a6f5a3/qiita-0.1.tar.gz\", \n                \"md5_digest\": \"c6af037c211c40ebe7fc5e341a9fa222\", \n                \"downloads\": 2036, \n                \"filename\": \"qiita-0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"75/e0/ac72ba0aff8d789bccbf939a08f7f96aced4e772a6dce234e96940a6f5a3/qiita-0.1.tar.gz\", \n                \"size\": 11625\n            }\n        ], \n        \"0.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-10-22T11:15:52\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/be/f2/9d861e18599e682f95d3c38b6f3d3fdb8be9f694d8de664ff65bcc28b5bc/qiita-0.1.1-py2.7.egg\", \n                \"md5_digest\": \"b8acd6203c4746b3d47702da414ceb04\", \n                \"downloads\": 2134, \n                \"filename\": \"qiita-0.1.1-py2.7.egg\", \n                \"packagetype\": \"bdist_egg\", \n                \"path\": \"be/f2/9d861e18599e682f95d3c38b6f3d3fdb8be9f694d8de664ff65bcc28b5bc/qiita-0.1.1-py2.7.egg\", \n                \"size\": 11670\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-10-22T11:15:50\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/d5/94/7aca80954a2a49bf76742070f42370876ae3c73ef646e1bf65d67287699f/qiita-0.1.1.tar.gz\", \n                \"md5_digest\": \"e324449d974e4f03537ad5268fbfd35a\", \n                \"downloads\": 2302, \n                \"filename\": \"qiita-0.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"d5/94/7aca80954a2a49bf76742070f42370876ae3c73ef646e1bf65d67287699f/qiita-0.1.1.tar.gz\", \n                \"size\": 13496\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2012-10-22T11:15:52\", \n            \"comment_text\": \"\", \n            \"python_version\": \"2.7\", \n            \"url\": \"https://pypi.python.org/packages/be/f2/9d861e18599e682f95d3c38b6f3d3fdb8be9f694d8de664ff65bcc28b5bc/qiita-0.1.1-py2.7.egg\", \n            \"md5_digest\": \"b8acd6203c4746b3d47702da414ceb04\", \n            \"downloads\": 2134, \n            \"filename\": \"qiita-0.1.1-py2.7.egg\", \n            \"packagetype\": \"bdist_egg\", \n            \"path\": \"be/f2/9d861e18599e682f95d3c38b6f3d3fdb8be9f694d8de664ff65bcc28b5bc/qiita-0.1.1-py2.7.egg\", \n            \"size\": 11670\n        }, \n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2012-10-22T11:15:50\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/d5/94/7aca80954a2a49bf76742070f42370876ae3c73ef646e1bf65d67287699f/qiita-0.1.1.tar.gz\", \n            \"md5_digest\": \"e324449d974e4f03537ad5268fbfd35a\", \n            \"downloads\": 2302, \n            \"filename\": \"qiita-0.1.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"d5/94/7aca80954a2a49bf76742070f42370876ae3c73ef646e1bf65d67287699f/qiita-0.1.1.tar.gz\", \n            \"size\": 13496\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:44:07"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "http://github.com/heavenshell/py-qiita", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Connection": ["close"], "Content-length": ["0"], "Location": ["https://github.com/heavenshell/py-qiita"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/heavenshell/py-qiita", "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:44:07"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/heavenshell/py-qiita", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EB:8FE65A5:585CFFF8"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:44:08 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["26049f47774ecce22e876a1fa55b2a77"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["3ec5e007e86e012076be558c5f05a18c"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.308089"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:44:08 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZGQ1ZjZkOWQwZDRhZmMyNjU1NGJlOGViZTMyZjQ2ZmEiLCJzcHlfcmVwbyI6ImhlYXZlbnNoZWxsL3B5LXFpaXRhIiwic3B5X3JlcG9fYXQiOjE0ODI0ODk4NDgsIl9jc3JmX3Rva2VuIjoiaGxSdU5lbFdMalozWFNrL1JvMS9jOW04QXlod1g5bVRCalBDWisxU05nQT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--f80c7e3319ee8521f734ad4a1e53b46d9ef8a82f; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/heavenshell/py-qiita", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:44:08"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/heavenshell/py-qiita/master/CHANGES.rst", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C25:773A:5364C3E:585CFFF8"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:44:08 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1547-HHN"], "X-Fastly-Request-ID": ["7f73bf88c018e262d7d75f75387c6602b46b225e"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489848.848940,VS0,VE121"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"b083fd2be20b4eb8cde0733993b03445e7572848\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["81"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:49:08 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/heavenshell/py-qiita/master/CHANGES.rst", "body": {"base64_string": "H4sIAAAAAAAAAzPQM9Qz5LIFAS4uLQW3zAqF4tSS0gK9gkorhZT81GKFvPwShbTMvBSFgsTk7MT0VI2SjAoFh9zEkpI8TT0uAHkRjmlAAAAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:44:08"}], "recorded_with": "betamax/0.8.0"}