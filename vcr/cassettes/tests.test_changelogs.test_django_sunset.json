{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/django_sunset/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "X-Cache": ["MISS, MISS"], "Accept-Ranges": ["bytes"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Connection": ["keep-alive"], "Server": ["nginx/1.10.2"], "Date": ["Fri, 23 Dec 2016 10:40:40 GMT"], "Age": ["0"], "X-Cache-Hits": ["0, 0"], "Content-Length": ["0"], "X-Frame-Options": ["deny"], "Location": ["/pypi/django-sunset/json"], "X-Content-Type-Options": ["nosniff"], "X-Served-By": ["cache-iad2129-IAD, cache-hhn1535-HHN"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Timer": ["S1482489640.584500,VS0,VE118"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["b0c5bde19f2f1b43fd936612b7b84422830013f667458bb35859a1879c876ef4"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/django_sunset/json", "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:40:40"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/django-sunset/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["fdd6caa2f598ee83872d79e82d635074faf96b24da192977c3bcc9834bd1a6d2"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:40:40 GMT"], "X-Served-By": ["cache-iad2120-IAD, cache-hhn1535-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489640.730193,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2535313"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["60385"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["14462"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/django-sunset/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"django settings\", \n        \"package_url\": \"http://pypi.python.org/pypi/django-sunset\", \n        \"author\": \"Rob Madole\", \n        \"author_email\": \"robmadole@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"django-sunset\\n=============\\n\\nDjango Sunset makes working with Django settings in a team environment or a\\nmulti-server deployment a bit easier.\\n\\nThe basic idea is that you separate your settings modules and based on the\\n**hostname** of the machine you are running on, do the appropriate thing.\\n\\nInstallation\\n------------\\n\\nUsing Pip:\\n\\n::\\n\\n    pip install django-sunset\\n\\nOr ``easy_install`` if you don't have Pip:\\n\\n::\\n\\n    easy_install django-sunset\\n\\nBasic Usage\\n-----------\\n\\nWhen you create a new project in Django a Python module called ``settings`` (a\\nfile called ``settings.py``) holds all the configuration for how your project\\nwill operate.\\n\\nIf you are new to Django, `this tutorial\\n<http://docs.djangoproject.com/en/dev/intro/tutorial01/>`_ can get you started.\\n\\nStart with a new project (``django-admin.py startproject mysite``)::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settings.py\\n        urls.py\\n\\n\\nRename the ``settings.py`` file to ``settingsbase.py`` ::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settingsbase.py\\n        urls.py\\n\\nLet's find out what your current hostname is ::\\n\\n    $ python -c 'import os; print os.uname()[1]'\\n    rob-madoles-macbook-pro.local\\n\\nMine is ``rob-madoles-macbook-pro.local``.  Throughout the examples I'll use\\nthis, substitute your own where appropriate.\\n\\nNow create ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro'))\\n\\n    from sunset.collection import *\\n\\nWe should have this ::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settings.py\\n        settingsbase.py\\n        urls.py\\n\\nKick Django off something like this ::\\n\\n    $ ./manage.py shell\\n    Python 2.7 (r27:82500, Aug 16 2010, 15:13:20)\\n    [GCC 4.2.1 (Apple Inc. build 5664)] on darwin\\n    Type \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.\\n    (InteractiveConsole)\\n    >>>\\n\\nLook again and you should see a ``settingslocal.py``.  It's empty but a comment\\nat the top to indicate you place your local settings here. ::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settings.py\\n        settingsbase.py\\n        settingslocal.py\\n        urls.py\\n\\nSince these settings are local to only your machine, you probably don't want\\nthem in the repository.  Add it to ``.gitignore`` or ``.hgignore`` or whatever\\nequivalent ignore file you have.\\n\\nGo ahead and make some changes in there, how about we change the database?\\n\\nEdit ``settingslocal.py`` ::\\n\\n    DEBUG = True\\n\\n    DATABASES = {\\n        'default': {\\n            'ENGINE': 'django.db.backends.sqlite3',\\n            'NAME': 'database.db',\\n        }\\n    }\\n\\nRun the Django shell again and inspect the value ::\\n\\n    $ ./manage.py shell\\n    Python 2.7 (r27:82500, Aug 16 2010, 15:13:20)\\n    [GCC 4.2.1 (Apple Inc. build 5664)] on darwin\\n    Type \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.\\n    (InteractiveConsole)\\n    >>> from django.conf import settings\\n    >>> print settings.DATABASES['default']['ENGINE']\\n    django.db.backends.sqlite3\\n    >>> print settings.DATABASES['default']['NAME']\\n    database.db\\n\\nGreat, you have local settings now and you don't have to touch the main\\n``settings.py`` file.\\n\\nBase your local settings on a template\\n--------------------------------------\\n\\nLet's take what we have in the previous example and expand a bit on it.  For our\\nteam we have quite a few settings and a template would be nicer to start with\\ninstead of an empty file.\\n\\nEdit ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro'))\\n\\n    from sunset.collection import *\\n\\nWe are adding this ::\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\nCreate an empty file called ``settingsdev.py`` ::\\n\\n    touch settingsdev.py\\n\\nMake the contents of ``settingsdev.py`` to this ::\\n\\n    DEBUG = True\\n\\n    DATABASES = {\\n        'default': {\\n            'ENGINE': 'django.db.backends.sqlite3',\\n            'NAME': 'database.db',\\n        }\\n    }\\n\\n    FACEBOOK_APP_ID = ''\\n    FACEBOOK_APP_SECRET = ''\\n    FACEBOOK_API_KEY = ''\\n\\nThat works better, each developer will not have to repeat the same typing.\\n\\nRemove your ``settingslocal.py`` so Django Sunset can recreate it for you.\\n::\\n\\n    rm settingslocal.py\\n\\nAnd again load up the Django shell ::\\n\\n    $ ./manage.py shell\\n    Python 2.7 (r27:82500, Aug 16 2010, 15:13:20)\\n    [GCC 4.2.1 (Apple Inc. build 5664)] on darwin\\n    Type \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.\\n    (InteractiveConsole)\\n\\nIf you look at ``settingslocal.py`` now you'll see the extra goodies.\\n\\nSettings for deployment or production\\n-------------------------------------\\n\\nSettings for developers are one thing, they change often and are not usually\\ntracked in a VCS.\\n\\nServers are a different story.  You usually control these pretty closely and\\nchange them seldom once they are running.\\n\\nSo for deployments the syntax is a bit different.\\n\\nCreate a directory called ``deployments``  and a file called ``web01.py`` ::\\n\\n    mkdir deployments\\n    touch deployments/__init__.py\\n    touch deploymnets/web01.py\\n\\nEdit ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\n    from deployments import web01\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro')\\n        api.deployment('web01', web01)\\n        )\\n\\n    from sunset.collection import *\\n\\nNotice that the ``api.deployment`` constructor takes 2 arguments.  The first is\\nthe partial hostname, the second is the module that will be added to the\\ncollection of settings if the hostname matches.\\n\\nNow you can edit the ``web01.py`` file and change whatever settings you like.\\n\\nAs a bonus, it's easy to impersonate a deployed server locally.  Simply set your\\nhostname as a deployment.\\n\\n::\\n\\n    api.roles(\\n        #api.dev('rob-madoles-macbook-pro')\\n        api.deployment('rob-madoles-macbook-pro', web01)\\n        api.deployment('web01', web01)\\n        )\\n\\n\\nIn the case that you have a deployment to the cloud and do not know the hostname\\nthat you code will be sitting in you can simply set the ignore_missing flag.\\n\\n::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\n    from deployments import web01\\n    from delpoyments import cloud\\n\\n    api.collect(cloud)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro'),\\n        api.deployment('web01', web01),\\n        ignore_missing=True)\\n\\n    from sunset.collection import *\\n\\nUsing one module for a group of settings\\n----------------------------------------\\n\\nWith Django Sunset you can separate your settings by hostname but there are\\nstill situations where this isn't always the best method.\\n\\nFor example, let's say one developer is responsible for setting up the Facebook\\nAPI keys for the team.  She's gone into Facebook and spent the last half-hour\\nmaking Applications and editing configurations.\\n\\nInstead of emailing everyone their keys, app id's and secrets she can create one\\nmodule that houses them all.\\n\\nEdit ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.collect(settingsdev)\\n\\n    from deployments import web01\\n\\n    from deployments import facebook\\n    api.collect(facebook)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro')\\n        api.deployment('web01', web01)\\n        )\\n\\n    from sunset.collection import *\\n\\nWhat we've added here is ::\\n\\n    from deployments import facebook\\n    api.collect(facebook)\\n\\nNow let's create ``deployments/facebook.py`` with the following contents ::\\n\\n    from sunset.api import hostname_like\\n\\n    if hostname_like('rob-madoles-macbook-pro'):\\n        FACEBOOK_APP_ID = '13782914721428'\\n        FACEBOOK_APP_SECRET = 'asdfh8a7f8f2238a8s7d68f72'\\n        FACEBOOK_API_KEY = '8a7f79829f6a6ft0aygafkgsdaf86t4ugyagtf8'\\n\\n    if hostname_like('ted-jones-macbook-pro'):\\n        FACEBOOK_APP_ID = '8723849237428'\\n        FACEBOOK_APP_SECRET = '8ffa23jk4fa9f34af3498afhf4'\\n        FACEBOOK_API_KEY = '123h129318hf91uwhd1937g8163g817317gd817'\\n\\n    if hostname_like('web01', 'web02', 'web03'):\\n        FACEBOOK_APP_ID = '8723849237428'\\n        FACEBOOK_APP_SECRET = '8ffa23jk4fa9f34af3498afhf4'\\n        FACEBOOK_API_KEY = '123h129318hf91uwhd1937g8163g817317gd817'\\n\\nSo now this module performs the hostname matching internally instead of relying\\non the roles.  Also notice how ``hostname_like`` can take multiple arguments\\nwhere if any of the hostnames match the settings will be applied.\\n\\nThe developer still has the opportunity to override the settings from the\\n``facebook`` module in their own ``settingslocal``.  The order in which API\\ncalls happen within the ``settings`` module is preserved.\\n\\nQuestions and issues\\n--------------------\\n\\nPlease enter issues in `GitHub <https://github.com/robmadole/django-sunset/issues>`_ or you can email me directory robmadole@gmail.com.\\n\\n\\nNews\\n====\\n\\n0.3\\n---\\n\\n*Release data: 31-Mar-2011*\\n\\n* Added ignore_missing keyword argument, will not complain about a hostname missing from the roles (thanks Travis Chase supercodepoet)\\n\\n0.2\\n---\\n\\n*Release date: 24-Nov-2010*\\n\\n* Updated documentation errors regarding dev templates (thanks Guntis Strazds)\\n* Updated roles module to support running Django from within the project (again thanks to Guntis)\\n* Python 2.7, 2.6, and 2.5 support\\n\\n0.1\\n---\\n\\n*Release date: 05-Nov-2010*\\n\\n* Initial release\", \n        \"release_url\": \"http://pypi.python.org/pypi/django-sunset/0.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 2, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"Framework :: Django\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: System Administrators\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Operating System :: OS Independent\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"django-sunset\", \n        \"license\": \"BSD\", \n        \"summary\": \"Handle Django settings in a bit more organized fashion\", \n        \"home_page\": \"http://github.com/robmadole/django-sunset\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-11-05T16:38:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ee/4a/658334041dde0943266d290354eab2d8a232b257dc296923b3fb18ce826e/django-sunset-0.1.tar.gz\", \n                \"md5_digest\": \"e0377be69415ff767e8cdb26de8560db\", \n                \"downloads\": 3072, \n                \"filename\": \"django-sunset-0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ee/4a/658334041dde0943266d290354eab2d8a232b257dc296923b3fb18ce826e/django-sunset-0.1.tar.gz\", \n                \"size\": 9052\n            }\n        ], \n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-03-31T15:41:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n                \"md5_digest\": \"1a35d8dc904d7a8f145c566a7933877f\", \n                \"downloads\": 3456, \n                \"filename\": \"django-sunset-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n                \"size\": 9649\n            }\n        ], \n        \"0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-11-24T21:21:26\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f4/e6/1fedddbd62a3bb5c8498bc3acdd578065566f40f78241202d47d608712cc/django-sunset-0.2.tar.gz\", \n                \"md5_digest\": \"1add9f38ed479c44889d56543f65bc1b\", \n                \"downloads\": 2646, \n                \"filename\": \"django-sunset-0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f4/e6/1fedddbd62a3bb5c8498bc3acdd578065566f40f78241202d47d608712cc/django-sunset-0.2.tar.gz\", \n                \"size\": 11919\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2011-03-31T15:41:11\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n            \"md5_digest\": \"1a35d8dc904d7a8f145c566a7933877f\", \n            \"downloads\": 3456, \n            \"filename\": \"django-sunset-0.3.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n            \"size\": 9649\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:40:40"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "http://github.com/robmadole/django-sunset", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Connection": ["close"], "Content-length": ["0"], "Location": ["https://github.com/robmadole/django-sunset"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/robmadole/django-sunset", "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:40:40"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/robmadole/django-sunset", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3ED:CA534CA:585CFF29"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:40:41 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["406ec24a019e3172bda0b95e34dd53f7"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["d6e698f25c0e98d09f86f790f151b5d4"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.304802"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:40:41 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMDNlY2Y5OTI0MjRiZThlYmNhMjdmY2ExMWEzODQ1NTkiLCJzcHlfcmVwbyI6InJvYm1hZG9sZS9kamFuZ28tc3Vuc2V0Iiwic3B5X3JlcG9fYXQiOjE0ODI0ODk2NDEsIl9jc3JmX3Rva2VuIjoiRElTUzN0SkRTZVllTXZVdWd2SWRmVzIrRFhIL0kvWkQ2U3hha2R0Nm1TQT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--09417d295c5ce3e96aebb8932915e919c3ea4e8b; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/robmadole/django-sunset", "body": {"base64_string": "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", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:40:41"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/robmadole/django-sunset/master/NEWS.txt", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C1B:73BF:5397085:585CFF29"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:40:42 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1534-HHN"], "X-Fastly-Request-ID": ["a69ff5a733111ab89b0ffc82b5de42a19ca4fc4b"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489641.917926,VS0,VE118"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"cdc3168bb74f7c8eb9aa8ccb7482880806c2ec63\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["319"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:45:42 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/robmadole/django-sunset/master/NEWS.txt", "body": {"base64_string": "H4sIAAAAAAAAA22PTU/DMAyG7/kVPrJpndqOgTSJAwIJcWBCfJyRaUybrY0rx900fj1Jp0lDkEMU2bHf51nTPpibeIzJ5wuTZZkx0xdqCQOBRcUVLIrsCSUr86KYxibcWksWXO1Z6KNzIThfw5YOexYLKPXQkdcZ7F3bgmeFiru+RecBP3lQQGg4qMeO4DT8JdyBNgTCLQW40Ab9NsCb4M4FuGsSSxh6koot9Uw6SbTlX1paQXmZrXmXaPOR9r1PdQuWqxEM1bEHEmEJIFSj2IRgaQdKCVTPCB4Gr5HgVQW/bZicrTuSdmyHlkA54fUsCjJ4n/bdb9DXfDTbO22ifhLshTdUKVxgjWNpjInzx6SU8HzQJhKW8+tZvK5mgN7Gx/IUkdSLf9Xz5W/1R+/UYRstx1/G/AAF7FS37QEAAA==", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:40:42"}], "recorded_with": "betamax/0.8.0"}