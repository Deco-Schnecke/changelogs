{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/promise/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"concurrent future deferred promise\", \n        \"package_url\": \"http://pypi.python.org/pypi/promise\", \n        \"author\": \"Syrus Akbary\", \n        \"author_email\": \"me@syrusakbary.com\", \n        \"download_url\": \"https://github.com/syrusakbary/promise/releases\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"2.0.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Promise\\n=======\\n\\nThis is a implementation of Promises in Python. It is a super set of\\nPromises/A+ designed to have readable, performant code and to provide\\njust the extensions that are absolutely necessary for using promises in\\nPython.\\n\\nIts fully compatible with the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__\\n\\n|travis| |pypi| |coveralls|\\n\\nInstallation\\n------------\\n\\n::\\n\\n    $ pip install promise\\n\\nUsage\\n-----\\n\\nThe example below shows how you can load the promise library. It then\\ndemonstrates creating a promise from scratch. You simply call\\n``Promise(fn)``. There is a complete specification for what is returned\\nby this method in\\n`Promises/A+ <http://promises-aplus.github.com/promises-spec/>`__.\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\n    promise = Promise(\\n        lambda resolve, reject: resolve('RESOLVED!')\\n    )\\n\\nAPI\\n---\\n\\nBefore all examples, you will need:\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\nPromise(resolver)\\n~~~~~~~~~~~~~~~~~\\n\\nThis creates and returns a new promise. ``resolver`` must be a function.\\nThe ``resolver`` function is passed two arguments:\\n\\n1. ``resolve`` should be called with a single argument. If it is called\\n   with a non-promise value then the promise is fulfilled with that\\n   value. If it is called with a promise (A) then the returned promise\\n   takes on the state of that new promise (A).\\n2. ``reject`` should be called with a single argument. The returned\\n   promise will be rejected with that argument.\\n\\nClass Methods\\n~~~~~~~~~~~~~\\n\\nThese methods are invoked by calling ``Promise.methodName``.\\n\\nPromise.resolve(value)\\n^^^^^^^^^^^^^^^^^^^^^^\\n\\nConverts values and foreign promises into Promises/A+ promises. If you\\npass it a value then it returns a Promise for that value. If you pass it\\nsomething that is close to a promise (such as a jQuery attempt at a\\npromise) it returns a Promise that takes on the state of ``value``\\n(rejected or fulfilled).\\n\\nPromise.reject(value)\\n^^^^^^^^^^^^^^^^^^^^^\\n\\nReturns a rejected promise with the given value.\\n\\nPromise.all(list)\\n^^^^^^^^^^^^^^^^^\\n\\nReturns a promise for a list. If it is called with a single argument\\nthen this returns a promise for a copy of that list with any promises\\nreplaced by their fulfilled values. e.g.\\n\\n.. code:: python\\n\\n    p = Promise.all([Promise.resolve('a'), 'b', Promise.resolve('c')]) \\\\\\n           .then(lambda res: res == ['a', 'b', 'c'])\\n\\n    assert p.get() is True\\n\\nPromise.cast(obj)\\n^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the ``obj`` act as a ``Promise`` if possible. Python\\n``Future``\\\\ s are supported, with a callback to ``promise.done`` when\\nresolved. Have the same effects as ``Promise.resolve(obj)``.\\n\\nPromise.for\\\\_dict(d)\\n^^^^^^^^^^^^^^^^^^^^\\n\\nA special function that takes a dictionary of promises and turns them\\ninto a promise for a dictionary of values. In other words, this turns an\\ndictionary of promises for values into a promise for a dictionary of\\nvalues.\\n\\nPromise.is\\\\_thenable(obj)\\n^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function checks if the ``obj`` is a ``Promise``, or could be\\n``cast``\\\\ ed.\\n\\nPromise.promisify(func)\\n^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the result of calling ``func`` in a ``Promise``\\ninstance.\\n\\nInstance Methods\\n~~~~~~~~~~~~~~~~\\n\\nThese methods are invoked on a promise instance by calling\\n``myPromise.methodName``\\n\\npromise.then(did\\\\_fulfill, did\\\\_reject)\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\nThis method follows the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__. It explains\\nthings very clearly so I recommend you read it.\\n\\nEither ``did_fulfill`` or ``did_reject`` will be called and they will\\nnot be called more than once. They will be passed a single argument and\\nwill always be called asynchronously (in the next turn of the event\\nloop).\\n\\nIf the promise is fulfilled then ``did_fulfill`` is called. If the\\npromise is rejected then ``did_reject`` is called.\\n\\nThe call to ``.then`` also returns a promise. If the handler that is\\ncalled returns a promise, the promise returned by ``.then`` takes on the\\nstate of that returned promise. If the handler that is called returns a\\nvalue that is not a promise, the promise returned by ``.then`` will be\\nfulfilled with that value. If the handler that is called throws an\\nexception then the promise returned by ``.then`` is rejected with that\\nexception.\\n\\npromise.catch(did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nSugar for ``promise.then(None, did_reject)``, to mirror ``catch`` in\\nsynchronous code.\\n\\npromise.done(did\\\\_fulfill, did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThe same semantics as ``.then`` except that it does not return a promise\\nand any exceptions are re-thrown so that they can be logged (crashing\\nthe application in non-browser environments)\\n\\nContributing\\n============\\n\\nAfter cloning this repo, ensure dependencies are installed by running:\\n\\n.. code:: sh\\n\\n    pip install -e \\\".[test]\\\"\\n\\nAfter developing, the full test suite can be evaluated by running:\\n\\n.. code:: sh\\n\\n    py.test tests --cov=promise --benchmark-skip # Use -v -s for verbose mode\\n\\nYou can also run the benchmarks with:\\n\\n.. code:: sh\\n\\n    py.test tests --benchmark-only\\n\\nNotes\\n=====\\n\\nThis package is heavily insipired in\\n`aplus <https://github.com/xogeny/aplus>`__.\\n\\nLicense\\n-------\\n\\n`MIT\\nLicense <https://github.com/syrusakbary/promise/blob/master/LICENSE>`__\\n\\n.. |travis| image:: https://img.shields.io/travis/syrusakbary/promise.svg?style=flat\\n   :target: https://travis-ci.org/syrusakbary/promise\\n.. |pypi| image:: https://img.shields.io/pypi/v/promise.svg?style=flat\\n   :target: https://pypi.python.org/pypi/promise\\n.. |coveralls| image:: https://coveralls.io/repos/syrusakbary/promise/badge.svg?branch=master&service=github\\n   :target: https://coveralls.io/github/syrusakbary/promise?branch=master\", \n        \"release_url\": \"http://pypi.python.org/pypi/promise/2.0.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 18, \n        \"classifiers\": [\n            \"Development Status :: 5 - Production/Stable\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Programming Language :: Python :: Implementation :: PyPy\", \n            \"Topic :: Software Development :: Libraries\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"promise\", \n        \"license\": \"MIT\", \n        \"summary\": \"Promises/A+ implementation for Python\", \n        \"home_page\": \"https://github.com/syrusakbary/promise\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-11-26T02:34:35\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"md5_digest\": \"142830cf2fa7f870ff1735e60a82abbd\", \n                \"downloads\": 15250, \n                \"filename\": \"promise-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"size\": 16511\n            }\n        ], \n        \"0.4.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-21T08:37:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"md5_digest\": \"8bd927abe12ebce1718b12c29345149d\", \n                \"downloads\": 4553, \n                \"filename\": \"promise-0.4.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"size\": 7309\n            }\n        ], \n        \"1.0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-15T22:50:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"md5_digest\": \"41848184c16b0c2315121da6b4966044\", \n                \"downloads\": 3426, \n                \"filename\": \"promise-1.0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"size\": 7810\n            }\n        ], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-12-02T05:00:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"md5_digest\": \"c285831b14dad740b4f574dff18ec765\", \n                \"downloads\": 4784, \n                \"filename\": \"promise-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"size\": 7835\n            }\n        ], \n        \"2.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-25T07:36:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"md5_digest\": \"40606222b53a3bfa6da3b5a1c45c08c0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"size\": 18516\n            }\n        ], \n        \"2.0.dev20170313081902\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:20:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"md5_digest\": \"5e5823253a32ace2ad826ddae3342799\", \n                \"downloads\": 25, \n                \"filename\": \"promise-2.0.dev20170313081902.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"size\": 17035\n            }\n        ], \n        \"2.0b1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-05T05:18:31\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"md5_digest\": \"b12d882a43df70b1c382d2803fddb948\", \n                \"downloads\": 75, \n                \"filename\": \"promise-2.0b1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"size\": 18300\n            }\n        ], \n        \"2.0.dev20170317055346\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-17T05:58:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"md5_digest\": \"cfe2956821c453101a187f7236ab21f9\", \n                \"downloads\": 98, \n                \"filename\": \"promise-2.0.dev20170317055346.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"size\": 18215\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-05-18T05:30:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"md5_digest\": \"b9fd5db07c313aa7025339ee92664d8a\", \n                \"downloads\": 1097, \n                \"filename\": \"promise-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"size\": 6824\n            }\n        ], \n        \"2.0rc1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-12T08:40:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"md5_digest\": \"41d9c1f002fe5a74dfe6c63b9d7fe91f\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc1.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"size\": 24617\n            }\n        ], \n        \"0.4.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-12T05:54:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"md5_digest\": \"36424ff3cb29f4331dbd14eefb58d54b\", \n                \"downloads\": 80, \n                \"filename\": \"promise-0.4.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"size\": 7419\n            }\n        ], \n        \"2.0rc2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-13T05:48:32\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"md5_digest\": \"49caa613f58d4eb4dad31860301031d0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"size\": 18490\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-04-14T05:46:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"md5_digest\": \"31855fcb6771fb97afc999733b1c28b6\", \n                \"downloads\": 3273, \n                \"filename\": \"promise-0.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"size\": 19765\n            }\n        ], \n        \"0.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-01-06T12:54:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"md5_digest\": \"7ba287ad9b1c93e8ee77090153cc5b0f\", \n                \"downloads\": 2504, \n                \"filename\": \"promise-0.2.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"size\": 18523\n            }\n        ], \n        \"0.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-12-08T06:21:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"md5_digest\": \"f62e80613e5447294d9e48f488be2a1d\", \n                \"downloads\": 2425, \n                \"filename\": \"promise-0.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"size\": 17804\n            }\n        ], \n        \"0.4.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-01T05:11:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"md5_digest\": \"740b807b11b7b21aaaee91340dc907f4\", \n                \"downloads\": 335, \n                \"filename\": \"promise-0.4.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"size\": 6877\n            }\n        ], \n        \"2.0.dev20170314074715\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-14T07:49:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"md5_digest\": \"eaf3886c186b6573f377e60bc92e4c23\", \n                \"downloads\": 22, \n                \"filename\": \"promise-2.0.dev20170314074715.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"size\": 18082\n            }\n        ], \n        \"2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-19T05:39:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"md5_digest\": \"fda4fd32e1f9c9aacbe988656df4df95\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"size\": 18497\n            }\n        ], \n        \"2.0.dev20170313082331\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:23:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"md5_digest\": \"bd13e695151c1dd9880da68c7e93eb94\", \n                \"downloads\": 24, \n                \"filename\": \"promise-2.0.dev20170313082331.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"size\": 18009\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2017-04-25T07:36:38\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n            \"md5_digest\": \"40606222b53a3bfa6da3b5a1c45c08c0\", \n            \"downloads\": 0, \n            \"filename\": \"promise-2.0.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n            \"size\": 18516\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2828078"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["ce380f717b1af588bde877c541b9bf70a531d1072ad41ae37c854c4680a9612b"], "Content-Length": ["22345"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 25 Apr 2017 14:26:53 GMT"], "Age": ["24599"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2131-IAD, cache-hhn1524-HHN"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["1, 1"], "X-Timer": ["S1493130414.942643,VS0,VE1"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/promise/json"}, "recorded_at": "2017-04-25T14:26:53"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 25 Apr 2017 14:26:54 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 25 Apr 2037 14:26:54 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNCwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--85d6e2c903e56c424e4df1670fd34a032466b54f; path=/; secure; HttpOnly"], "X-Request-Id": ["ffb300952c7417a5edf7301500693422"], "X-Runtime": ["0.201707"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["5b42481b4f9fd7828f4e35d2c7b2fdf0"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D1FB:65DC:631A752:95000CB:58FF5CAE"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise"}, "recorded_at": "2017-04-25T14:26:54"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNCwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--85d6e2c903e56c424e4df1670fd34a032466b54f"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise/releases"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 25 Apr 2017 14:26:55 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNCwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSJ9--59f102cab457a56b8e1f86d11b907eab8db0323a; path=/; secure; HttpOnly"], "X-Request-Id": ["aad05de3cf880610a0fb9e3698d60b10"], "X-Runtime": ["0.119585"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["a0387c52951b3c2853740ef9cede1dec"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D1FB:65DC:631A7BB:950013C:58FF5CAE"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise/releases"}, "recorded_at": "2017-04-25T14:26:55"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/promise/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"concurrent future deferred promise\", \n        \"package_url\": \"http://pypi.python.org/pypi/promise\", \n        \"author\": \"Syrus Akbary\", \n        \"author_email\": \"me@syrusakbary.com\", \n        \"download_url\": \"https://github.com/syrusakbary/promise/releases\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"2.0.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Promise\\n=======\\n\\nThis is a implementation of Promises in Python. It is a super set of\\nPromises/A+ designed to have readable, performant code and to provide\\njust the extensions that are absolutely necessary for using promises in\\nPython.\\n\\nIts fully compatible with the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__\\n\\n|travis| |pypi| |coveralls|\\n\\nInstallation\\n------------\\n\\n::\\n\\n    $ pip install promise\\n\\nUsage\\n-----\\n\\nThe example below shows how you can load the promise library. It then\\ndemonstrates creating a promise from scratch. You simply call\\n``Promise(fn)``. There is a complete specification for what is returned\\nby this method in\\n`Promises/A+ <http://promises-aplus.github.com/promises-spec/>`__.\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\n    promise = Promise(\\n        lambda resolve, reject: resolve('RESOLVED!')\\n    )\\n\\nAPI\\n---\\n\\nBefore all examples, you will need:\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\nPromise(resolver)\\n~~~~~~~~~~~~~~~~~\\n\\nThis creates and returns a new promise. ``resolver`` must be a function.\\nThe ``resolver`` function is passed two arguments:\\n\\n1. ``resolve`` should be called with a single argument. If it is called\\n   with a non-promise value then the promise is fulfilled with that\\n   value. If it is called with a promise (A) then the returned promise\\n   takes on the state of that new promise (A).\\n2. ``reject`` should be called with a single argument. The returned\\n   promise will be rejected with that argument.\\n\\nClass Methods\\n~~~~~~~~~~~~~\\n\\nThese methods are invoked by calling ``Promise.methodName``.\\n\\nPromise.resolve(value)\\n^^^^^^^^^^^^^^^^^^^^^^\\n\\nConverts values and foreign promises into Promises/A+ promises. If you\\npass it a value then it returns a Promise for that value. If you pass it\\nsomething that is close to a promise (such as a jQuery attempt at a\\npromise) it returns a Promise that takes on the state of ``value``\\n(rejected or fulfilled).\\n\\nPromise.reject(value)\\n^^^^^^^^^^^^^^^^^^^^^\\n\\nReturns a rejected promise with the given value.\\n\\nPromise.all(list)\\n^^^^^^^^^^^^^^^^^\\n\\nReturns a promise for a list. If it is called with a single argument\\nthen this returns a promise for a copy of that list with any promises\\nreplaced by their fulfilled values. e.g.\\n\\n.. code:: python\\n\\n    p = Promise.all([Promise.resolve('a'), 'b', Promise.resolve('c')]) \\\\\\n           .then(lambda res: res == ['a', 'b', 'c'])\\n\\n    assert p.get() is True\\n\\nPromise.cast(obj)\\n^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the ``obj`` act as a ``Promise`` if possible. Python\\n``Future``\\\\ s are supported, with a callback to ``promise.done`` when\\nresolved. Have the same effects as ``Promise.resolve(obj)``.\\n\\nPromise.for\\\\_dict(d)\\n^^^^^^^^^^^^^^^^^^^^\\n\\nA special function that takes a dictionary of promises and turns them\\ninto a promise for a dictionary of values. In other words, this turns an\\ndictionary of promises for values into a promise for a dictionary of\\nvalues.\\n\\nPromise.is\\\\_thenable(obj)\\n^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function checks if the ``obj`` is a ``Promise``, or could be\\n``cast``\\\\ ed.\\n\\nPromise.promisify(func)\\n^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the result of calling ``func`` in a ``Promise``\\ninstance.\\n\\nInstance Methods\\n~~~~~~~~~~~~~~~~\\n\\nThese methods are invoked on a promise instance by calling\\n``myPromise.methodName``\\n\\npromise.then(did\\\\_fulfill, did\\\\_reject)\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\nThis method follows the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__. It explains\\nthings very clearly so I recommend you read it.\\n\\nEither ``did_fulfill`` or ``did_reject`` will be called and they will\\nnot be called more than once. They will be passed a single argument and\\nwill always be called asynchronously (in the next turn of the event\\nloop).\\n\\nIf the promise is fulfilled then ``did_fulfill`` is called. If the\\npromise is rejected then ``did_reject`` is called.\\n\\nThe call to ``.then`` also returns a promise. If the handler that is\\ncalled returns a promise, the promise returned by ``.then`` takes on the\\nstate of that returned promise. If the handler that is called returns a\\nvalue that is not a promise, the promise returned by ``.then`` will be\\nfulfilled with that value. If the handler that is called throws an\\nexception then the promise returned by ``.then`` is rejected with that\\nexception.\\n\\npromise.catch(did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nSugar for ``promise.then(None, did_reject)``, to mirror ``catch`` in\\nsynchronous code.\\n\\npromise.done(did\\\\_fulfill, did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThe same semantics as ``.then`` except that it does not return a promise\\nand any exceptions are re-thrown so that they can be logged (crashing\\nthe application in non-browser environments)\\n\\nContributing\\n============\\n\\nAfter cloning this repo, ensure dependencies are installed by running:\\n\\n.. code:: sh\\n\\n    pip install -e \\\".[test]\\\"\\n\\nAfter developing, the full test suite can be evaluated by running:\\n\\n.. code:: sh\\n\\n    py.test tests --cov=promise --benchmark-skip # Use -v -s for verbose mode\\n\\nYou can also run the benchmarks with:\\n\\n.. code:: sh\\n\\n    py.test tests --benchmark-only\\n\\nNotes\\n=====\\n\\nThis package is heavily insipired in\\n`aplus <https://github.com/xogeny/aplus>`__.\\n\\nLicense\\n-------\\n\\n`MIT\\nLicense <https://github.com/syrusakbary/promise/blob/master/LICENSE>`__\\n\\n.. |travis| image:: https://img.shields.io/travis/syrusakbary/promise.svg?style=flat\\n   :target: https://travis-ci.org/syrusakbary/promise\\n.. |pypi| image:: https://img.shields.io/pypi/v/promise.svg?style=flat\\n   :target: https://pypi.python.org/pypi/promise\\n.. |coveralls| image:: https://coveralls.io/repos/syrusakbary/promise/badge.svg?branch=master&service=github\\n   :target: https://coveralls.io/github/syrusakbary/promise?branch=master\", \n        \"release_url\": \"http://pypi.python.org/pypi/promise/2.0.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 18, \n        \"classifiers\": [\n            \"Development Status :: 5 - Production/Stable\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Programming Language :: Python :: Implementation :: PyPy\", \n            \"Topic :: Software Development :: Libraries\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"promise\", \n        \"license\": \"MIT\", \n        \"summary\": \"Promises/A+ implementation for Python\", \n        \"home_page\": \"https://github.com/syrusakbary/promise\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-11-26T02:34:35\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"md5_digest\": \"142830cf2fa7f870ff1735e60a82abbd\", \n                \"downloads\": 15250, \n                \"filename\": \"promise-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"size\": 16511\n            }\n        ], \n        \"0.4.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-21T08:37:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"md5_digest\": \"8bd927abe12ebce1718b12c29345149d\", \n                \"downloads\": 4553, \n                \"filename\": \"promise-0.4.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"size\": 7309\n            }\n        ], \n        \"1.0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-15T22:50:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"md5_digest\": \"41848184c16b0c2315121da6b4966044\", \n                \"downloads\": 3426, \n                \"filename\": \"promise-1.0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"size\": 7810\n            }\n        ], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-12-02T05:00:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"md5_digest\": \"c285831b14dad740b4f574dff18ec765\", \n                \"downloads\": 4784, \n                \"filename\": \"promise-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"size\": 7835\n            }\n        ], \n        \"2.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-25T07:36:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"md5_digest\": \"40606222b53a3bfa6da3b5a1c45c08c0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"size\": 18516\n            }\n        ], \n        \"2.0.dev20170313081902\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:20:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"md5_digest\": \"5e5823253a32ace2ad826ddae3342799\", \n                \"downloads\": 25, \n                \"filename\": \"promise-2.0.dev20170313081902.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"size\": 17035\n            }\n        ], \n        \"2.0b1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-05T05:18:31\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"md5_digest\": \"b12d882a43df70b1c382d2803fddb948\", \n                \"downloads\": 75, \n                \"filename\": \"promise-2.0b1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"size\": 18300\n            }\n        ], \n        \"2.0.dev20170317055346\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-17T05:58:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"md5_digest\": \"cfe2956821c453101a187f7236ab21f9\", \n                \"downloads\": 98, \n                \"filename\": \"promise-2.0.dev20170317055346.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"size\": 18215\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-05-18T05:30:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"md5_digest\": \"b9fd5db07c313aa7025339ee92664d8a\", \n                \"downloads\": 1097, \n                \"filename\": \"promise-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"size\": 6824\n            }\n        ], \n        \"2.0rc1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-12T08:40:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"md5_digest\": \"41d9c1f002fe5a74dfe6c63b9d7fe91f\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc1.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"size\": 24617\n            }\n        ], \n        \"0.4.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-12T05:54:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"md5_digest\": \"36424ff3cb29f4331dbd14eefb58d54b\", \n                \"downloads\": 80, \n                \"filename\": \"promise-0.4.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"size\": 7419\n            }\n        ], \n        \"2.0rc2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-13T05:48:32\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"md5_digest\": \"49caa613f58d4eb4dad31860301031d0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"size\": 18490\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-04-14T05:46:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"md5_digest\": \"31855fcb6771fb97afc999733b1c28b6\", \n                \"downloads\": 3273, \n                \"filename\": \"promise-0.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"size\": 19765\n            }\n        ], \n        \"0.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-01-06T12:54:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"md5_digest\": \"7ba287ad9b1c93e8ee77090153cc5b0f\", \n                \"downloads\": 2504, \n                \"filename\": \"promise-0.2.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"size\": 18523\n            }\n        ], \n        \"0.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-12-08T06:21:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"md5_digest\": \"f62e80613e5447294d9e48f488be2a1d\", \n                \"downloads\": 2425, \n                \"filename\": \"promise-0.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"size\": 17804\n            }\n        ], \n        \"0.4.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-01T05:11:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"md5_digest\": \"740b807b11b7b21aaaee91340dc907f4\", \n                \"downloads\": 335, \n                \"filename\": \"promise-0.4.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"size\": 6877\n            }\n        ], \n        \"2.0.dev20170314074715\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-14T07:49:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"md5_digest\": \"eaf3886c186b6573f377e60bc92e4c23\", \n                \"downloads\": 22, \n                \"filename\": \"promise-2.0.dev20170314074715.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"size\": 18082\n            }\n        ], \n        \"2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-19T05:39:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"md5_digest\": \"fda4fd32e1f9c9aacbe988656df4df95\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"size\": 18497\n            }\n        ], \n        \"2.0.dev20170313082331\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:23:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"md5_digest\": \"bd13e695151c1dd9880da68c7e93eb94\", \n                \"downloads\": 24, \n                \"filename\": \"promise-2.0.dev20170313082331.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"size\": 18009\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2017-04-25T07:36:38\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n            \"md5_digest\": \"40606222b53a3bfa6da3b5a1c45c08c0\", \n            \"downloads\": 0, \n            \"filename\": \"promise-2.0.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n            \"size\": 18516\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2828078"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["ce380f717b1af588bde877c541b9bf70a531d1072ad41ae37c854c4680a9612b"], "Content-Length": ["22345"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 25 Apr 2017 14:26:55 GMT"], "Age": ["24600"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2131-IAD, cache-hhn1524-HHN"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["1, 2"], "X-Timer": ["S1493130415.079708,VS0,VE0"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/promise/json"}, "recorded_at": "2017-04-25T14:26:55"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNCwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSJ9--59f102cab457a56b8e1f86d11b907eab8db0323a"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 25 Apr 2017 14:26:55 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNSwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--5b71319f6e9ead8257b2aa4f18c2ea0e45fe0995; path=/; secure; HttpOnly"], "X-Request-Id": ["46fa6b35b1d84938c00d7e1f2a5cd721"], "X-Runtime": ["0.170269"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["5b42481b4f9fd7828f4e35d2c7b2fdf0"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D1FB:65DC:631A7FE:95001C5:58FF5CAF"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise"}, "recorded_at": "2017-04-25T14:26:55"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNSwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--5b71319f6e9ead8257b2aa4f18c2ea0e45fe0995"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise/releases"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 25 Apr 2017 14:26:55 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNSwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSJ9--de4f52fee6117d1a50e9251099f36257d8990a36; path=/; secure; HttpOnly"], "X-Request-Id": ["117c1a1aae5723c77fdf890bdf193608"], "X-Runtime": ["0.162305"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["e878d09eac725c89f5f15204c1326660"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D1FB:65DC:631A854:9500248:58FF5CAF"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise/releases"}, "recorded_at": "2017-04-25T14:26:55"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Authorization": ["token foo"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiNTg5YWY5MGM5ZGEyMTNlODdjMjUyNzc1NTI5MDk2OGQiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5MzEzMDQxNSwiX2NzcmZfdG9rZW4iOiJVWjFFN3J5QTNhN1BOSkluMFF0WkhrQ2tOamhjVU9kZGxVNUVTc1duQzFFPSJ9--de4f52fee6117d1a50e9251099f36257d8990a36"]}, "method": "GET", "uri": "https://api.github.com/repos/syrusakbary/promise/releases"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA+1YbW/bNhD+K4SKAWlh69WKbQFDMWTYx2HAsi9LC5uiTjYbSRRIyq5r9L/vqLfEL8mS1P5QwEACA9LdQ+rh8Z67u9talcysyFpqXarIcWjJ7QXXyyq2mcgdCaVQjtrIStH7mMqNU0qRcwX4JgOqQDnXnjcee1NrYFGlQKvZiQCdBg5xqzITNNnDbR6qt222xd5+LGgOg4zGkH3HhZY6z/aWecTFsyxounBWvu3aLuLwxIpaWgYWvpmZZZDk3kBTuQA9Q4Zzrrla4rucKg0SnfdtE0lTbUUpzRQgx5VeCmlFWysTC16g46NttUt7k4kfjtF2RXGh/fOoHyqvJa5SIJkoNBS6PvDKabw/rn4NEG4hWxDzSZY5i+eixYDtRMtrOEXbVGSZWCPG/p53g/JgGad37EF4sXgbCDpuHaGXgMTh55iwWHD1f2F9uKXaaeuYnxlPDIxC3iXsx/HehTsEat1wU+sC97Ot72SNV8WKSV5qLopXM7bjjGBCLmjBv9E3gaGzQow6WbyW9doJnWGFIfhq78Zri1mJryjbGFokMOAr5PltiHvuCKg3pbm8/2A0GNa5hhlNcnP36jv5fWCVEtp02N9TJoFq3ATFq2v5rjceuqOhN711wyjwo1HwL0KVVZzh5X/CKoy82qpNg9HdZ5NLZEyz/Rz14pzduj8kqm+8/BG81v0BLxbJBr/3HblZ0mIBmKI+yU+F+b9dckXwjxLMMmUGGrINkbCWXGPuISu89BjGRKRk/lejMHPCC1JuMN0VAxKj1CTmAV5MUmVa0mEJMhUyp4UmtEgIJo5hDrmQG3IXZxXEXCb2F/X5qlO2R5m8BH1P0VEUYuV0xs570mob4WaHOcZjfR3s7hs+kD9hTe4STKBGkEAeBT8mE3EmYqfJ8L2APsDY5eb93ppmyQ89FbYEJbIVzEkh1oQyrWoeFKoKoerBjKGGzA9cvwDTSKZqnAnmE80ZyQGZTcgVL1B3aGKYp0gwvi0YEFHAgGT8HupDkLDiolLdKan3zRqGje60bAzLOUlxA8fYw09pubVR9+ZEUiwhEgJfGTTpq94bL1hWJUDwdBnElN3XzH8gN5XSIieK4VWpMowUggf/KE5qdqqdo3r3jvwOuG9Wn+DDAfbbbbbD080jZtKqYMacrCUtMbwGyDLVuEtglYaG884GQ7LSGMC6kgVKBnLXx61NbpAM8/DYaghPuzNYUQxUsuZZRmIgSbvhJtAL+Kp7wlsiehLTKkvRq967BFMxJESLB5ITMetM2nDo6JdgwgGSudODNY+ew2otDJT1ffDjJeNo4gXh1O+T2/Oa8YIatAU8S8m4i33qktHDktFDIkx91a60WzJ2Bi8pGTvbS8m438ccllWXkvH5W3fI2KVkbDqk/SYHC/KdivNUJeP10POHrn/rjqJwGo3C4yVjb4WFpRcF7rlKxi63nKpk7PCOlIzFkMy5mmGJU9A4a6ueRmqx2LmVFT4yFQATUqDsF6BsMondJExokDDqJ9Pp9diLJ747Gk8gHY+CMKDMH7HpOD6VggXTyXRiev0TDT1GDeB5FGwH+wwK1ulXs86BfpkL8YKBB0YEGZK/m/LUNF2k7QRMe3iRtIuk4fDkMgXBEd2BAP00UxAUK3fohbc+jkCmkT9+UtIaqyByJ5F7tikIJhzMLCcUNERr5ey3JMGWrG2161yGzSu7N03hVaXMT74xXT+2ldjMm/kFNr84MjJdMRM4DaEL7IMF8Vz3F/tEmhUEo2vfM1PdE2lWC3gWzdrFPrVmufaoH9S3K+2qVmdwRLc8f0x910/DMEjdcQAhm0w9P/DYxPfH7HriusmI+Z4JrW6U36FdROwiYhcRe6KL+olEzA2H3qQe5WNf9qSIuddD1zNWLkrd9Fx9WZdbTiVjHV4rZH9wiSPdR+P5bpBoROnzf1E+dkI/HgAA"}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 25 Apr 2017 14:26:56 GMT"], "Content-Type": ["application/json; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "X-RateLimit-Limit": ["5000"], "X-RateLimit-Remaining": ["4962"], "X-RateLimit-Reset": ["1493132289"], "Cache-Control": ["private, max-age=60, s-maxage=60"], "Vary": ["Accept, Authorization, Cookie, X-GitHub-OTP", "Accept-Encoding"], "ETag": ["W/\"e995646064c5abc0d22a5e2c141fc251\""], "X-OAuth-Scopes": ["repo, user"], "X-Accepted-OAuth-Scopes": [""], "X-GitHub-Media-Type": ["github.v3; format=json"], "Access-Control-Expose-Headers": ["ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"], "Access-Control-Allow-Origin": ["*"], "Content-Security-Policy": ["default-src 'none'"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["a7f8a126c9ed3f1c4715a34c0ddc7290"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D1FC:08A3:412C489:540E5AD:58FF5CAF"]}, "status": {"code": 200, "message": "OK"}, "url": "https://api.github.com/repos/syrusakbary/promise/releases"}, "recorded_at": "2017-04-25T14:26:56"}], "recorded_with": "betamax/0.8.0"}
