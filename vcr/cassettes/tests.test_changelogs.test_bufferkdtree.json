{"http_interactions": [{"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["HIT, HIT"], "Via": ["1.1 varnish", "1.1 varnish"], "Date": ["Fri, 23 Dec 2016 10:30:33 GMT"], "Server": ["nginx/1.10.2"], "Content-Disposition": ["inline"], "Content-Length": ["9107"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Cache-Control": ["max-age=600, public"], "X-Served-By": ["cache-iad2126-IAD, cache-hhn1525-HHN"], "Age": ["25138"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Fastly-Debug-Digest": ["9ef02a55dda1f6b5026b5e76559b17103974294611812ef551352a8e6f11855e"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Content-Type-Options": ["nosniff"], "X-PYPI-LAST-SERIAL": ["2536015"], "Connection": ["keep-alive"], "X-Timer": ["S1482489033.361966,VS0,VE0"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/bufferkdtree/json", "body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/bufferkdtree\", \n        \"author\": \"Fabian Gieseke\", \n        \"author_email\": \"fabian.gieseke@di.ku.dk\", \n        \"download_url\": \"https://github.com/gieseke/bufferkdtree\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"1.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"============\\nbufferkdtree\\n============\\n\\nThe bufferkdtree package is a Python library that aims at accelerating nearest neighbor computations using both k-d trees and modern many-core devices such as graphics processing units (GPUs). The implementation is based on `OpenCL <https://www.khronos.org/opencl>`_. \\n\\nThe buffer k-d tree technique can be seen as an intermediate version between a standard parallel k-d tree traversal (on multi-core systems) and a massively-parallel brute-force implementation for nearest neighbor search. In particular, it makes use of the top of a standard k-d tree (which induces a spatial subdivision of the space) and resorts to a simple yet efficient brute-force implementation for processing chunks of \\\"big\\\" leaves. The implementation is well-suited for data sets with a large reference set (e.g., 1,000,000 points) and a huge query set (e.g., 10,000,000 points) given a moderate dimensionality of the search space (e.g., from d=5 to d=50).\\n\\n=============\\nDocumentation\\n=============\\n\\nSee the `documentation <http://bufferkdtree.readthedocs.org>`_ for details and examples.\\n\\n============\\nDependencies\\n============\\n\\nThe bufferkdtree package has been tested under Python 2.6/2.7/3.*. The required Python dependencies are:\\n\\n- NumPy >= 1.11.0\\n\\nFurther, `Swig <http://www.swig.org>`_, `OpenCL <https://www.khronos.org/opencl>`_ (version >= 1.2), `setuptools <https://pypi.python.org/pypi/setuptools>`_, and a working C/C++ compiler need to be available. See the `documentation <http://bufferkdtree.readthedocs.org>`_ for more details.\\n\\n==========\\nQuickstart\\n==========\\n\\nThe package can easily be installed via pip via::\\n\\n  pip install bufferkdtree\\n\\nTo install the package from the sources, first get the current stable release via::\\n\\n  git clone https://github.com/gieseke/bufferkdtree.git\\n\\nAfterwards, on Linux systems, you can install the package locally for the current user via::\\n\\n  python setup.py install --user\\n\\nOn Debian/Ubuntu systems, the package can be installed globally for all users via::\\n\\n  python setup.py build\\n  sudo python setup.py install\\n\\n==========\\nDisclaimer\\n==========\\n\\nThe source code is published under the GNU General Public License (GPLv2). The authors are not responsible for any implications that stem from the use of this software.\", \n        \"release_url\": \"http://pypi.python.org/pypi/bufferkdtree/1.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 6, \n        \"classifiers\": [\n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: Science/Research\", \n            \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\", \n            \"Programming Language :: C\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.6\", \n            \"Programming Language :: Python :: 2.7\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"bufferkdtree\", \n        \"license\": \"GNU GENERAL PUBLIC LICENSE Version 2\", \n        \"summary\": \"A Python library for large-scale exact nearest neighbor search using Buffer k-d Trees (bufferkdtree).\", \n        \"home_page\": \"https://github.com/gieseke/bufferkdtree\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"1.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-14T08:33:28\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/34/78/f2127a6c7e6da046aef7351fcc75eb94ee10b220e97f86f1335f5ed95446/bufferkdtree-1.1.1.tar.gz\", \n                \"md5_digest\": \"5224f193f8cc8c78b2597955e944ee94\", \n                \"downloads\": 786, \n                \"filename\": \"bufferkdtree-1.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"34/78/f2127a6c7e6da046aef7351fcc75eb94ee10b220e97f86f1335f5ed95446/bufferkdtree-1.1.1.tar.gz\", \n                \"size\": 173893\n            }\n        ], \n        \"1.0\": [], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-10-01T08:41:36\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/df/c4/60f36110e2157717e7b4a278a62d43d0140761637541f1ec7cecd47ef305/bufferkdtree-1.0.1.tar.gz\", \n                \"md5_digest\": \"5426f26424093580f45b10500fcb5697\", \n                \"downloads\": 697, \n                \"filename\": \"bufferkdtree-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"df/c4/60f36110e2157717e7b4a278a62d43d0140761637541f1ec7cecd47ef305/bufferkdtree-1.0.1.tar.gz\", \n                \"size\": 98168\n            }\n        ], \n        \"1.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-10-01T17:06:53\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/41/b2/dcba48b531a7401e915771881eb4cca00f7e53d75d2412c080244f464e4f/bufferkdtree-1.0.2.tar.gz\", \n                \"md5_digest\": \"f19f907db48b6a9eb47b444954103eb6\", \n                \"downloads\": 709, \n                \"filename\": \"bufferkdtree-1.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"41/b2/dcba48b531a7401e915771881eb4cca00f7e53d75d2412c080244f464e4f/bufferkdtree-1.0.2.tar.gz\", \n                \"size\": 99516\n            }\n        ], \n        \"1.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-11T14:54:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f0/34/2c4c1dd55cd27095ad87217f12a1dd213c92656d3c4c3a14156628833ead/bufferkdtree-1.3.tar.gz\", \n                \"md5_digest\": \"b9a7c36d44670d47528cdb949476fff8\", \n                \"downloads\": 27, \n                \"filename\": \"bufferkdtree-1.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f0/34/2c4c1dd55cd27095ad87217f12a1dd213c92656d3c4c3a14156628833ead/bufferkdtree-1.3.tar.gz\", \n                \"size\": 192019\n            }\n        ], \n        \"1.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-07-27T14:58:21\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/38/48/bde2e6b2eab221423189e4f13d423590f140d0004ead4512777878adf4ea/bufferkdtree-1.2.tar.gz\", \n                \"md5_digest\": \"9b6867485e5b9928040e47fe72151f03\", \n                \"downloads\": 129, \n                \"filename\": \"bufferkdtree-1.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"38/48/bde2e6b2eab221423189e4f13d423590f140d0004ead4512777878adf4ea/bufferkdtree-1.2.tar.gz\", \n                \"size\": 184666\n            }\n        ], \n        \"1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-01T15:14:25\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/c5/ae/48b9239c4e631be078ebc8b5496440981bdc8555b2d1a5d07d88c42fdfb8/bufferkdtree-1.1.tar.gz\", \n                \"md5_digest\": \"140e22947d1daf66991c07d870b03f9c\", \n                \"downloads\": 493, \n                \"filename\": \"bufferkdtree-1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"c5/ae/48b9239c4e631be078ebc8b5496440981bdc8555b2d1a5d07d88c42fdfb8/bufferkdtree-1.1.tar.gz\", \n                \"size\": 173727\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-11-11T14:54:46\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/f0/34/2c4c1dd55cd27095ad87217f12a1dd213c92656d3c4c3a14156628833ead/bufferkdtree-1.3.tar.gz\", \n            \"md5_digest\": \"b9a7c36d44670d47528cdb949476fff8\", \n            \"downloads\": 27, \n            \"filename\": \"bufferkdtree-1.3.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"f0/34/2c4c1dd55cd27095ad87217f12a1dd213c92656d3c4c3a14156628833ead/bufferkdtree-1.3.tar.gz\", \n            \"size\": 192019\n        }\n    ]\n}", "encoding": "UTF-8"}}, "recorded_at": "2016-12-23T10:30:33", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/bufferkdtree/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["87f5c5d7dd60f60a2cf951a9aeddef08"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:33 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "X-Runtime": ["0.100242"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8D0FE7:585CFCC9"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["dea5453a525fd07ee5d08f9da2c7636b"], "Content-Encoding": ["gzip"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:30:33 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMWRiYjJjMzk4ZDk3Nzg5ZWFjMmFlYTI4NjA2MjA4MjciLCJzcHlfcmVwbyI6ImdpZXNla2UvYnVmZmVya2R0cmVlIiwic3B5X3JlcG9fYXQiOjE0ODI0ODkwMzMsIl9jc3JmX3Rva2VuIjoiZEdpZm1mQ2ZNcEdhSVBqaDVFa24vUFJSVnc2RGs0RHErTklyNkxZanpxbz0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--bb75ea9f3bca009393741bfc53ebb51f0f96785c; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/gieseke/bufferkdtree", "body": {"encoding": "utf-8", "base64_string": ""}}, "recorded_at": "2016-12-23T10:30:34", "request": {"method": "GET", "uri": "https://github.com/gieseke/bufferkdtree", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["75d72dcf27484631bfac6100aeeba60c"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:34 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "X-Runtime": ["0.056408"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8D1029:585CFCC9"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["509a74dd2b8f1cf1c0b96b86a5ed86b6"], "Content-Encoding": ["gzip"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMWRiYjJjMzk4ZDk3Nzg5ZWFjMmFlYTI4NjA2MjA4MjciLCJzcHlfcmVwbyI6ImdpZXNla2UvYnVmZmVya2R0cmVlIiwic3B5X3JlcG9fYXQiOjE0ODI0ODkwMzQsIl9jc3JmX3Rva2VuIjoiZEdpZm1mQ2ZNcEdhSVBqaDVFa24vUFJSVnc2RGs0RHErTklyNkxZanpxbz0ifQ%3D%3D--c336c4668fbec0f02e8e1f17041a38a333d77ed6; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/gieseke/bufferkdtree/tree/master/docs", "body": {"encoding": "utf-8", "base64_string": ""}}, "recorded_at": "2016-12-23T10:30:34", "request": {"method": "GET", "uri": "https://github.com/gieseke/bufferkdtree/tree/master/docs", "headers": {"Accept": ["*/*"], "Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMWRiYjJjMzk4ZDk3Nzg5ZWFjMmFlYTI4NjA2MjA4MjciLCJzcHlfcmVwbyI6ImdpZXNla2UvYnVmZmVya2R0cmVlIiwic3B5X3JlcG9fYXQiOjE0ODI0ODkwMzMsIl9jc3JmX3Rva2VuIjoiZEdpZm1mQ2ZNcEdhSVBqaDVFa24vUFJSVnc2RGs0RHErTklyNkxZanpxbz0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--bb75ea9f3bca009393741bfc53ebb51f0f96785c; logged_in=no"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["MISS"], "Via": ["1.1 varnish"], "Vary": ["Authorization,Accept-Encoding"], "Date": ["Fri, 23 Dec 2016 10:30:34 GMT"], "Content-Length": ["686"], "Content-Encoding": ["gzip"], "X-XSS-Protection": ["1; mode=block"], "Expires": ["Fri, 23 Dec 2016 10:35:34 GMT"], "Cache-Control": ["max-age=300"], "X-Served-By": ["cache-hhn1520-HHN"], "X-Fastly-Request-ID": ["bdaf5191350cf893cc0fb7b7f88603cd81f70233"], "X-Cache-Hits": ["0"], "X-GitHub-Request-Id": ["C71B4C1C:2B4B:4EB956C:585CFCCA"], "Content-Type": ["text/plain; charset=utf-8"], "X-Content-Type-Options": ["nosniff"], "Connection": ["keep-alive"], "X-Timer": ["S1482489034.295339,VS0,VE121"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "ETag": ["\"a9efab8cbb0ad38792a68cbf9ae2f31e52486133\""], "Source-Age": ["0"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Geo-Block-List": [""]}, "url": "https://raw.githubusercontent.com/gieseke/bufferkdtree/master/docs/changes.rst", "body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA61UXU/bMBR976+4bw2INBS0PUzbJFQ0poltaIhncOzbxEtie/6g9N/vOk5KKNIG09KHpIl9zrnnHt/FAvLDHKzz8T6brWqmKnSzD+mazX5gi8whLBenkH3T99iVaOHkePn2YJb/6Zodwo0RzKMAoXnoUHnmpVaQbWrJa1B6A6x1GqTibRDogO0t1GvwNcKq+G5QrS7B6WA5AtcCDwj9TDBD6MWZEMSBD6wzLSnffSBg51nbJjBjNUfnIMNFtTiC1dUNlFSXgCYX4C0SP2eqV1UilEG2HjbS1zp4GPmDMdr6yH3dEXCvBDot5FrynoVqUII2V2v5QFIm5p1A9iW02xcal0oa+GCtLTkTyhapCuTSEdNu0dWWNCo4HVfvxJEKSDIO4RPdBXTYabsFktRAdnfxeQnva++Ne1cUFVUaygXXHT2iwwaLMqzXaBsRvSmkcwFdsfx4d3swLYt+kJ0j36XizT+m4gnoqyFTfRurVQWGWdahp73MOVmpSEFRgHmjUFZ1qa2bkxXkmogJK7WnLI5fikbc9gXHbCzMtu/n49fkye1gyrBm14qvofUyv6BkjZ3zGkobPObUQkouM5RCRtnPYktLVLzumG3ABGu0QzdJ9aQMh95LVbk+B0nBLrQgY+gfXRylPGIP52Lq73FM4zUSzUstzifC4tEQMhqdTtRT5OX/RB4b68ZAPyV7HVWPFudcx36SkTbh0NvhBG0stQdtstnXz82l2THvuzk/ojClnMTHXSjSm9jEK7SE0jHFexAbxybBDC2MiWtE3vcvzaA9IkJIWUqDJz/He0lI03mwz/o8CJfMVpg7zto4MmkU2sD7Sfiy7X8T8CsgzRJTx15k8Y+ME9zi2Lx+/gKvg2qGXMdcXptaqoe9o/8b825rcoQGAAA="}}, "recorded_at": "2016-12-23T10:30:34", "request": {"method": "GET", "uri": "https://raw.githubusercontent.com/gieseke/bufferkdtree/master/docs/changes.rst", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}], "recorded_with": "betamax/0.8.0"}