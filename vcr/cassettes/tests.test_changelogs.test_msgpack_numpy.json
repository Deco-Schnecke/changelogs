{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/msgpack_numpy/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "X-Cache": ["MISS, MISS"], "Accept-Ranges": ["bytes"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Connection": ["keep-alive"], "Server": ["nginx/1.10.2"], "Date": ["Fri, 23 Dec 2016 10:42:59 GMT"], "Age": ["0"], "X-Cache-Hits": ["0, 0"], "Content-Length": ["0"], "X-Frame-Options": ["deny"], "Location": ["/pypi/msgpack-numpy/json"], "X-Content-Type-Options": ["nosniff"], "X-Served-By": ["cache-iad2123-IAD, cache-hhn1540-HHN"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Timer": ["S1482489779.183504,VS0,VE109"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["e98aa23f2ff412055bae196812e2e17bc7947b30dfa3074305dec01681f67c59"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/msgpack_numpy/json", "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:42:59"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/msgpack-numpy/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["e6cd2273c22b57ff1ca3e27c4fb0e2dea45caed3d5a3c817bd22418d5d43e39c"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:42:59 GMT"], "X-Served-By": ["cache-iad2137-IAD, cache-hhn1540-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489779.319792,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534581"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["84202"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["6978"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/msgpack-numpy/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"msgpack, numpy\", \n        \"package_url\": \"http://pypi.python.org/pypi/msgpack-numpy\", \n        \"author\": \"Lev Givon\", \n        \"author_email\": \"lev@columbia.edu\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.3.7\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Package Description\\r\\n-------------------\\r\\nThis package provides encoding and decoding routines that enable the\\r\\nserialization and deserialization of numerical and array data types provided by \\r\\n`numpy <http://www.numpy.org/>`_ using the highly efficient\\r\\n`msgpack <http://msgpack.org/>`_ format. Serialization of Python's\\r\\nnative complex data types is also supported.\\r\\n\\r\\n.. image:: https://img.shields.io/pypi/v/msgpack-numpy.svg\\r\\n    :target: https://pypi.python.org/pypi/msgpack-numpy\\r\\n    :alt: Latest Version\\r\\n.. image:: https://img.shields.io/pypi/dm/msgpack-numpy.svg\\r\\n    :target: https://pypi.python.org/pypi/msgpack-numpy\\r\\n    :alt: Downloads\\r\\n\\r\\nInstallation\\r\\n------------\\r\\nmsgpack-numpy requires msgpack-python and numpy. If you \\r\\nhave `pip <http://www.pip-installer.org/>`_ installed on your\\r\\nsystem, run ::\\r\\n\\r\\n    pip install msgpack-numpy\\r\\n\\r\\nto install the package and all dependencies. You can also download \\r\\nthe source tarball, unpack it, and run ::\\r\\n\\r\\n    python setup.py install\\r\\n\\r\\nfrom within the source directory.\\r\\n\\r\\nUsage\\r\\n-----\\r\\nThe easiest way to use msgpack-numpy is to call its monkey patching\\r\\nfunction after importing the Python msgpack package: ::\\r\\n\\r\\n    import msgpack\\r\\n    import msgpack_numpy as m\\r\\n    m.patch()\\r\\n\\r\\nThis will automatically force all msgpack serialization and deserialization\\r\\nroutines (and other packages that use them) to become numpy-aware. \\r\\nOf course, one can also manually pass the encoder and \\r\\ndecoder provided by msgpack-numpy to the msgpack routines: ::\\r\\n\\r\\n    import msgpack\\r\\n    import msgpack_numpy as m\\r\\n    import numpy as np\\r\\n\\r\\n    x = np.random.rand(5)\\r\\n    x_enc = msgpack.packb(x, default=m.encode)\\r\\n    x_rec = msgpack.unpackb(x_enc, object_hook=m.decode)\\r\\n\\r\\nmsgpack-numpy will try to use the binary (fast) extension in msgpack by default.  \\r\\nIf msgpack was not compiled with Cython (or if the ``MSGPACK_PUREPYTHON`` \\r\\nvariable is set), it will fall back to using the slower pure Python msgpack \\r\\nimplementation.\\r\\n\\r\\nDevelopment\\r\\n-----------\\r\\nThe latest source code can be obtained from\\r\\n`GitHub <https://github.com/lebedov/msgpack-numpy/>`_.\\r\\n\\r\\nAuthors\\r\\n-------\\r\\nSee the included ``AUTHORS.rst`` file for more information.\\r\\n\\r\\nLicense\\r\\n-------\\r\\nThis software is licensed under the `BSD License \\r\\n<http://www.opensource.org/licenses/bsd-license>`_.\\r\\nSee the included ``LICENSE.rst`` file for more information.\", \n        \"release_url\": \"http://pypi.python.org/pypi/msgpack-numpy/0.3.7\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 2, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: Science/Research\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Topic :: Scientific/Engineering\", \n            \"Topic :: Software Development\"\n        ], \n        \"bugtrack_url\": \"https://github.com/lebedov/msgpack-numpy/issues\", \n        \"name\": \"msgpack-numpy\", \n        \"license\": \"BSD\", \n        \"summary\": \"Numpy data serialization using msgpack\", \n        \"home_page\": \"https://github.com/lebedov/msgpack-numpy\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.3.6\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-07-08T15:07:26\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/eb/1e/ced210227621f07143cceb91beee48c5c5601edf554e374a6354faa82412/msgpack-numpy-0.3.6.tar.gz\", \n                \"md5_digest\": \"0490897e54f9c9828419f2c4e41ce31e\", \n                \"downloads\": 4314, \n                \"filename\": \"msgpack-numpy-0.3.6.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"eb/1e/ced210227621f07143cceb91beee48c5c5601edf554e374a6354faa82412/msgpack-numpy-0.3.6.tar.gz\", \n                \"size\": 9132\n            }\n        ], \n        \"0.3.7\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-03-13T01:34:15\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/15/fe/32d00224256b4fd287235a7eaad804c65691334f35ecb0146a4b7c087166/msgpack-numpy-0.3.7.tar.gz\", \n                \"md5_digest\": \"650e692734c0d7971c67cbba30c35465\", \n                \"downloads\": 2565, \n                \"filename\": \"msgpack-numpy-0.3.7.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"15/fe/32d00224256b4fd287235a7eaad804c65691334f35ecb0146a4b7c087166/msgpack-numpy-0.3.7.tar.gz\", \n                \"size\": 9328\n            }\n        ], \n        \"0.3.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-02-12T21:48:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/4b/bc/92f4faf68b852d3b9c2a10cb37456e21aaae35d44bf213eddd614780e0eb/msgpack-numpy-0.3.5.tar.gz\", \n                \"md5_digest\": \"e9f2ce2ea9526e4b147b1c52d62af2f7\", \n                \"downloads\": 1785, \n                \"filename\": \"msgpack-numpy-0.3.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"4b/bc/92f4faf68b852d3b9c2a10cb37456e21aaae35d44bf213eddd614780e0eb/msgpack-numpy-0.3.5.tar.gz\", \n                \"size\": 8597\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-03-13T01:34:15\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/15/fe/32d00224256b4fd287235a7eaad804c65691334f35ecb0146a4b7c087166/msgpack-numpy-0.3.7.tar.gz\", \n            \"md5_digest\": \"650e692734c0d7971c67cbba30c35465\", \n            \"downloads\": 2565, \n            \"filename\": \"msgpack-numpy-0.3.7.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"15/fe/32d00224256b4fd287235a7eaad804c65691334f35ecb0146a4b7c087166/msgpack-numpy-0.3.7.tar.gz\", \n            \"size\": 9328\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:42:59"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/lebedov/msgpack-numpy", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3ED:CA5A522:585CFFB3"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:42:59 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["29885c8097c6d503a86029451b2e021c"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["60ab045e396b2bae7c9cd9540401ce32"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.100299"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:42:59 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMjZjMzBiYTE5MWZmNDg2M2UwZWU3YjYyODM4M2VjN2UiLCJzcHlfcmVwbyI6ImxlYmVkb3YvbXNncGFjay1udW1weSIsInNweV9yZXBvX2F0IjoxNDgyNDg5Nzc5LCJfY3NyZl90b2tlbiI6IlVsaktEQ0tYMWZlRENIaVpOT2dzU3ZRZjliN0JNQjdOTW42SkgzWnBxTFU9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--b2428694fa366693976c5069d6793595b1ae2830; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/lebedov/msgpack-numpy", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:42:59"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/lebedov/msgpack-numpy/master/CHANGES.rst", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C1D:773A:53633EA:585CFFB3"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:43:00 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1544-HHN"], "X-Fastly-Request-ID": ["ce9442b3b51eb81e6f2e0d6c82d16a3e28c37064"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489780.069375,VS0,VE117"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"475121200e807066eb2d81d2ba4a55f1be86a5e6\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["625"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:48:00 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/lebedov/msgpack-numpy/master/CHANGES.rst", "body": {"base64_string": "H4sIAAAAAAAAA5WVy27bMBBF9/qKAbpxgpjVw3l00UXQxECLBjUSdF1Q4sghIpEEH27Ur+9QshNbDRpZGwkSyXN55w7FGMxP52Cdj/ck+fLI1Rrhu14nn1+uJLnHBrlDSFnBLmEOs6AEWhC4wUabFpU/SebvX8kpXAsBq84/agUFuGCMth5mH7LshB1iLiLmW2g6uDqDPM3O3yPQ4kveNFDy6gm8BhMs7lCtW5v4WtZQ6dbIBgXgs0flJH2VDoLiGy4bXjZIai7GYs6jmCWWNnDbQZZPU7S/591Wa21BhdZ04CrecAul1sRRjrBXY+wiYm+wwrYkt7fYxTHYkos1ujMIRnCPcH97fXN3O6IUkfKj8jpC8mw6ZMtopXNSrQH//HLog2G0uZosHmHyiLnjHVxMItDiD7I1jaw7QFVpQYiPAocH0PWBi27Eylg20Gz1CNNtI+Ydf0KIWeHUBhxclIDQahHoRqmq5TPF3iDlX1UdSOU8hY77IUcu4D9SjhcSt/5beppBwNXtChaLFDZo+7DStqlO5AGjYT+HstKw3nlPWXKQk9V7tdiXkx7Uukh7QcU0Z8Yp3vVUyhYsjWLuUfG2F7P9NO9LxBKAfQl5H4QHNH4b6+kqBiHLvgSvQXA+2gHcWt7FNlqcsDdGCVl5R92vPJcqvlPiZcb5YeOlebbLav5pmjgCfm2N1Rt8I6wGLRnWclVh79zA3Ykccuw7gy/2UpmFrGu0dLCCoXTF6VFoMRZ6cC5te3eSk/8taMFSmEWrrCyDp7Oy7KCy0hnecotuJCI7EJFeHiViKeO/x4SykRXYYVFa/i/l4QsNmAYAAA==", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:00"}], "recorded_with": "betamax/0.8.0"}