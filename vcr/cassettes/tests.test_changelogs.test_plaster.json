{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/plaster/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["9f0395a6b7b39120c636984d6cd18228134fbfee5cefcbe73c580b31ee8d322c"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:43:27 GMT"], "X-Served-By": ["cache-iad2151-IAD, cache-hhn1535-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489807.301530,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534662"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["79831"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["8104"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/plaster/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"plaster pastedeploy ini config\", \n        \"package_url\": \"http://pypi.python.org/pypi/plaster\", \n        \"author\": \"Michael Merickel\", \n        \"author_email\": \"michael@merickel.org\", \n        \"download_url\": \"\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.2\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"=======\\nplaster\\n=======\\n\\n.. image:: https://img.shields.io/pypi/v/plaster.svg\\n    :target: https://pypi.python.org/pypi/plaster\\n\\n.. image:: https://img.shields.io/travis/mmerickel/plaster.svg\\n    :target: https://travis-ci.org/mmerickel/plaster\\n\\n.. image:: https://readthedocs.org/projects/plaster/badge/?version=latest\\n    :target: https://readthedocs.org/projects/plaster/?badge=latest\\n    :alt: Documentation Status\\n\\n``plaster`` is a loader interface around multiple config file formats. It\\nexists to define a common API for applications to use when they wish to load\\nconfiguration. The library itself does not aim to handle anything except\\na basic API that applications may use to find and load configuration settings.\\nAny specific constraints should be implemented in a pluggable loader which can\\nbe registered via an entrypoint.\\n\\nUsage\\n=====\\n\\nApplications should use ``plaster`` to load settings from named sections in\\na configuration source (usually a file).\\n\\nMost applications will want to use\\n``plaster.get_settings(uri, section=None, defaults=None)`` to load the settings\\nfrom a named section. It is possible to specify the section name in the uri\\nitself via the ``uri#section`` syntax but it will be overridden by any explicit\\n``section`` parameter.\\n\\n.. code-block:: python\\n\\n    import plaster\\n\\n    settings = plaster.get_settings('development.ini#main')\\n\\nRead the `documentation <https://plaster.readthedocs.io>`__ for more\\ninformation on using ``plaster`` in your application as well as how to create\\ncustom loaders.\\n\\nAcknowledgments\\n===============\\n\\nThis API is heavily inspired by conversations, contributions, and design put\\nforth in https://github.com/inklesspen/montague and\\nhttps://metaclassical.com/announcing-montague-the-new-way-to-configure-python-applications/.\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/plaster/0.2\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"requires_dist\": [\n            \"setuptools\", \n            \"Sphinx; extra == 'docs'\", \n            \"pylons-sphinx-themes; extra == 'docs'\", \n            \"mock; extra == 'testing'\", \n            \"pytest; extra == 'testing'\", \n            \"pytest-cov; extra == 'testing'\"\n        ], \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Natural Language :: English\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Programming Language :: Python :: Implementation :: CPython\", \n            \"Programming Language :: Python :: Implementation :: PyPy\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"plaster\", \n        \"license\": \"\", \n        \"summary\": \"A loader interface around multiple config file formats.\", \n        \"home_page\": \"https://github.com/mmerickel/plaster\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-06-11T05:01:22\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2.py3\", \n                \"url\": \"https://pypi.python.org/packages/08/9b/b429c80369020513ae34f5c2f76518c495c768d9afad1dfb88ee4e517640/plaster-0.1.0-py2.py3-none-any.whl\", \n                \"md5_digest\": \"528c462729503b0cc93f3eba15fb028d\", \n                \"downloads\": 357, \n                \"filename\": \"plaster-0.1.0-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"08/9b/b429c80369020513ae34f5c2f76518c495c768d9afad1dfb88ee4e517640/plaster-0.1.0-py2.py3-none-any.whl\", \n                \"size\": 6775\n            }, \n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-06-11T05:01:26\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/34/85/3d273f3a9630bc95c3099e0b3323b291f24da7b00a7626b566701c3bdeee/plaster-0.1.0.tar.gz\", \n                \"md5_digest\": \"b1a713280f1c288797cb7eb5baa73a5f\", \n                \"downloads\": 98, \n                \"filename\": \"plaster-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"34/85/3d273f3a9630bc95c3099e0b3323b291f24da7b00a7626b566701c3bdeee/plaster-0.1.0.tar.gz\", \n                \"size\": 16579\n            }\n        ], \n        \"0.2\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-06-15T05:42:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2.py3\", \n                \"url\": \"https://pypi.python.org/packages/91/a0/8ea1ecf1c169d6430dfe63dff20d64fd1b9d655496cd8b67376eab459c5a/plaster-0.2-py2.py3-none-any.whl\", \n                \"md5_digest\": \"c28d799587200f6016351d3f59e5b5ca\", \n                \"downloads\": 101, \n                \"filename\": \"plaster-0.2-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"91/a0/8ea1ecf1c169d6430dfe63dff20d64fd1b9d655496cd8b67376eab459c5a/plaster-0.2-py2.py3-none-any.whl\", \n                \"size\": 7396\n            }, \n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-06-15T05:42:51\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/55/6d/6f716b7a22f316e1d90e1efe18f44b746014c640967bd52a99126401541e/plaster-0.2.tar.gz\", \n                \"md5_digest\": \"3c0def7632d06f939247e7da75d3a40d\", \n                \"downloads\": 118, \n                \"filename\": \"plaster-0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"55/6d/6f716b7a22f316e1d90e1efe18f44b746014c640967bd52a99126401541e/plaster-0.2.tar.gz\", \n                \"size\": 19423\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": true, \n            \"upload_time\": \"2016-06-15T05:42:33\", \n            \"comment_text\": \"\", \n            \"python_version\": \"py2.py3\", \n            \"url\": \"https://pypi.python.org/packages/91/a0/8ea1ecf1c169d6430dfe63dff20d64fd1b9d655496cd8b67376eab459c5a/plaster-0.2-py2.py3-none-any.whl\", \n            \"md5_digest\": \"c28d799587200f6016351d3f59e5b5ca\", \n            \"downloads\": 101, \n            \"filename\": \"plaster-0.2-py2.py3-none-any.whl\", \n            \"packagetype\": \"bdist_wheel\", \n            \"path\": \"91/a0/8ea1ecf1c169d6430dfe63dff20d64fd1b9d655496cd8b67376eab459c5a/plaster-0.2-py2.py3-none-any.whl\", \n            \"size\": 7396\n        }, \n        {\n            \"has_sig\": true, \n            \"upload_time\": \"2016-06-15T05:42:51\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/55/6d/6f716b7a22f316e1d90e1efe18f44b746014c640967bd52a99126401541e/plaster-0.2.tar.gz\", \n            \"md5_digest\": \"3c0def7632d06f939247e7da75d3a40d\", \n            \"downloads\": 118, \n            \"filename\": \"plaster-0.2.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"55/6d/6f716b7a22f316e1d90e1efe18f44b746014c640967bd52a99126401541e/plaster-0.2.tar.gz\", \n            \"size\": 19423\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:43:27"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/mmerickel/plaster", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3ED:CA5C202:585CFFCF"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:43:27 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["c30838693aa1c1bbbec523094efb09e7"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["7855dcffbdf8e8cfd6f0031b398064c6"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.083424"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:43:27 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZjQ5ZDgxODVlNjhjMjdmYzYyOTY0MTQ3YmY3MjFjZjgiLCJzcHlfcmVwbyI6Im1tZXJpY2tlbC9wbGFzdGVyIiwic3B5X3JlcG9fYXQiOjE0ODI0ODk4MDcsIl9jc3JmX3Rva2VuIjoiLzM2ZGdlc1NaNERsWGZWVFUxakEzekplUTRrQWh1Ulh2YTcrVUNQcUMzRT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--5b1a7973ae18031bd49a12cde985b4644de60ad1; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/mmerickel/plaster", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:27"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/mmerickel/plaster/master/CHANGES.rst", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C31:73BD:3B6B7FC:585CFFCF"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:43:28 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1531-HHN"], "X-Fastly-Request-ID": ["a748ba418fea45eb145a45549c2e9bd53b55a351"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489808.034683,VS0,VE123"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"784cd7c0b1ac668dc07dfdadccd739d6a26e1e7d\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["417"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:48:28 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/mmerickel/plaster/master/CHANGES.rst", "body": {"base64_string": "H4sIAAAAAAAAA52TMW/bMBCFd/+KG9vBku02GQpk6FLAQKb0B8Rn8iwdSvIIHhlH/74n2WiMtkui8R3J971HatPt4NNus71fb+7X27vPq4e/vtVqDd9DkDMcDk7SiYfnVvhwAJ1SxVdT1Y0U6VvGOpqMQdKg7Olt0veXWbcC+EkEY61ZTR24ju3YOYl9jFTY/aLQ54BaqfSs2kj7L7P/PuYiLwRUihSFKqCjAdWRoCmVtbacA5OHFwy2CTgts2U5RFLFgd5lnlsI/dcluvcW5Kp3J07+OQh6KmpZzyO7ERwmOC4kHo4TZJIcyGYCiUxCOONk5kZdyFmMYjNKgPHIQ5OmcD0QsBB41mXNHIbxxnqgenV+Z5FLlrs5yxMljHRz5uP1vJntTd3fyspD4tMEXBVyK1mUzBwNNlnNtvyEzsIaACQBdLVhAI7WQCR7H5UlfZB2n2oR3xz9i/bDfKRMF0Ivrs1e1irWy73bTrsHMT6oWKw5nZmtXXrN5Kp1a/v+QH6Ib9Ntb/6b3f//m33iytZHoUCo9gR/A3X8+BtuAwAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:28"}], "recorded_with": "betamax/0.8.0"}