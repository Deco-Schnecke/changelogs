{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/plank/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["2b8e92b7531e4f07cf32e760e521bd3612318d5b8f97ed258436658a115f8beb"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 0"], "Date": ["Fri, 23 Dec 2016 10:43:22 GMT"], "X-Served-By": ["cache-iad2123-IAD, cache-hhn1520-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489802.206293,VS0,VE89"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534662"], "X-Cache": ["HIT, MISS"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["79828"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["5763"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/plank/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/plank\", \n        \"author\": \"Andrew Bentley\", \n        \"author_email\": \"andrew.t.bentley@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"any\", \n        \"version\": \"0.0.4\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Plank\\n=====\\n\\nPlank is a simple and unopinionated python task runner. Plank doesn't manipulate Python or your environment to run the tasks. Plank doesn't provide any default or template tasks.\\n\\n.. image:: https://travis-ci.org/atbentley/plank.svg?branch=master\\n  :target:  https://travis-ci.org/atbentley/plank\\n\\n.. image:: https://coveralls.io/repos/github/atbentley/plank/badge.svg?branch=master\\n  :target: https://coveralls.io/github/atbentley/plank?branch=master\\n\\n\\nUsage\\n-----\\n\\nCreate a ``planks.py`` file in the project directory containing ``@task`` decorated methods, call them using ``plank task_name``.\\n\\n\\nExamples\\n--------\\n\\n.. code-block:: python\\n\\n  from plank import task\\n\\n  @task\\n  def unit_tests():\\n      import pytest\\n\\n      assert pytest.main(['tests/unit']) == 0\\n\\n\\nTests\\n-----\\n\\nTests are written using pytest and can be run using plank, ``plank tests``.\\n\\n\\nLicense\\n-------\\n\\nMIT\", \n        \"release_url\": \"http://pypi.python.org/pypi/plank/0.0.4\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 3, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 3.5\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"plank\", \n        \"license\": \"MIT\", \n        \"summary\": \"A simple task and build runner that doesn't get in the way.\", \n        \"home_page\": \"http://github.com/atbentley/plank/\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-09-25T06:44:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ed/ad/497ddcdf1b1b48442a3ba1ef281a2013c1a1326f6eec1d63574bcc5d6463/plank-0.0.4.tar.gz\", \n                \"md5_digest\": \"009ace08a7dfa00660254921e0c2fbfe\", \n                \"downloads\": 119, \n                \"filename\": \"plank-0.0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ed/ad/497ddcdf1b1b48442a3ba1ef281a2013c1a1326f6eec1d63574bcc5d6463/plank-0.0.4.tar.gz\", \n                \"size\": 4876\n            }\n        ], \n        \"0.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-07-14T12:02:15\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/0a/26/f0a0856242892c67e1bc7f240e41a2171fa523d3941d478c6b33b49f224f/plank-0.0.1.tar.gz\", \n                \"md5_digest\": \"7c5760df97fc302825b4918e7e9a3d0b\", \n                \"downloads\": 474, \n                \"filename\": \"plank-0.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"0a/26/f0a0856242892c67e1bc7f240e41a2171fa523d3941d478c6b33b49f224f/plank-0.0.1.tar.gz\", \n                \"size\": 2800\n            }\n        ], \n        \"0.0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-09-10T10:45:09\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f8/db/3af7f0d87fcf17f23eb8a107f6313f2031da57b5abeb1633c82b3ddb8143/plank-0.0.3.tar.gz\", \n                \"md5_digest\": \"88c20c757253cc40edfd63b0641f0e58\", \n                \"downloads\": 283, \n                \"filename\": \"plank-0.0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f8/db/3af7f0d87fcf17f23eb8a107f6313f2031da57b5abeb1633c82b3ddb8143/plank-0.0.3.tar.gz\", \n                \"size\": 4910\n            }\n        ], \n        \"0.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-08-22T09:56:52\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/31/db/6d3361a35c8dc5f6e9edae95a676850e1e22eb330ca21d794732637d8c4a/plank-0.0.2.tar.gz\", \n                \"md5_digest\": \"30f4ec44b5687651246e1c802a194473\", \n                \"downloads\": 106, \n                \"filename\": \"plank-0.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"31/db/6d3361a35c8dc5f6e9edae95a676850e1e22eb330ca21d794732637d8c4a/plank-0.0.2.tar.gz\", \n                \"size\": 4571\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-09-25T06:44:58\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/ed/ad/497ddcdf1b1b48442a3ba1ef281a2013c1a1326f6eec1d63574bcc5d6463/plank-0.0.4.tar.gz\", \n            \"md5_digest\": \"009ace08a7dfa00660254921e0c2fbfe\", \n            \"downloads\": 119, \n            \"filename\": \"plank-0.0.4.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"ed/ad/497ddcdf1b1b48442a3ba1ef281a2013c1a1326f6eec1d63574bcc5d6463/plank-0.0.4.tar.gz\", \n            \"size\": 4876\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:43:22"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "http://github.com/atbentley/plank", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Connection": ["close"], "Content-length": ["0"], "Location": ["https://github.com/atbentley/plank"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/atbentley/plank", "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:43:22"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/atbentley/plank", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3ED:CA5BD56:585CFFCA"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:43:23 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["ef97014f01ea59c1ef337fe51a4d0331"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["9bddfe667cc07b93d462109885c7db86"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.219375"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:43:23 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZjA1NTliMmU2OTk3NWNmZGFhN2RhY2E1ZjJmNDAyNTIiLCJzcHlfcmVwbyI6ImF0YmVudGxleS9wbGFuayIsInNweV9yZXBvX2F0IjoxNDgyNDg5ODAyLCJfY3NyZl90b2tlbiI6InU0NSt4ZjIxeW1GZzh4M3N1U3VvTG1IdGRZbzJ5Slhva29mT2FqTG1sWGs9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--f08fcaf8dc334ce8b9a6cbcec673197179a16834; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/atbentley/plank", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:23"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/atbentley/plank/master/CHANGES.txt", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C27:074E:39A7AB3:585CFFCB"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:43:23 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1528-HHN"], "X-Fastly-Request-ID": ["6ef858b7cb4737b285eee14a2ce6974cb180c3a5"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489803.397500,VS0,VE122"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"2790b24bde063cbcc4617951cee400c455713676\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["65"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:48:23 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/atbentley/plank/master/CHANGES.txt", "body": {"base64_string": "H4sIAAAAAAAAA3POSMxLT83JT+eyhQEuLq6w1KLizPw8BQM9Az1DLl1kwMUVmleUmpOaWJyawgUAZZi/XD4AAAA=", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:23"}], "recorded_with": "betamax/0.8.0"}