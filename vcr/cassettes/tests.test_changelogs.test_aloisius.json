{"recorded_with": "betamax/0.8.0", "http_interactions": [{"recorded_at": "2016-12-23T10:27:28", "response": {"body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/aloisius\", \n        \"author\": \"Andreas Donig\", \n        \"author_email\": \"andreas@innwiese.de\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"===========\\naloisius\\n===========\\n\\nAbout\\n=====\\n\\naloisius helps you to manage the life-cycle of AWS CloudFormation stacks. It\\nallows you to use outputs from one stack as input parameters to other stacks.\\nThere are other tools which allow you to do so, like i.e. Cumulus or Ansible,\\nbut I couldn't find one which doesn't require you to use YAML or Jinja2. It\\nis a pure Python library and it is intended to be used in inter-play with\\ntroposphere, but you can also use it with any CloudFormation JSON templates.\\n\\nLicense\\n=======\\n\\nThe BSD 2-Clause License: http://opensource.org/licenses/BSD-2-Clause\\n\\nExamples\\n========\\n\\nA simple example creating a VPC containing an RDS could look like this::\\n\\n   #!/usr/bin/env python\\n\\n   from aloisius import Stack\\n\\n   # I keep my troposphere templates as modules in a package.\\n   from templates.vpc import template as template_vpc\\n   from templates.rds import template as template_rds\\n\\n\\n   # I normally put some constants and helper functions here.\\n   app_name = 'myapp'\\n   region_name = 'eu-central-1'\\n   stack_name = lambda x: '-'.join([app_name, region_name, x])\\n\\n   vpc = Stack(\\n       StackName=stack_name('vpc'),\\n       TargetState='present',\\n       RegionName=region_name,\\n       TemplateBody=template_vpc.to_json(),\\n   )\\n\\n   rds = Stack(\\n       StackName=stack_name('rds'),\\n       TargetState='present',\\n       RegionName=region_name,\\n       TemplateBody=template_rds.to_json(),\\n       Parameters={\\n           # You can use outputs of previously created stacks as parameters.\\n           'VpcId': vpc.outputs['VpcId'],\\n           'PrivateSubnets': vpc.outputs['PrivateSubnets'],\\n           # More parameters here.\\n       },\\n   )\\n\\nWhy you shouldn't use aloisius\\n==============================\\n\\n- It's not tested. I simply use it myself. There are probably many bugs.\\n- There's not much documentation (but there are comments in the code).\\n\\nWhy you should use aloisius\\n===========================\\n\\n- You could find some bugs and help to make it better.\\n- Parallel stack creation/deletion.\\n- Integrates nicely with troposphere: No JSON and no YAML.\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/aloisius/0.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 0, \n        \"classifiers\": [], \n        \"bugtrack_url\": null, \n        \"name\": \"aloisius\", \n        \"license\": \"FreeBSD License\", \n        \"summary\": \"Create/Update/Delete AWS CloudFormation stacks in parallel\", \n        \"home_page\": \"https://github.com/adonig/aloisius\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-06-30T10:54:57\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/19/22/72d187cbaffb403aa8ad435a054e4d39d2c32462594f7b160194e40336c9/aloisius-0.3.tar.gz\", \n                \"md5_digest\": \"03f8528a4e42a6138cd420c93c978252\", \n                \"downloads\": 2277, \n                \"filename\": \"aloisius-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"19/22/72d187cbaffb403aa8ad435a054e4d39d2c32462594f7b160194e40336c9/aloisius-0.3.tar.gz\", \n                \"size\": 5143\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-06-30T10:54:57\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/19/22/72d187cbaffb403aa8ad435a054e4d39d2c32462594f7b160194e40336c9/aloisius-0.3.tar.gz\", \n            \"md5_digest\": \"03f8528a4e42a6138cd420c93c978252\", \n            \"downloads\": 2277, \n            \"filename\": \"aloisius-0.3.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"19/22/72d187cbaffb403aa8ad435a054e4d39d2c32462594f7b160194e40336c9/aloisius-0.3.tar.gz\", \n            \"size\": 5143\n        }\n    ]\n}", "encoding": "UTF-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/aloisius/json", "headers": {"X-Frame-Options": ["deny"], "X-PYPI-LAST-SERIAL": ["2535205"], "Access-Control-Allow-Origin": ["*"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Accept-Ranges": ["bytes"], "X-Content-Type-Options": ["nosniff"], "X-Timer": ["S1482488848.692032,VS0,VE0"], "Via": ["1.1 varnish", "1.1 varnish"], "X-Served-By": ["cache-iad2141-IAD, cache-hhn1520-HHN"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Age": ["63426"], "Date": ["Fri, 23 Dec 2016 10:27:28 GMT"], "Fastly-Debug-Digest": ["e1f49ea92f923d954f70af1c3aef4ee6a932953cd0e1896d4322eef29e8f6c7c"], "Server": ["nginx/1.10.2"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Content-Length": ["4652"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Content-Disposition": ["inline"], "X-Cache": ["HIT, HIT"], "Connection": ["keep-alive"], "Cache-Control": ["max-age=600, public"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://pypi.python.org/pypi/aloisius/json"}}, {"recorded_at": "2016-12-23T10:27:29", "response": {"body": {"base64_string": "", "encoding": "utf-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/adonig/aloisius", "headers": {"Content-Encoding": ["gzip"], "Date": ["Fri, 23 Dec 2016 10:27:29 GMT"], "Server": ["GitHub.com"], "X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["54B1D78B:C3ED:CA2823E:585CFC10"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "Vary": ["X-PJAX", "Accept-Encoding"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Request-Id": ["8023e61ff4df2581b7a3e346015c78d7"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-Content-Type-Options": ["nosniff"], "Status": ["200 OK"], "X-Runtime": ["0.096558"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["1868c9f28a71d80b2987f48dbd1824a0"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:27:29 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNjM5ZjFlMmNiNzQxYTMyNWYwYjUzYmU3OTRiNjM3MDkiLCJzcHlfcmVwbyI6ImFkb25pZy9hbG9pc2l1cyIsInNweV9yZXBvX2F0IjoxNDgyNDg4ODQ5LCJfY3NyZl90b2tlbiI6IlRtQUN4UXRGcnluOWlwZTJOelRZbVNUT2pGUktyODJUL3BlMGxaUXVyZGM9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--c51214c4dca075a63bb85a2504395e3133a749ce; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://github.com/adonig/aloisius"}}, {"recorded_at": "2016-12-23T10:27:29", "response": {"body": {"base64_string": "H4sIAAAAAAAAA03Ouw6CMBiG4b1X8ScsOkAKxNPoQsIkt1CgamOhzX8YuHvpgLJ/75Mvy0AXNRwqXZ5yfc5rrXLopPeO3mB8cOSEgAN0S9cqlaV5VZT/oLod16KdB7SGLESDxnu75hP0Cwi5+QWNsKB9CEdh2pAdcU3EfRyBJMaADM+APwmIzfCBEC0admHegP2HSwIah8SA1qcj6guuFukP2QAAAA==", "encoding": "utf-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/adonig/aloisius/master/CHANGELOG.md", "headers": {"Content-Encoding": ["gzip"], "Expires": ["Fri, 23 Dec 2016 10:32:29 GMT"], "ETag": ["\"61da5aff30811896cb2fbeb906a2d4d84e66aafa\""], "X-Frame-Options": ["deny"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "X-Cache": ["MISS"], "X-Fastly-Request-ID": ["e62eba89e05633af8b0e54623889f15328b44eec"], "Accept-Ranges": ["bytes"], "X-Content-Type-Options": ["nosniff"], "X-Geo-Block-List": [""], "Cache-Control": ["max-age=300"], "Via": ["1.1 varnish"], "Access-Control-Allow-Origin": ["*"], "X-Served-By": ["cache-hhn1547-HHN"], "Content-Type": ["text/plain; charset=utf-8"], "Date": ["Fri, 23 Dec 2016 10:27:29 GMT"], "Source-Age": ["0"], "X-XSS-Protection": ["1; mode=block"], "Vary": ["Authorization,Accept-Encoding"], "X-GitHub-Request-Id": ["C71B4C20:1A13:A488BA:585CFC11"], "Content-Length": ["166"], "X-Cache-Hits": ["0"], "X-Timer": ["S1482488849.458969,VS0,VE121"], "Connection": ["keep-alive"], "Strict-Transport-Security": ["max-age=31536000"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://raw.githubusercontent.com/adonig/aloisius/master/CHANGELOG.md"}}]}