{"recorded_with": "betamax/0.8.0", "http_interactions": [{"recorded_at": "2016-12-23T10:27:13", "response": {"body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/alkey\", \n        \"author\": \"James Arthur\", \n        \"author_email\": \"username: thruflo, domain: gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.7.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"# Alkey\\n\\n[Alkey][] is a [Redis][] backed tool for generating cache keys that implicitly\\nupdate / invalidate when [SQLAlchemy][] model instances change, e.g.:\\n\\n    from alkey.cache import get_cache_key_generator\\n    key_generator = get_cache_key_generator()\\n    \\n    # The `cache_key` will be invalidated when `instance1` or `instance2` change.\\n    cache_key = key_generator(instance1, instance2)\\n\\nIt can be used by any [SQLAlchemy][] application that has access to [Redis][].\\nPlus it has (optional) integration with the [Pyramid][] framework:\\n`config.include` the package and generate keys using, e.g.:\\n\\n    cache_key = request.cache_key(request.context)\\n\\n## How it Works\\n\\n[Alkey][] works by binding to the SQLAlchemy session's [before_flush][] and\\n[after_commit][] events to maintain a unique token, in Redis, against every\\nmodel instance. As long as the model instance has a unique `id` property, this\\ntoken will change whenever the instance is updated or deleted. In addition,\\nAlkey maintains a global write token and a token against each database table.\\nYou can use these to generate cache keys that invalidate:\\n\\n* when an *instance* changes\\n* when a *table* changes; or\\n* when *anything* changes\\n\\nThe main algorithm is to record instances as changed when they're flushed to\\nthe db in the session's new, dirty or deleted lists (identifiers in the format\\n`alkey:tablename#row_id`, e.g.: `alkey:users#1`, are stored in a Redis set).\\nThen, when the session's transaction is committed, the tokens for each recorded\\ninstance (plus their table and the global write token) are updated. This means\\nthat a cache key that contains the tokens will miss, causing the cached value\\nto be regenerated.\\n\\nNew tokens are generated when instances are looked up that are not already\\nin the cache. So keys will always be invalidated if you lose / flush your\\nRedis data.\\n\\n> Note also that changes recorded during a transaction that's\\nsubsequently rolled back will be discarded (i.e.: the tokens will not be updated)\\n*unless* the rolled-back transaction is a sub-transaction. In that case &mdash; if\\nyour application code explicitly uses sub-transactions &mdash; rollbacks may lead\\nto unnecessary cache-misses.\\n\\n## Configuring a Redis Client\\n\\n[Alkey][] looks in the `os.environ` (i.e.: you need to provide\\n[environment variables][]) for a values to configure a [redis client][]:\\n\\n* `REDIS_URL`: a connection string including any authenticaton information, e.g.:\\n  `redis://username:password@hostname:port`\\n* `REDIS_DB`: defaults to `0`\\n* `REDIS_MAX_CONNECTIONS`: the maximum number of connections for the client's\\n  connection pool (defaults to not set)\\n\\n## Binding to Session Events\\n\\nUse the `alkey.events.bind` function, e.g.:\\n    \\n    from alkey import events\\n    from myapp import Session # the sqlalchemy session you're using\\n    \\n    events.bind(Session)\\n\\n## Generating Cache Keys\\n\\nYou can then instantiate an `alkey.cache.CacheKeyGenerator` and call it with\\nany of the following types as positional arguments to generate a cache key:\\n\\n* SQLAlchemy model instances\\n* model instance identifiers in the format `alkey:tablename#row_id`\\n* SQLAlchemy model classes\\n* model class identifiers in the format `alkey:tablename#*`\\n* the `alkey.constants.GLOBAL_WRITE_TOKEN`, which has the value `alkey:*#*`\\n* arbitrary values that can be coerced to a unicode string\\n\\nE.g. using the `alkey.cache.get_cache_key_generator` factory to instantiate:\\n\\n    from alkey.cache import get_cache_key_generator\\n    \\n    key_generator = get_cache_key_generator()\\n    cache_key = key_generator(instance, 'alkey:users#1', 1, 'foo', {'bar': 'baz'})\\n\\nOr, for example, imagine you have a `users` table, of which `user` is an instance\\nwith an `id` of `1`:\\n\\n    # Invalidate when this user changes.\\n    cache_key = key_generator(user)\\n    cache_key = key_generator('alkey:users#1')\\n\\n    # Invalidate when any user is inserted, updated or deleted.\\n    cache_key = key_generator(user.__class__)\\n    cache_key = key_generator('alkey:users#*')\\n\\n    # Invalidate when any instance of any type is inserted, updated or deleted.\\n    cache_key = key_generator('alkey:*#*')\\n\\nOr you can directly get the instance token with `alkey.cache.get_token`, e.g.:\\n\\n    from alkey.cache import get_token\\n    from alkey.client import get_redis_client\\n    \\n    redis_client = get_redis_client()\\n    \\n    token = get_token(redis_client, user)\\n    token = get_token(redis_client, 'alkey:users#1')\\n\\n## Pyramid Integration\\n\\nIf you're writing a [Pyramid][] application, you can bind to the session events\\nby just including the package:\\n\\n    config.include('alkey')\\n\\nThis will, by default, use the [pyramid_basemodel][] threadlocal scoped session.\\nTo use a different session class, provide a dotted path to it as the\\n`alkey.session_cls` in your .ini settings, e.g.:\\n\\n    alkey.session_cls=myapp.model.Session\\n\\nAn appropriately configured `alkey.cache.CacheKeyGenerator` instance will then\\nbe available as ``request.cache_key``, e.g:\\n\\n    key = request.cache_key(instance1, instance2, 'arbitrary string')\\n\\nOr e.g.: in a [Mako template][]:\\n\\n    <%page cached=True, cache_key=${request.cache_key(1, self.uri, instance)} />\\n\\n## Tests\\n\\n[Alkey][] has been developed and tested against Python2.7. To run the tests,\\ninstall `mock`, `nose` and `coverage` and either hack the `setUp` method in\\n`alkey.tests:IntegrationTest` or have a Redis db available at\\n`redis://localhost:6379`. Then, e.g.:\\n\\n    $ nosetests alkey --with-doctest --with-coverage --cover-tests --cover-package alkey\\n    ..........................\\n    Name               Stmts   Miss  Cover   Missing\\n    ------------------------------------------------\\n    alkey                 11      0   100%   \\n    alkey.cache           74      0   100%   \\n    alkey.client          73      0   100%   \\n    alkey.constants        6      0   100%   \\n    alkey.events          12      0   100%   \\n    alkey.handle          76      0   100%   \\n    alkey.interfaces       6      0   100%   \\n    alkey.tests          184      0   100%   \\n    alkey.utils           30      0   100%   \\n    ------------------------------------------------\\n    TOTAL                472      0   100%   \\n    ----------------------------------------------------------------------\\n    Ran 26 tests in 0.566s\\n    \\n    OK\\n\\n[alkey]: http://github.com/thruflo/alkey\\n[Redis]: http://redis.io\\n[SQLAlchemy]: http://www.sqlalchemy.org/\\n[redis client]: https://github.com/andymccurdy/redis-py\\n[before_flush]: http://docs.sqlalchemy.org/ru/latest/orm/events.html#sqlalchemy.orm.events.SessionEvents.before_flush\\n[after_commit]: http://docs.sqlalchemy.org/ru/latest/orm/events.html#sqlalchemy.orm.events.SessionEvents.after_commit\\n[Pyramid]: http://docs.pylonsproject.org/projects/pyramid/en/latest\\n[Mako template]: http://www.makotemplates.org/\\n[pyramid_basemodel]: http://github.com/thruflo/pyramid_basemodel\\n[environment variables]: http://blog.akash.im/per-project-environment-variables-with-forema\\n[Heroku addons]: https://www.google.co.uk/search?q=Heroku+addons+redis\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/alkey/0.7.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 10, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Environment :: Web Environment\", \n            \"Framework :: Pylons\", \n            \"Intended Audience :: Developers\", \n            \"License :: Public Domain\", \n            \"Natural Language :: English\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Topic :: Internet :: WWW/HTTP\", \n            \"Topic :: Internet :: WWW/HTTP :: WSGI\", \n            \"Topic :: Software Development :: Libraries :: Python Modules\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"alkey\", \n        \"license\": \"This is free and unencumbered software released into the public domain.\", \n        \"summary\": \"Redis backed tool for generating cache keys.\", \n        \"home_page\": \"http://github.com/thruflo/alkey\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-04-18T09:58:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b8/6c/bbed4b55e04afd390d23aea5d033f7981122490c0d1edceaa69bc5deb58e/alkey-0.3.tar.gz\", \n                \"md5_digest\": \"e7524fa912fdd80efe2bbb99fe960757\", \n                \"downloads\": 2843, \n                \"filename\": \"alkey-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b8/6c/bbed4b55e04afd390d23aea5d033f7981122490c0d1edceaa69bc5deb58e/alkey-0.3.tar.gz\", \n                \"size\": 18813\n            }\n        ], \n        \"0.3.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-05-07T10:39:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/56/d3/38037df546078caac386c87867f528d273d2b2b8dd8132120b87224f9d3b/alkey-0.3.1.tar.gz\", \n                \"md5_digest\": \"1aca20537b2fbbb00d67c4df1aa2d2ee\", \n                \"downloads\": 2282, \n                \"filename\": \"alkey-0.3.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"56/d3/38037df546078caac386c87867f528d273d2b2b8dd8132120b87224f9d3b/alkey-0.3.1.tar.gz\", \n                \"size\": 16606\n            }\n        ], \n        \"0.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-08-02T15:12:22\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ff/79/450d0e70150ec13365c7fe1004f59173c36d53bec62c11c4ec71390a93fb/alkey-0.5.tar.gz\", \n                \"md5_digest\": \"1e2706634b3f4f0413f50e3d0c53684b\", \n                \"downloads\": 2270, \n                \"filename\": \"alkey-0.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ff/79/450d0e70150ec13365c7fe1004f59173c36d53bec62c11c4ec71390a93fb/alkey-0.5.tar.gz\", \n                \"size\": 17321\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-07-19T15:35:05\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/4d/b5/f99eaa5f0af67706c8cbf068c3e783eae54233edf89b76e5d34a6acbce96/alkey-0.4.tar.gz\", \n                \"md5_digest\": \"fcbc69f31740f308ef080318a655293c\", \n                \"downloads\": 2210, \n                \"filename\": \"alkey-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"4d/b5/f99eaa5f0af67706c8cbf068c3e783eae54233edf89b76e5d34a6acbce96/alkey-0.4.tar.gz\", \n                \"size\": 16702\n            }\n        ], \n        \"0.7\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-09-09T14:11:49\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ed/d6/e104e3eb568b92c01e6c43e9b3df8eb1a10dfda3018eb602920598bbf6a4/alkey-0.7.tar.gz\", \n                \"md5_digest\": \"e6bdfd3e48af2fc025774d701f736dd3\", \n                \"downloads\": 888, \n                \"filename\": \"alkey-0.7.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ed/d6/e104e3eb568b92c01e6c43e9b3df8eb1a10dfda3018eb602920598bbf6a4/alkey-0.7.tar.gz\", \n                \"size\": 14664\n            }\n        ], \n        \"0.6\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-10-25T15:24:36\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/30/77/5e65491777fbe764f19436adbec5e0edc3cd3999d9bdc859d1ab8d4bea3a/alkey-0.6.tar.gz\", \n                \"md5_digest\": \"3800d608b18801578968f6b86d7f2a7f\", \n                \"downloads\": 2518, \n                \"filename\": \"alkey-0.6.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"30/77/5e65491777fbe764f19436adbec5e0edc3cd3999d9bdc859d1ab8d4bea3a/alkey-0.6.tar.gz\", \n                \"size\": 14890\n            }\n        ], \n        \"0.2.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-04-15T21:05:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/78/05/403808dd291c30d5595b27a2f330778c94f5aa8c2c3f1ca53e4a37beae4c/alkey-0.2.3.tar.gz\", \n                \"md5_digest\": \"bea44b021c3b10a3aef814545cd1623e\", \n                \"downloads\": 2462, \n                \"filename\": \"alkey-0.2.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"78/05/403808dd291c30d5595b27a2f330778c94f5aa8c2c3f1ca53e4a37beae4c/alkey-0.2.3.tar.gz\", \n                \"size\": 18469\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-04-15T09:53:57\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/7a/18/1d8bcba7f6c86a2c44821b0e4df468032242146620341b79c0c5aa63ab35/alkey-0.2.2.tar.gz\", \n                \"md5_digest\": \"2143ef484e6115a80936ad4290369e28\", \n                \"downloads\": 2487, \n                \"filename\": \"alkey-0.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"7a/18/1d8bcba7f6c86a2c44821b0e4df468032242146620341b79c0c5aa63ab35/alkey-0.2.2.tar.gz\", \n                \"size\": 17985\n            }\n        ], \n        \"0.4.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-07-22T17:12:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/16/89/12aebec5f3ba85fa5e3d543964773cbc41300cbe100d57be88d26db28acb/alkey-0.4.1.tar.gz\", \n                \"md5_digest\": \"049dde852bf080720dba12ba6892b19d\", \n                \"downloads\": 2232, \n                \"filename\": \"alkey-0.4.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"16/89/12aebec5f3ba85fa5e3d543964773cbc41300cbe100d57be88d26db28acb/alkey-0.4.1.tar.gz\", \n                \"size\": 16598\n            }\n        ], \n        \"0.3.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-05-07T11:56:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/52/25/8fd072f76b31a3efc0b6dc72dbdb0fa1261a860ba197fdb60126bc98887f/alkey-0.3.1.1.tar.gz\", \n                \"md5_digest\": \"11cc784aa13b44d9ba0f3300e2b4b332\", \n                \"downloads\": 2295, \n                \"filename\": \"alkey-0.3.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"52/25/8fd072f76b31a3efc0b6dc72dbdb0fa1261a860ba197fdb60126bc98887f/alkey-0.3.1.1.tar.gz\", \n                \"size\": 16540\n            }\n        ], \n        \"0.7.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-09-25T14:53:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a3/8a/abdd8951abb2b1cbed1348d8195f7eb4c1c5cc130ac45ca2337193239840/alkey-0.7.1.tar.gz\", \n                \"md5_digest\": \"bcfa11f67e334cc9950c7a074efcf3f8\", \n                \"downloads\": 830, \n                \"filename\": \"alkey-0.7.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a3/8a/abdd8951abb2b1cbed1348d8195f7eb4c1c5cc130ac45ca2337193239840/alkey-0.7.1.tar.gz\", \n                \"size\": 14719\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-09-25T14:53:29\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/a3/8a/abdd8951abb2b1cbed1348d8195f7eb4c1c5cc130ac45ca2337193239840/alkey-0.7.1.tar.gz\", \n            \"md5_digest\": \"bcfa11f67e334cc9950c7a074efcf3f8\", \n            \"downloads\": 830, \n            \"filename\": \"alkey-0.7.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"a3/8a/abdd8951abb2b1cbed1348d8195f7eb4c1c5cc130ac45ca2337193239840/alkey-0.7.1.tar.gz\", \n            \"size\": 14719\n        }\n    ]\n}", "encoding": "UTF-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/alkey/json", "headers": {"X-Frame-Options": ["deny"], "X-PYPI-LAST-SERIAL": ["2535202"], "Access-Control-Allow-Origin": ["*"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Accept-Ranges": ["bytes"], "X-Content-Type-Options": ["nosniff"], "X-Timer": ["S1482488833.861888,VS0,VE1"], "Via": ["1.1 varnish", "1.1 varnish"], "X-Served-By": ["cache-iad2138-IAD, cache-hhn1520-HHN"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Age": ["63496"], "Date": ["Fri, 23 Dec 2016 10:27:13 GMT"], "Fastly-Debug-Digest": ["737a03d06d9ff3749ddc016c56a9b6af877d9e64d35125c3a8092eec14917f66"], "Server": ["nginx/1.10.2"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Content-Length": ["17450"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Content-Disposition": ["inline"], "X-Cache": ["HIT, HIT"], "Connection": ["keep-alive"], "Cache-Control": ["max-age=600, public"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://pypi.python.org/pypi/alkey/json"}}, {"recorded_at": "2016-12-23T10:27:14", "response": {"body": {"string": "", "encoding": null}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/thruflo/alkey", "headers": {"Content-length": ["0"], "Connection": ["close"], "Location": ["https://github.com/thruflo/alkey"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "http://github.com/thruflo/alkey"}}, {"recorded_at": "2016-12-23T10:27:14", "response": {"body": {"base64_string": "", "encoding": "utf-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/thruflo/alkey", "headers": {"Content-Encoding": ["gzip"], "Date": ["Fri, 23 Dec 2016 10:27:14 GMT"], "Server": ["GitHub.com"], "X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8C3BB5:585CFC02"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "Vary": ["X-PJAX", "Accept-Encoding"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Request-Id": ["98891ce9d3fddb738efdcbc1ea8f5f6d"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-Content-Type-Options": ["nosniff"], "Status": ["200 OK"], "X-Runtime": ["0.153900"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["6aca4ad039b350239ed28dd19335fa67"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:27:14 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYWJiZjE4ODM1M2Y1NjEyZGVjMGM5ODkyZTNlZjE0YmMiLCJzcHlfcmVwbyI6InRocnVmbG8vYWxrZXkiLCJzcHlfcmVwb19hdCI6MTQ4MjQ4ODgzNCwiX2NzcmZfdG9rZW4iOiJFUWNNTWRLNkhweUkyb3NkazN6NmNoRTR0NERQd2t4bXVZRCs2Q0dvcVlVPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--16b2501e013b63ca290739d73e1750090d05a1ba; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://github.com/thruflo/alkey"}}, {"recorded_at": "2016-12-23T10:27:15", "response": {"body": {"base64_string": "H4sIAAAAAAAAA41VwY7bNhC96ysGyWHthSM0m7QFDOwhl6I9tWh6X42lkcyYIhWSsuO/7xtSWjtBD/XB66U4b968eTOq3tJP9a9V9clGT8ad2ZqOk1A0brBCQSwn413c0+UojtjhUkzsWiET7wK6HV2kYkWx3p+o9wGXrzcASkdO+JIbwJuDWO8GPPJvcLlThDsKuGsCtdwihiMeWltX1W8Alm88TlZ2NJgzSEU/Sjoa15M1J9lXFeHTWo6R/gydhE1d19t9PtXPHCW8mI6eCeffneJo5ZtjquqvIGfj52ivpf7IZwhDTE4u5BU85wRXE5fE5fR5Sb2tVvA6P4g1T5O4bpP/Q4Z/EEkXP9uODnMsCmUupfB37+ggLeOE4lfLFmfjlU6a/lVQvV4dGQACitIZtKPomWGNa+3cQfeEnzkgSoyo8SFS05mQrg2NPNX0u7/IGVCmp6uftdaM87/qXER9fv/04SOq+nzj2pnOPSSaTHuieSLvbiWuYtf02e8yth4JRzVJCr6bW4kVGDxySjJO6RFW+QEJd9sju0EiinAzW3uFSzafijTJjEK+p0swCY3bQQRUnXVKElWnOLdIEvsZgaoP0xT8FIwkDldCs6rDvGAhINIRqmg9GWPyQTGOEmSLrDpLv1TV39Jzm+BTjQrohw5KkiHkYskrnqdmugYeTfeSbzS5YdbH7HtqUuBW0BdoYGWB/rmqHlEJT/CGtTo2C/rFpCOIB4nGGnGJ+tm1OVf2SJCEeqIKxtR65yQ/RBclhDynHfVsgIh4hK9mNyg3ci+aqPMYs0LjY/1eiQQ5zAb2imCQMgUtzPphgNDLTb0HOc8G9lN+pjeQqwnydYaY9VJ5m0nv8mIQ2Bj90gJ10L6/utk2IA02g6SMp8WX6EWiD4Ubd0CZtEi21DRsT3Kts6Tle9G8uRPKv/ZIbn2raIEvEuvUwaCmRV+cQYdBcU2saXvzDSb8AkkP80A6tVpDGWQwWHZgPJZpF4xG38M6Lvth5NQe6XBV8qogFSP4wxe0C6PV6CU9esUjDsM8ZumW/ah/s1X9Cf3DJp1ln4Gg0yi8buHMZRAnWm232Odus6+4eKKY9sJXHRogzc6gH4UJp1vE5q53021n5prywrxDLwsKYOs2Ysxo68fRpG0R86nIqSJmSX0ndlnoOshLffHOXJu129ubZbJOL1gKPEhoVuQnRR4ZzWbNzwe85e5BdyT1UO+pmGaveyq+fWzqNT77y4FynGCkXMBg/QE+u0PJ810AHu+CNdS7vGdub7mcVbXA+E54UUrx4iLWutuCtLpwS7N0TWlbAzrKd4Ou05B1/HGxIe/rQi22egCvh+Y/qBeqqPIPONzgGd4I+rKoq38BVX4w3CsIAAA=", "encoding": "utf-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/thruflo/alkey/master/CHANGES.md", "headers": {"Content-Encoding": ["gzip"], "Expires": ["Fri, 23 Dec 2016 10:32:15 GMT"], "ETag": ["\"7b7a63f6091aaf6f38299df64b9861a1b7e99552\""], "X-Frame-Options": ["deny"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "X-Cache": ["MISS"], "X-Fastly-Request-ID": ["63827f7bb5c3b34e01d2bf33adeed01c97c08af8"], "Accept-Ranges": ["bytes"], "X-Content-Type-Options": ["nosniff"], "X-Geo-Block-List": [""], "Cache-Control": ["max-age=300"], "Via": ["1.1 varnish"], "Access-Control-Allow-Origin": ["*"], "X-Served-By": ["cache-hhn1520-HHN"], "Content-Type": ["text/plain; charset=utf-8"], "Date": ["Fri, 23 Dec 2016 10:27:15 GMT"], "Source-Age": ["0"], "X-XSS-Protection": ["1; mode=block"], "Vary": ["Authorization,Accept-Encoding"], "X-GitHub-Request-Id": ["C71B4C15:5B43:52C0A7A:585CFC02"], "Content-Length": ["1034"], "X-Cache-Hits": ["0"], "X-Timer": ["S1482488834.910744,VS0,VE129"], "Connection": ["keep-alive"], "Strict-Transport-Security": ["max-age=31536000"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://raw.githubusercontent.com/thruflo/alkey/master/CHANGES.md"}}]}