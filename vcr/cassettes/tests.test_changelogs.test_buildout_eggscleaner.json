{"http_interactions": [{"response": {"status": {"code": 301, "message": "Moved Permanently"}, "headers": {"X-Cache": ["MISS, MISS"], "Via": ["1.1 varnish", "1.1 varnish"], "X-Served-By": ["cache-iad2143-IAD, cache-hhn1535-HHN"], "Age": ["0"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["0, 0"], "Date": ["Fri, 23 Dec 2016 10:30:52 GMT"], "Fastly-Debug-Digest": ["1d4630bccfe451ce54ea3b14064a99a96b716159fb19bf6b73c45eba79f57047"], "Server": ["nginx/1.10.2"], "X-Content-Type-Options": ["nosniff"], "Location": ["/pypi/buildout.eggscleaner/json"], "Connection": ["keep-alive"], "X-Timer": ["S1482489052.447633,VS0,VE109"], "Content-Length": ["0"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/buildout_eggscleaner/json", "body": {"string": "", "encoding": null}}, "recorded_at": "2016-12-23T10:30:52", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/buildout_eggscleaner/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["HIT, HIT"], "Via": ["1.1 varnish", "1.1 varnish"], "Date": ["Fri, 23 Dec 2016 10:30:52 GMT"], "Server": ["nginx/1.10.2"], "Content-Disposition": ["inline"], "Content-Length": ["14789"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Cache-Control": ["max-age=600, public"], "X-Served-By": ["cache-iad2138-IAD, cache-hhn1535-HHN"], "Age": ["76751"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Fastly-Debug-Digest": ["e658b7d5726f0308bb126f21648c0e57d85d3ef592ad0097b1f51e6263508a34"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Content-Type-Options": ["nosniff"], "X-PYPI-LAST-SERIAL": ["2534739"], "Connection": ["keep-alive"], "X-Timer": ["S1482489052.585738,VS0,VE0"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/buildout.eggscleaner/json", "body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"buildout extensions eggs directory clean\", \n        \"package_url\": \"http://pypi.python.org/pypi/buildout.eggscleaner\", \n        \"author\": \"Peter Uittenbroek\", \n        \"author_email\": \"uittenbroek@goldmund-wyldebeast-wunderliebe.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.1.7\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Buildout Eggscleaner\\n======================\\n\\nIntroduction\\n------------\\nThe buildout.eggscleaner extensions can be used to ensure your egg directory only contains 'used' eggs.\\nThe extension can report, but also move unused eggs to a specified directory.\\n\\n\\nInstallation\\n------------\\nEggscleaner is a buildout extensions, can add it like so ::\\n\\n    [buildout]\\n    extensions =\\n            buildout.eggscleaner\\n\\n\\nOptions\\n----------\\nold-eggs-directory\\n        The directory you want buildout.eggscleaner to move your unused eggs to.\\n        Should an excact egg already exist, we remove the one in the ''used'' eggs directory\\n\\n\\nExample ::    \\n\\n        [buildout]                                                                 \\n        extensions =                                                               \\n                buildout.eggscleaner  \\n        old-eggs-directory = ${buildout:directory}/old-eggs/\\n\\nTested with \\n-------------\\nzc.buildout: 1.4.3, 1.5.1, 1.5.2, 1.6.0, 2.2.1\\npython: 2.4.6, 2.6.8\\n\\nWorking with other extensions\\n-----------------------------\\nI looked at how buildout.dumppickedversions works and made this extension work in a similar manner.\\nThis extension will run alongside that one perfectly well.\\n\\n\\nExample outputs\\n----------------\\n\\nNothing do ::\\n\\n    *************** BUILDOUT EGGSCLEANER ****************\\n    No unused eggs in eggs directory\\n    *************** /BUILDOUT EGGSCLEANER ****************\\n\\n\\nMoving eggs ::\\n\\n    *************** BUILDOUT EGGSCLEANER ****************\\n    Moved unused egg: webcouturier.dropdownmenu-2.3-py2.6.egg \\n    Moved unused egg: collective.uploadify-1.0-py2.6.egg \\n    Moved unused egg: collective.simplesocial-1.6-py2.6.egg \\n    Moved unused egg: collective.autopermission-1.0b2-py2.6.egg \\n    *************** /BUILDOUT EGGSCLEANER ****************\\n\\nReporting ::\\n\\n    *************** BUILDOUT EGGSCLEANER ****************\\n    Don't have a 'old-eggs-directory' set, only reporting\\n    Can add it by adding 'old-eggs-directory = ${buildout:directory}/old-eggs' to your [buildout]\\n    Found unused egg: webcouturier.dropdownmenu-2.3-py2.6.egg \\n    Found unused egg: plone.recipe.command-1.1-py2.6.egg \\n    Found unused egg: collective.uploadify-1.0-py2.6.egg \\n    Found unused egg: Products.DocFinderTab-1.0.5-py2.6.egg \\n    Found unused egg: collective.simplesocial-1.6-py2.6.egg \\n    Found unused egg: collective.autopermission-1.0b2-py2.6.egg \\n    Found unused egg: Products.Clouseau-1.0-py2.6.egg \\n    *************** /BUILDOUT EGGSCLEANER ****************\\n\\n\\nDetailed Documentation\\n======================\\n\\n\\nLet's create an egg to use it in our tests::\\n\\n    >>> mkdir('myegg')\\n    >>> write('myegg', 'setup.py',\\n    ... '''\\n    ... from setuptools import setup\\n    ... setup(name='myegg', version='1.0',)\\n    ... ''')\\n    >>> write('myegg', 'README', '')\\n    >>> print system(buildout+' setup myegg bdist_egg'), # doctest: +ELLIPSIS\\n    Running setup script 'myegg/setup.py'.\\n    ...\\n\\n    >>> mkdir('baregg')                                                         \\n    >>> write('baregg', 'setup.py',                                                                                                                                                                                                   \\n    ... '''                                                                    \\n    ... from setuptools import setup                                           \\n    ... setup(name='baregg', version='1.0',)                                    \\n    ... ''')                                                                   \\n    >>> write('baregg', 'README', '')                                           \\n    >>> print system(buildout+' setup baregg bdist_egg'), # doctest: +ELLIPSIS  \\n    Running setup script 'baregg/setup.py'.                                     \\n    ...    \\n\\nNow let's create a buildout to install the egg and to use buildout.eggscleaner::\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.eggscleaner\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... parts = foo\\n    ... find-links += %s\\n    ... [foo]\\n    ... recipe = zc.recipe.egg\\n    ... eggs = myegg\\n    ... ''' % join('myegg', 'dist'))\\n\\nRunning the buildout will print information about unused eggs::\\n\\n    >>> print system(buildout), # doctest: +ELLIPSIS\\n    Getting distribution for 'buildout.eggscleaner'.\\n    ...\\n\\n\\nWhen we only want to report unused eggs we omit the '''old-eggs-directory''' option.\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.eggscleaner\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... parts = foo                                                            \\n    ... find-links += %s                                                       \\n    ... [foo]                                                                  \\n    ... recipe = zc.recipe.egg                                                 \\n    ... eggs = baregg \\n    ... ''' % join('baregg', 'dist'))   \\n\\n    >>> print system(buildout) # doctest:+ELLIPSIS \\n    Uninstalling foo.\\n    Installing foo.\\n    Getting distribution for 'baregg'.\\n    Got baregg 1.0.\\n    *************** BUILDOUT EGGSCLEANER ****************\\n    Don't have a 'old-eggs-directory' set, only reporting\\n    Can add it by adding 'old-eggs-directory = ${buildout:directory}/old-eggs' to your [buildout]\\n    ...\\n    Found unused egg: myegg...\\n    *************** /BUILDOUT EGGSCLEANER ****************\\n    <BLANKLINE>\\n\\n\\n\\nCheck that indeed nothing has been moved nor deleted::\\n\\n    >>> assert 'myegg' in  ''.join(os.listdir('eggs'))\\n\\nIf we want to move unused eggs, we just add an ``old-eggs-directory`` option and give a directory target::\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.eggscleaner\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... old-eggs-directory = ${buildout:directory}/old-eggs\\n    ... parts = foo                                                            \\n    ... find-links += %s                                                       \\n    ... [foo]                                                                                                                                                                                                                        \\n    ... recipe = zc.recipe.egg                                                 \\n    ... eggs = baregg                                                          \\n    ... ''' % join('baregg', 'dist')) \\n\\n    >>> print system(buildout) # doctest:+ELLIPSIS \\n    Updating foo.\\n    *************** BUILDOUT EGGSCLEANER ****************\\n    ...\\n    Moved unused egg: myegg...\\n    *************** /BUILDOUT EGGSCLEANER ****************\\n    <BLANKLINE>\\n\\nCheck that indeed 'myegg' has been moved::\\n\\n    >>> assert 'myegg' not in  ''.join(os.listdir('eggs')), 'myegg has not been moved out of egg dir'\\n    >>> assert 'myegg' in  ''.join(os.listdir('old-eggs')), 'myegg has not been moved to old-egg dir'\\n\\nAnd baregg is still present::\\n\\n    >>> assert 'baregg' in  ''.join(os.listdir('eggs')), 'baregg is not present in egg dir'\\n\\n\\nContributors\\n============\\n\\n- Peter Uittenbroek, Author\\n\\n\\nChange history\\n==============\\n\\n0.1.7 (2014-07-18)\\n------------------\\n- Bump version to fix previous release mess\\n\\n0.1.6 (unreleased by mistake)\\n-----------------------------\\n\\n- Make eggscleaner run under windows\\n  [anton-tagunov]\\n\\n- Make eggscleaner work with latests buildout (2.2.1)\\n  [anton-tagunov]\\n\\n- Only run eggscleaner when eggs-directory is local\\n  [thepjot]\\n\\n0.1.5 (2012-08-17)\\n-------------------\\n\\n- Redid documentation\\n  [thepjot]\\n\\n- Added doctest\\n  [thepjot]\\n\\n0.1 (internal release)\\n-----------------------\\n- Creation\\n  [thepjot]\", \n        \"release_url\": \"http://pypi.python.org/pypi/buildout.eggscleaner/0.1.7\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 5, \n        \"classifiers\": [\n            \"Framework :: Buildout\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: Zope Public License\", \n            \"Topic :: Software Development :: Build Tools\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"buildout.eggscleaner\", \n        \"license\": \"ZPL\", \n        \"summary\": \"A buildout extension to move non-used eggs to a specified directory\", \n        \"home_page\": \"https://github.com/thepjot/buildout.eggscleaner\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-08-17T12:29:51\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/db/3c/30f6cd3b8d82b8584df9bc973dd9462a81156aec6867379d5c082ac6b902/buildout.eggscleaner-0.1.2.zip\", \n                \"md5_digest\": \"86c4bd784925014833d783fddd61b24f\", \n                \"downloads\": 3049, \n                \"filename\": \"buildout.eggscleaner-0.1.2.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"db/3c/30f6cd3b8d82b8584df9bc973dd9462a81156aec6867379d5c082ac6b902/buildout.eggscleaner-0.1.2.zip\", \n                \"size\": 14259\n            }\n        ], \n        \"0.1.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-08-17T12:32:51\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b8/0c/078a239b756d1bad0ae83300469fb84b411c46e1f054ff3af4bf32464024/buildout.eggscleaner-0.1.3.zip\", \n                \"md5_digest\": \"fb2c3c33b7bf2da885bcd039af8c5151\", \n                \"downloads\": 2656, \n                \"filename\": \"buildout.eggscleaner-0.1.3.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b8/0c/078a239b756d1bad0ae83300469fb84b411c46e1f054ff3af4bf32464024/buildout.eggscleaner-0.1.3.zip\", \n                \"size\": 14194\n            }\n        ], \n        \"0.1.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-08-17T13:17:04\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b4/99/255c7d1385aafb88ca6f43d7925f7f8722f45da64d783569709f8586b279/buildout.eggscleaner-0.1.4.zip\", \n                \"md5_digest\": \"a35e577f5a358d61e95208fde27e4fdd\", \n                \"downloads\": 2640, \n                \"filename\": \"buildout.eggscleaner-0.1.4.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b4/99/255c7d1385aafb88ca6f43d7925f7f8722f45da64d783569709f8586b279/buildout.eggscleaner-0.1.4.zip\", \n                \"size\": 14056\n            }\n        ], \n        \"0.1.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-08-17T13:19:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/c9/73/87a04568b66ee348063ac8b480b9cb5ae5b020cfc81ad637a6fc8d25f747/buildout.eggscleaner-0.1.5.zip\", \n                \"md5_digest\": \"74254a4dd9fdb8013409d07e4296bb69\", \n                \"downloads\": 2638, \n                \"filename\": \"buildout.eggscleaner-0.1.5.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"c9/73/87a04568b66ee348063ac8b480b9cb5ae5b020cfc81ad637a6fc8d25f747/buildout.eggscleaner-0.1.5.zip\", \n                \"size\": 14996\n            }\n        ], \n        \"0.1.6\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-07-18T13:39:23\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/46/d4/e32867c0ef123f57b0d6a73c25ae13e0a050cc927454f01fe9cb3886b5b5/buildout.eggscleaner-0.1.6.zip\", \n                \"md5_digest\": \"22fd7f9ea6efc1d0f0bbafa28cd53671\", \n                \"downloads\": 1613, \n                \"filename\": \"buildout.eggscleaner-0.1.6.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"46/d4/e32867c0ef123f57b0d6a73c25ae13e0a050cc927454f01fe9cb3886b5b5/buildout.eggscleaner-0.1.6.zip\", \n                \"size\": 15694\n            }\n        ], \n        \"0.1.7\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-07-18T13:40:48\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/1b/4a/82df40613c58d939d8bf7c3e25aefc6ca5b8ce9c6fa87f5b771c29af5d6d/buildout.eggscleaner-0.1.7.zip\", \n                \"md5_digest\": \"09faef8c498742bdeacac9d83f887e75\", \n                \"downloads\": 2773, \n                \"filename\": \"buildout.eggscleaner-0.1.7.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"1b/4a/82df40613c58d939d8bf7c3e25aefc6ca5b8ce9c6fa87f5b771c29af5d6d/buildout.eggscleaner-0.1.7.zip\", \n                \"size\": 15821\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2014-07-18T13:40:48\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/1b/4a/82df40613c58d939d8bf7c3e25aefc6ca5b8ce9c6fa87f5b771c29af5d6d/buildout.eggscleaner-0.1.7.zip\", \n            \"md5_digest\": \"09faef8c498742bdeacac9d83f887e75\", \n            \"downloads\": 2773, \n            \"filename\": \"buildout.eggscleaner-0.1.7.zip\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"1b/4a/82df40613c58d939d8bf7c3e25aefc6ca5b8ce9c6fa87f5b771c29af5d6d/buildout.eggscleaner-0.1.7.zip\", \n            \"size\": 15821\n        }\n    ]\n}", "encoding": "UTF-8"}}, "recorded_at": "2016-12-23T10:30:52", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/buildout.eggscleaner/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 301, "message": "Moved Permanently"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["26049f47774ecce22e876a1fa55b2a77"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["301 Moved Permanently"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:53 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "Location": ["https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner"], "X-Runtime": ["0.010164"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8D23CA:585CFCDC"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["4d96c774de1d1384680e8aa5b4672ee8"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiYzMwNGY0MmM3ODE5NmZlMzc1NWRlN2IxNzg1NzI3MTcifQ%3D%3D--8d4496f311588714a6609c471096da5e2e498aae; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/thepjot/buildout.eggscleaner", "body": {"string": "<html><body>You are being <a href=\"https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner\">redirected</a>.</body></html>", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:30:53", "request": {"method": "GET", "uri": "https://github.com/thepjot/buildout.eggscleaner", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["a4e77e68361b6b21519d8422c6815f62"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:53 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "X-Runtime": ["0.180294"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8D23E1:585CFCDD"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["48b740484cf5c7a12d50bb868de127b9"], "Content-Encoding": ["gzip"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:30:53 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYzMwNGY0MmM3ODE5NmZlMzc1NWRlN2IxNzg1NzI3MTciLCJzcHlfcmVwbyI6IkdvbGRtdW5kLVd5bGRlYmVhc3QtV3VuZGVybGllYmUvYnVpbGRvdXQuZWdnc2NsZWFuZXIiLCJzcHlfcmVwb19hdCI6MTQ4MjQ4OTA1MywiX2NzcmZfdG9rZW4iOiJxZFA5VFlhRXFxcENBbU92ckhFWWR6L00wblFJZ0UxZVpPSDlaQzVBTHlZPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--b6a6f720f67db03b20fc241bc3df62b1ca00cd76; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner", "body": {"encoding": "utf-8", "base64_string": ""}}, "recorded_at": "2016-12-23T10:30:53", "request": {"method": "GET", "uri": "https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner", "headers": {"Accept": ["*/*"], "Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiYzMwNGY0MmM3ODE5NmZlMzc1NWRlN2IxNzg1NzI3MTcifQ%3D%3D--8d4496f311588714a6609c471096da5e2e498aae"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["MISS"], "Via": ["1.1 varnish"], "Vary": ["Authorization,Accept-Encoding"], "Date": ["Fri, 23 Dec 2016 10:30:53 GMT"], "Content-Length": ["290"], "Content-Encoding": ["gzip"], "X-XSS-Protection": ["1; mode=block"], "Expires": ["Fri, 23 Dec 2016 10:35:53 GMT"], "Cache-Control": ["max-age=300"], "X-Served-By": ["cache-hhn1536-HHN"], "X-Fastly-Request-ID": ["e5306d4ac138fb7d28d467154bb53ad18c47424f"], "X-Cache-Hits": ["0"], "X-GitHub-Request-Id": ["C71B4C21:30F8:4FAE81A:585CFCDD"], "Content-Type": ["text/plain; charset=utf-8"], "X-Content-Type-Options": ["nosniff"], "Connection": ["keep-alive"], "X-Timer": ["S1482489053.653701,VS0,VE125"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "ETag": ["\"8c5d6ed0471ffa1e273dfdfc0104e38afaa49ebd\""], "Source-Age": ["0"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Geo-Block-List": [""]}, "url": "https://raw.githubusercontent.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner/master/CHANGES.txt", "body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA3WRMU/DMBCF9/yKN7aDo6QC2oUBOiMkVtTBjY/E1DlX9rml/x6nAYmowZNlvfvevedtp7kldDaKD5ficXKKoirrcoNF4kCOdCSzLNTNKUbdGotVVd+paq3qzaxO4Tn1R5woROsZ4vFhv3AMdLI+Rfx4oKcYR+TDX2vsL+jznvpAc/TJQgovWQZq29jkaaaAkBiJTb6dLRt/jgXwrlk8K9FtYn/azc6dfTjkEengtFCUiH2yzvgkOW+5KuvlPOiV3eVqOoF1ND4oYwM1Q+ewEc432g0Y6ej46WU3xr+/NrpS1UbV69nMg9EbGWtgfJN6YtGSq52iFJ6MoatkCHDjg4VlocDa/X7Bv/1m1jbQrcc3BQaTM0cCAAA="}}, "recorded_at": "2016-12-23T10:30:53", "request": {"method": "GET", "uri": "https://raw.githubusercontent.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner/master/CHANGES.txt", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}], "recorded_with": "betamax/0.8.0"}