{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/pysandbox/json", "headers": {"Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "Accept": ["*/*"], "User-Agent": ["python-requests/2.12.4"]}, "method": "GET"}, "recorded_at": "2016-12-23T09:04:29", "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/pysandbox\", \n        \"author\": \"Victor Stinner\", \n        \"author_email\": \"victor.stinner@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"1.5.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"pysandbox is a Python sandbox. By default, untrusted code executed in the\\nsandbox cannot modify the environment (write a file, use print or import a\\nmodule). But you can configure the sandbox to choose exactly which features are\\nallowed or not, eg. import sys module and read /etc/issue file.\\n\\nWebsite: http://github.com/haypo/pysandbox/\\n\\n\\nFeatures\\n========\\n\\nBlocked Python functions (by default):\\n\\n * Deny access to the file system\\n * Deny importing Python modules\\n * Deny exiting Python\\n * Deny access to stdin, stdout or stderr\\n * Deny some builtins symbols like execfile(), reload() or KeyboardInterrupt\\n * Deny execution of arbitrary bytecode (creation of arbitrary code object)\\n\\nYou can enable all of these features by setting the sandbox configuration.\\n\\nThe default recursion limit is 50 frames.\\n\\nProtection of the namespace:\\n\\n * Deny access to function closure, globals, defaults and code\\n * Deny access to frame locals, globals and previous frame\\n * Deny access to traceback frame\\n * Deny access to types subclasses\\n * __builtins__ is read only\\n * Deny access to dict methods able to modify a dict, eg. dict.__setitem__.\\n   But you can use \\\"d[key] = value\\\" and \\\"del d[key]\\\" instead\\n\\n\\nLimitations\\n===========\\n\\npysandbox is unable to limit the memory or the CPU of the sandbox process: you\\nhave to use your own protection. Use for example a subprocess to run the\\nuntrusted code and use the OS to limit resources (memory and CPU) of the\\nsubprocess. Using a subprocess protects also the main process against crash in\\nthe untrusted code.\\n\\npysandbox is a sandbox for the Python namespace, not a sandbox between Python\\nand the operating system. It does not protect your system against Python\\nsecurity vulnerabilities: vulnerabilities in modules/functions available in\\nyour sandbox (depend on your sandbox configuration). By default, only few\\nfunctions are exposed to the sandbox namespace which limits the attack surface.\\n\\nSee Lib/test/crashers/ directory in the CPython source code to see examples of\\nknown bugs crashing the CPython interpreter.\\n\\n\\nConfiguration\\n=============\\n\\nUse SandboxConfig class to configure your sandbox. Features are the most simple\\nway to configure it.\\n\\nFeatures\\n--------\\n\\nTo enable a feature, use SandboxConfig('feature1', 'feature2', ...) or\\nconfig.enable('feature'). Available features:\\n\\n - \\\"codecs\\\": codecs module\\n - \\\"datetime\\\": datetime module\\n - \\\"encodings\\\": encodings module with ascii, latin_1, utf_8, utf_16_be,\\n   utf_32_be and rot_13 codecs (submodules). Enable codecs feature.\\n - \\\"exit\\\": sys.exit(), BaseException, KeyboardInterrupt, SystemExit, quit()\\n - \\\"future\\\": from __future__ import ...\\n - \\\"hashlib\\\": hashlib module.\\n - \\\"help\\\": pydoc.help(), use \\\"import pydoc\\\" outside the sandbox to use it. Enable regex feature.\\n - \\\"interpreter\\\": give access to standard streams, enable traceback. Enable\\n   encodings, exit, site, stdin, stdout, stderr and traceback features.\\n - \\\"itertools\\\": itertools module\\n - \\\"math\\\": math module\\n - \\\"random\\\": random module. Enable hashlib and math features.\\n - \\\"regex\\\": compile regex, match regex, search regex, etc. (re module)\\n - \\\"site\\\": allow to read the license file\\n - \\\"stdin\\\": sys.stdin, input() and raw_input()\\n - \\\"stdout\\\", \\\"stderr\\\": sys.stdout and sys.stderr\\n - \\\"time\\\": time module (except sleep, strptime and tzset functions)\\n - \\\"unicodedata\\\": unicodedata module, required for u'\\\\N{ATOM SYMBOL}' syntax\\n\\n\\nThe following features are unsafe: only use them if you really understand their\\nimpact in term of security. Available unsafe features:\\n\\n - \\\"debug_sandbox\\\": allow to display a traceback of the sandbox. Enable\\n   traceback feature.\\n - \\\"traceback\\\": allow access to the frame.f_code attribute. Next calls to\\n   allowModule() will add the module filename to the open() whitelist, so\\n   Python can display a traceback with the source code.  This feature have to\\n   be enabled before all other features.\\n\\nCPython restricted mode\\n-----------------------\\n\\nWARNING: CPython restricted mode is unsafe because it is possible to execute\\narbitrary bytecode.\\n\\nUse SandboxConfig(cpython_restricted=True) to enable CPython restricted mode.\\nIn this mode, reading a file and modify a class are blocked. Some attributes\\nare hidden (eg. method.__self__), other are read only (eg. func.__doc__).\\n\\nCPython restricted mode is disabled by default. The restricted mode is\\nincompatible with SandboxConfig \\\"traceback\\\" feature and allowPath() method.\\n\\nThe restricted mode doesn't exist in Python3 anymore, it was removed with\\nbastion and rexec modules:\\n\\n * http://svn.python.org/view?view=rev&revision=55301\\n * http://hg.python.org/cpython/rev/f60c877d52c8/\\n\\nOther options\\n-------------\\n\\n - config.allowPath(path) allows to read a file from the specified path\\n - config.allowModule(name, symbol1, symbol2, ...) allows to import the\\n   specified module, but give only access to the specified symbols\\n\\n\\nExample\\n=======\\n\\nWith call() method: ::\\n\\n    from sandbox import Sandbox\\n\\n    def func(a, b):\\n        return a + b\\n\\n    sandbox = Sandbox()\\n    print sandbox.call(func, 1, 2)\\n\\nWith execute() method: ::\\n\\n    from sandbox import Sandbox, SandboxConfig\\n    sandbox = Sandbox(SandboxConfig('stdout'))\\n    sandbox.execute('print(\\\"Code executed in the sandbox\\\")')\\n\\nexecute() with a local variable: ::\\n\\n    from sandbox import Sandbox, SandboxConfig\\n    sandbox = Sandbox(SandboxConfig('stdout'))\\n    sandbox.execute('print(data)', locals={'data': [1, 2, 3]})    # ok\\n    sandbox.execute('data.append(4)', locals={'data': [1, 2, 3]}) # error\\n\\nObjects passed to .call() globals/locals and .execute() arguments are\\nproxified: they are replaced by read-only views of the objects.\\n\\n\\nStatus\\n======\\n\\npysanbox is tested on Python 2.5 and 2.6 on Debian Sid.\\n\\nSee TODO file for the complete status.\\n\\n\\nSee also\\n========\\n\\nPython\\n------\\n\\n * http://wiki.python.org/moin/SandboxedPython\\n * tav CPython patches:\\n   http://codereview.appspot.com/20051\\n   http://codereview.appspot.com/21043\\n * secure*.py in plexnet\\n   http://github.com/tav/plexnet/tree/master/source/plexnet/util\\n * Security in Python Wiki:\\n   http://wiki.python.org/moin/Security\\n * safelite.py:\\n   http://tav.espians.com/a-challenge-to-break-python-security.html\\n * Zope security:\\n   http://pypi.python.org/pypi/RestrictedPython\\n   http://svn.zope.org/zope.security/trunk/src/zope/security/\\n * Brett Canon's \\\"objcap\\\" secured Python interpreter\\n   http://mail.python.org/pipermail/python-dev/2006-June/066344.html\\n   http://sayspy.blogspot.com/2007/05/i-have-finished-securing-python.html\\n   http://svn.python.org/view/python/branches/bcannon-objcap/secure_python.c?revision=56111&view=markup\\n * Python taint mode:\\n   http://www.cats-muvva.net/software/\\n * Controlling Access to Resources Within The Python Interpreter:\\n   http://www.cs.ubc.ca/~drifty/papers/python_security.pdf\\n * PyPy sandbox:\\n   http://codespeak.net/pypy/dist/pypy/doc/sandbox.html\\n * mxProxy:\\n   http://www.egenix.com/products/python/mxBase/mxProxy/\\n * Python 2.3: rexec and Bastion\\n\\nPython-dev mailing list\\n-----------------------\\n\\n * \\\"Python jail: whitelist vs blacklist\\\"\\n   Victor Stinner, Tue Feb 24 13:50:40 CET 2009\\n   http://mail.python.org/pipermail/python-dev/2009-February/086444.html\\n * \\\"Challenge: Please break this!\\\"\\n   tav, Mon Feb 23 23:41:30 CET 2009\\n   http://mail.python.org/pipermail/python-dev/2009-February/086401.html\\n   http://mail.python.org/pipermail/python-dev/2009-February/086413.html\\n   http://mail.python.org/pipermail/python-dev/2009-February/086439.html\\n * \\\"Reviving restricted mode?\\\"\\n   Guido van Rossum, Sun Feb 22 17:45:27 CET 2009\\n   http://mail.python.org/pipermail/python-dev/2009-February/086352.html\\n * \\\"object capability; func_closure; __subclasses__\\\"\\n   tav, Thu Jun 28 03:04:42 CEST 2007\\n   http://mail.python.org/pipermail/python-dev/2007-June/073724.html\\n * \\\"Capabilities\\\"\\n   Guido van Rossum, Fri, 07 Mar 2003 12:41:16 -0500\\n   http://mail.python.org/pipermail/python-dev/2003-March/033820.html\\n   http://mail.python.org/pipermail/python-dev/2003-March/033854.html\\n   ...\\n   (read the whole archive of march and april 2003)\\n\\nOther\\n-----\\n\\n * http://lua-users.org/wiki/SandBoxes\\n * \\\"Capability-based Financial Instruments\\\"\\n   Mark S. Miller, Chip Morningstar and Bill Frantz, 2000\\n   http://www.erights.org/elib/capability/ode/index.html\", \n        \"release_url\": \"http://pypi.python.org/pypi/pysandbox/1.5.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 5, \n        \"classifiers\": [\n            \"Development Status :: 5 - Production/Stable\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Natural Language :: English\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: C\", \n            \"Programming Language :: Python\", \n            \"Topic :: Security\", \n            \"Topic :: Software Development :: Libraries :: Python Modules\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"pysandbox\", \n        \"license\": \"BSD (2-clause)\", \n        \"summary\": \"Python sandbox\", \n        \"home_page\": \"http://github.com/haypo/pysandbox/\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"1.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-03-20T13:05:14\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/0f/35/3f4a1d9ed77bbc926c84f839a3912814a782757830ead894c9ff93e42807/pysandbox-1.5.tar.gz\", \n                \"md5_digest\": \"b5f2eb214de3b786b68a89c2ac35aec5\", \n                \"downloads\": 3654, \n                \"filename\": \"pysandbox-1.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"0f/35/3f4a1d9ed77bbc926c84f839a3912814a782757830ead894c9ff93e42807/pysandbox-1.5.tar.gz\", \n                \"size\": 29570\n            }\n        ], \n        \"1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-06-29T00:31:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/40/cf/0d1173e38c69bb11a945d2cfcc48439315b073d40f339205cb92c55dd071/pysandbox-1.0.tar.gz\", \n                \"md5_digest\": \"9d4e76fd752984c4b90195d19e067136\", \n                \"downloads\": 2355, \n                \"filename\": \"pysandbox-1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"40/cf/0d1173e38c69bb11a945d2cfcc48439315b073d40f339205cb92c55dd071/pysandbox-1.0.tar.gz\", \n                \"size\": 20787\n            }\n        ], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-07-26T02:48:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/78/87/d03ed09b3d1302bf10359cac678c85f1795abb3ceec444d8c1f93af4db0a/pysandbox-1.0.1.tar.gz\", \n                \"md5_digest\": \"88852918e12af49787bebc9a82b5ca7e\", \n                \"downloads\": 2363, \n                \"filename\": \"pysandbox-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"78/87/d03ed09b3d1302bf10359cac678c85f1795abb3ceec444d8c1f93af4db0a/pysandbox-1.0.1.tar.gz\", \n                \"size\": 24301\n            }\n        ], \n        \"1.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-09-15T03:44:09\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/30/71/c2c13291a1e0c19c565552c6d0824f8a08f912258a6366983493fe823b83/pysandbox-1.0.2.tar.gz\", \n                \"md5_digest\": \"4135abb9aaa16e579e4cd75fb24e0aa7\", \n                \"downloads\": 2323, \n                \"filename\": \"pysandbox-1.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"30/71/c2c13291a1e0c19c565552c6d0824f8a08f912258a6366983493fe823b83/pysandbox-1.0.2.tar.gz\", \n                \"size\": 24426\n            }\n        ], \n        \"1.0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-09-16T13:11:43\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/99/f3/ad6ada8bd16f5133dd6979119eb7ae6df99c3f54c415eb2d780707137704/pysandbox-1.0.3.tar.gz\", \n                \"md5_digest\": \"6bb34e202915ee8005c656d3f8b4b19a\", \n                \"downloads\": 2637, \n                \"filename\": \"pysandbox-1.0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"99/f3/ad6ada8bd16f5133dd6979119eb7ae6df99c3f54c415eb2d780707137704/pysandbox-1.0.3.tar.gz\", \n                \"size\": 24579\n            }\n        ], \n        \"1.5.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-11-12T20:52:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/20/d5/baa234649391ef369dd2203cd6fb2c20dba687d9370f19ba4a80e49c2e4c/pysandbox-1.5.1.tar.gz\", \n                \"md5_digest\": \"1990690616de34b43cd5c316323038e5\", \n                \"downloads\": 3490, \n                \"filename\": \"pysandbox-1.5.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"20/d5/baa234649391ef369dd2203cd6fb2c20dba687d9370f19ba4a80e49c2e4c/pysandbox-1.5.1.tar.gz\", \n                \"size\": 30706\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2013-11-12T20:52:42\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/20/d5/baa234649391ef369dd2203cd6fb2c20dba687d9370f19ba4a80e49c2e4c/pysandbox-1.5.1.tar.gz\", \n            \"md5_digest\": \"1990690616de34b43cd5c316323038e5\", \n            \"downloads\": 3490, \n            \"filename\": \"pysandbox-1.5.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"20/d5/baa234649391ef369dd2203cd6fb2c20dba687d9370f19ba4a80e49c2e4c/pysandbox-1.5.1.tar.gz\", \n            \"size\": 30706\n        }\n    ]\n}"}, "url": "https://pypi.python.org/pypi/pysandbox/json", "headers": {"Age": ["66132"], "Content-Disposition": ["inline"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Served-By": ["cache-iad2135-IAD, cache-hhn1520-HHN"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["0, 1"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Date": ["Fri, 23 Dec 2016 09:04:29 GMT"], "Cache-Control": ["max-age=600, public"], "Connection": ["keep-alive"], "X-Content-Type-Options": ["nosniff"], "Content-Length": ["15120"], "Accept-Ranges": ["bytes"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482483869.444010,VS0,VE0"], "Fastly-Debug-Digest": ["0c409d58c23191ef260d52b11547d0be27053dcd01445af37c5867b37dd63435"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "X-PYPI-LAST-SERIAL": ["2534907"], "X-Cache": ["MISS, HIT"]}, "status": {"message": "OK", "code": 200}}}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "uri": "http://github.com/haypo/pysandbox", "headers": {"Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "Accept": ["*/*"], "User-Agent": ["python-requests/2.12.4"]}, "method": "GET"}, "recorded_at": "2016-12-23T09:04:29", "response": {"body": {"encoding": null, "string": ""}, "url": "http://github.com/haypo/pysandbox", "headers": {"Content-length": ["0"], "Location": ["https://github.com/haypo/pysandbox"], "Connection": ["close"]}, "status": {"message": "Moved Permanently", "code": 301}}}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "uri": "https://github.com/haypo/pysandbox", "headers": {"Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "Accept": ["*/*"], "User-Agent": ["python-requests/2.12.4"]}, "method": "GET"}, "recorded_at": "2016-12-23T09:04:30", "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "url": "https://github.com/haypo/pysandbox", "headers": {"X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["6c2a40aa196ebaf2045014d74c70fea0"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F76E93D:585CE89D"], "X-Served-By": ["b26767d88b31b8e1e88f61422786ec5e"], "X-Runtime": ["0.083029"], "X-Frame-Options": ["deny"], "Date": ["Fri, 23 Dec 2016 09:04:30 GMT"], "X-Content-Type-Options": ["nosniff"], "Transfer-Encoding": ["chunked"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Cache-Control": ["no-cache"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 09:04:30 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiY2I1Y2I2Njk2YjgxZDEzNzNiMGEwODU1MDE4OGQzYjIiLCJzcHlfcmVwbyI6ImhheXBvL3B5c2FuZGJveCIsInNweV9yZXBvX2F0IjoxNDgyNDgzODcwLCJfY3NyZl90b2tlbiI6Im44d0RUeStKeC9XYXpFaTFWeFJwKzRTWGR2cW9YWFg1RDZGNEZnbWd1SGc9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--7702ce31231cf32b881f282c00fc979421f61407; path=/; secure; HttpOnly"], "Status": ["200 OK"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Server": ["GitHub.com"], "Content-Type": ["text/html; charset=utf-8"]}, "status": {"message": "OK", "code": 200}}}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "uri": "https://raw.githubusercontent.com/haypo/pysandbox/master/ChangeLog", "headers": {"Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "Accept": ["*/*"], "User-Agent": ["python-requests/2.12.4"]}, "method": "GET"}, "recorded_at": "2016-12-23T09:04:30", "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA6VXXW/bNhR916+48EudwVadFOlQv3VZOwRotyL92PZk0BJlc6FIgaRia79+51KULCfNMGBGECvi/b7nnst8k84ra+gyf50tT58se3/7x8d3a3KyEcrRjZbC3daNdWF+QY2zQRYBeguyDjK1fZCkQpYRPj/Q53c3X+9uv/xJMLKmzWbbKh2U8ZsNKU/GHqAiSmt0R4e9NCSPsmiDhGUct16WeTREdBvoIDxFyXOVQmgNeT49KfxA73pLVNgSARkS5Nstwi2kZ0FldhT2kj51YY+kJ2e1LVstk1vkZH1eWXc/v0iG35YlLZel8mKr5XKiWNi6FqYkrYwk23BRkkrTeRxs7XFImlUpWMQeij0VTvg9xzgJKBlNBu6kMsEhsEJGoaBqaduQvNC8r3tJlbP1xNtlfj1E/UHVKlANOdelVz9pW9wT50YcdthzXdOZD6VCS/HFbvgYj9I5Ek6i/qVy6DocIoeXpXx4aVqtaY5qrX/9+gFdot+VKe3BD+5/draJkc+QiHSNk/g9Q8lMpXatEzGNSorQOrmmCCKWjs2Dj4lS3nRjURotUBDf+bwRYR/DtFBjHGrB4T0Ip7jW/qwKyjQpKSTHj179DZHs2zgB1zS/Wl1eLVevlleri+k4nH2y7MseHX1IenisW/QTNZZUtSbOhdBr2qO/Wm0XGAzpgrXaL6hGxAtyiMLWi4wbuqA8zynhz8dK+7bhQQOqKXrCT2O9VxE+e2HuPVdH9B61OCofsrOaruHyxVQJ0loDgbPWeFHJWXI3hptmI4tSnyHxMZ5jwGoJYKJkVezMZw78eBN9LeIbJ32rw3A+2EPImbGB8XxUlRozGWtW4+SB09XeRs2UMxu6ScMA08EpBlxWMyK4dVxs6wNYAHOH9sf0DgowSEqv8u+T0AjFYYhOHMbVikTCEcuq4rdAIozdfPqaGIGhaDy/PqVYN1rW0jDiMMU3nOKJWdQOGAAETKmBzEgAIdli6oJOP00Dn8Xq3v7y9sPdR5bGkYS3kdceJSNNR30r6VHj2c5mYILUZQwoXifvT6tLsbpcWaiJcKKKc6c9cYgish4QFbpG5uB24SUTO96kkpLYCZA9vnuOk24s4uA9waFSkRsTq5Zc8hTdFYYRFg+gKeFsi84nY0NBvkTsFW2PJ91PeE+zY0VGbAgqZSUSTq9XIExRj+zwNk5Gzzt1oyLq08KibTdonrHnqQgDGnJ+2CRZ/3IzPm42kwUyHZ/8yaytgZpaaeHGeR2ncAvAYvm9GCDUz1UXoxYBfYSAHLrWN7/3Ai3pocdo5fEaacZ0kT3gaScD28GSZzrNJ+EiC+U2G/j3jSwU8JzYAFq8Nchu/+J+czRdHM9K3MtHqzSK+InVGdN74WcLmgFtkueRn6XBe3BQPBgZk/9gzuTvnjVnyTC7m0XlYYMMTiZrYzgiaeJCoNHLeIJcBu4x1iyFL5RKLlqj4irSHA6YKtn/bYLS4yKZfn6uqu/OpPLJSa18vJbMR4mtBBARa7/mUfXpWBwv8ifLlYN8dqvumLQmgGXo59WmSIyaothJgxQx+/lO9WdPoH/X9iwVkCBKhpqk4UIj+IFJlc+fKcR00a7yV3HVrparN8vL18+vWl62zxLgKakSbkBFyqgQ4TrhounlMz+P4WoSw/X/jgEDG+NIM+LH2x6S51EV/WmwpxF+EuCatpFfCr5tL7C/m/gLpa5xK5NhYDEuedvw9AwgSj7nTDwM1xqMzFKbDdTS3wcJuAvNk9v1jmR58agml0NNflxe/ae+vAeFTzh72MoKQXQTkURK+XjTX/d8BlIHUBEWGXkY+ASXU9ppu8XIxSQQ6jB9dNqWuPYzZaH6KmBYDiYWeNH/szAlyHvZ9XYehG7Pb3yrId3Xy6s3/3bjGzJxwH7TbrUq+LYpsfuy7B/dDLo3Qw0AAA=="}, "url": "https://raw.githubusercontent.com/haypo/pysandbox/master/ChangeLog", "headers": {"ETag": ["\"3124414aa029416ba4b6e6f83eeadfe3c2069232\""], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "X-Served-By": ["cache-hhn1533-HHN"], "X-Geo-Block-List": [""], "X-Frame-Options": ["deny"], "Expires": ["Fri, 23 Dec 2016 09:09:30 GMT"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["0"], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Content-Type": ["text/plain; charset=utf-8"], "Connection": ["keep-alive"], "X-Content-Type-Options": ["nosniff"], "Content-Length": ["1450"], "Accept-Ranges": ["bytes"], "Date": ["Fri, 23 Dec 2016 09:04:30 GMT"], "Source-Age": ["0"], "X-GitHub-Request-Id": ["C71B4C24:5BAA:68319EF:585CE89E"], "X-Timer": ["S1482483870.439734,VS0,VE122"], "Cache-Control": ["max-age=300"], "Content-Encoding": ["gzip"], "Vary": ["Authorization,Accept-Encoding"], "Via": ["1.1 varnish"], "X-Cache": ["MISS"], "X-Fastly-Request-ID": ["bff612dba33de09aad41dab8ed26c22c4642a78a"]}, "status": {"message": "OK", "code": 200}}}]}