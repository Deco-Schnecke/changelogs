{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/plantextract/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["9e394bf5a91bc6b77cc2d5ea5ee7c85f998a146b11ddb84a5a7c1598ee5a0d9b"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 0"], "Date": ["Fri, 23 Dec 2016 10:43:26 GMT"], "X-Served-By": ["cache-iad2145-IAD, cache-hhn1520-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489806.123683,VS0,VE89"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2535293"], "X-Cache": ["HIT, MISS"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["61250"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["10769"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/plantextract/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"sunspec plant extract\", \n        \"package_url\": \"http://pypi.python.org/pypi/plantextract\", \n        \"author\": \"Brett Francis\", \n        \"author_email\": \"brett@gridward.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.3.0\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Plant Extract Document processor\\n================================\\nA package for interacting with and creating [SunSpec](http://sunspec.org)\\nPlant Extract Documents and the standard blocks contained therein.\\n\\nInstallation\\n------------\\nUsing pip::\\n\\n    pip install plantextract\\n\\nUsage\\n-------\\nTypical `parse` usage looks like this::\\n\\n    #!/usr/bin/env python\\n\\n    from pedparser import ModelIDValues, PointIDValues\\n    import plantextract.pedparser\\n    ...\\n\\n    this_dir, this_filename = os.path.split(__file__)\\n    ped_file = os.path.join(this_dir, 'examples', 'ped-kitchen-sink.xml')\\n    parser = pedparser.PlantExtractParser()\\n    parser.parse(ped_file=ped_file)\\n    parser.ped.plant               # the Plant block\\n    parser.ped.plant.name          # the Plant's name attribute\\n    parser.ped.plant.location.city # the Plant's location city attribute\\n\\n    # get ENERGY Points that are from an INVERTER_SINGLE_PHASE Model\\n    points = parser.match_model_points(\\n        model_id=ModelIDValues.INVERTER_SINGLE_PHASE,\\n        point_ids=[PointIDValues.ENERGY]\\n    )\\n    print('Retrieved point:', points[0].id, points[0].value())\\n    print('Point scale factor:', points[0].sf)\\n    print('Point value:', points[0].value())  # another way to get Point value\\n\\n    # get ENERGY Points that are from an INVERTER_SINGLE_PHASE Model, but only\\n    # if the Device containing the Model has a logger ID of '11:22:33:44:55:66'\\n    points = parser.match_model_points(\\n        model_id=ModelIDValues.INVERTER_SINGLE_PHASE,\\n        logger_id='11:22:33:44:55:66',\\n        point_ids=[PointIDValues.ENERGY, PointIDValues.POWER]\\n    )\\n    print('Retrieved point:', points[0].id, points[0].value())\\n    # ...etc...\\n\\n    # ...or one can directly interact with the sunSpecData block\\n    print parser.ped.sunSpecData.d   # the DeviceRecords list in the sunSpecData\\n    print parser.ped.sunSpecData.d[0].m # the Models list in the Zero'th Device\\n    print parser.ped.sunSpecData.d[0].m[0].p[0].id # the ID of the Zero'th Point\\n    # ...etc...\\n\\n\\nTypical `create` usage looks like this:\\n\\n    #!/usr/bin/env python\\n\\n    from plantextract.ped import PlantExtract, Plant, Location\\n    from plantextract.ped import NamePlate, Array, Equipment\\n\\n    ped = PlantExtract(\\n        Plant(\\n            uuid4(),\\n            activation_date=\\\"2013-03-02\\\",\\n            location=Location(latitude=1.1, longitude=2.2,\\n                                     city=\\\"Redwood City\\\",\\n                                     state_province=\\\"CA\\\"),\\n            name_plate=NamePlate(props=[\\n                Property('installedDCCapacity', 'float', '6.5'),\\n                Property('installedACCapacity', 'float', '6.4')\\n            ]),\\n            design_elements=DesignElements(props=[\\n                Property('plantType', 'string', 'commercial')\\n            ]),\\n            array=Array(props=[\\n                Property('description','string','Carport')\\n            ], array_id=1),\\n            equipment=Equipment(props=[\\n                Property('Mn', 'string', 'MeterManuf'),\\n                Property('Md', 'string', 'MeterModel'),\\n                Property('uncertainty', 'float', '0.5')\\n            ], equipment_type='meter')\\n        )\\n    )\\n\\nRequires [PyXB](http://pyxb.sourceforge.net) 1.2.3\", \n        \"release_url\": \"http://pypi.python.org/pypi/plantextract/0.3.0\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 3, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: Other Audience\", \n            \"License :: OSI Approved :: Apache Software License\", \n            \"Natural Language :: English\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Topic :: Software Development\", \n            \"Topic :: Text Processing :: Markup :: XML\", \n            \"Topic :: Utilities\"\n        ], \n        \"name\": \"plantextract\", \n        \"bugtrack_url\": null, \n        \"license\": \"Apache License, Version 2.0\", \n        \"summary\": \"Python Plant Extract Document processor\", \n        \"home_page\": \"https://github.com/lashex/ped.git\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.2.7\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-12-30T08:23:22\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/c7/82/5bd2a819bfbea160749db810aaa49fc82d7ee6ae4eca81f14fd5c46b6873/plantextract-0.2.7-py2.7.egg\", \n                \"md5_digest\": \"b43b9fd68faab6452be682ccff521861\", \n                \"downloads\": 2473, \n                \"filename\": \"plantextract-0.2.7-py2.7.egg\", \n                \"packagetype\": \"bdist_egg\", \n                \"path\": \"c7/82/5bd2a819bfbea160749db810aaa49fc82d7ee6ae4eca81f14fd5c46b6873/plantextract-0.2.7-py2.7.egg\", \n                \"size\": 111254\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-12-30T08:23:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ff/8d/5704f268972ac914b4314294608ecc5edd35292b59b90e95bff286e97d9f/plantextract-0.2.7.tar.gz\", \n                \"md5_digest\": \"ffb00d5ea94432b71fb47aa7d1cb782b\", \n                \"downloads\": 2085, \n                \"filename\": \"plantextract-0.2.7.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ff/8d/5704f268972ac914b4314294608ecc5edd35292b59b90e95bff286e97d9f/plantextract-0.2.7.tar.gz\", \n                \"size\": 49990\n            }\n        ], \n        \"0.3.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-11-05T08:03:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/98/c9/b26490711873c0f4e7e66ec14c38f8b76f8e5ba175fb4f10067d2c2f156d/plantextract-0.3.0.tar.gz\", \n                \"md5_digest\": \"2d514c57417e9ab5b081b170dfdf010b\", \n                \"downloads\": 2242, \n                \"filename\": \"plantextract-0.3.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"98/c9/b26490711873c0f4e7e66ec14c38f8b76f8e5ba175fb4f10067d2c2f156d/plantextract-0.3.0.tar.gz\", \n                \"size\": 68368\n            }\n        ], \n        \"0.2.9\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-06-30T06:05:06\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/db/cc/c6ac5e8a103068968827f66b4aabb66140a74f8e4e5dfd02a28fc72ad2b7/plantextract-0.2.9-py2.7.egg\", \n                \"md5_digest\": \"5f0a183b4918215c94ef0da602a9af07\", \n                \"downloads\": 1874, \n                \"filename\": \"plantextract-0.2.9-py2.7.egg\", \n                \"packagetype\": \"bdist_egg\", \n                \"path\": \"db/cc/c6ac5e8a103068968827f66b4aabb66140a74f8e4e5dfd02a28fc72ad2b7/plantextract-0.2.9-py2.7.egg\", \n                \"size\": 146779\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-06-30T06:05:03\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/14/63/91844091ac67117a6412013cf8caa6ae3edd3b5b1deda127cf7e8b46d2b0/plantextract-0.2.9.tar.gz\", \n                \"md5_digest\": \"c3f413eb7b51e17bb92263aba9ce686a\", \n                \"downloads\": 1875, \n                \"filename\": \"plantextract-0.2.9.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"14/63/91844091ac67117a6412013cf8caa6ae3edd3b5b1deda127cf7e8b46d2b0/plantextract-0.2.9.tar.gz\", \n                \"size\": 53515\n            }\n        ], \n        \"0.2.8\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-01-10T07:40:57\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/c4/85/1768f3850c5d9d13b07eeb59d54ce96b6c952d0f00cab5927216c24c6254/plantextract-0.2.8-py2.7.egg\", \n                \"md5_digest\": \"9ac3b07e1c765d8009ad1e4c140b5109\", \n                \"downloads\": 2016, \n                \"filename\": \"plantextract-0.2.8-py2.7.egg\", \n                \"packagetype\": \"bdist_egg\", \n                \"path\": \"c4/85/1768f3850c5d9d13b07eeb59d54ce96b6c952d0f00cab5927216c24c6254/plantextract-0.2.8-py2.7.egg\", \n                \"size\": 128391\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-01-10T07:40:56\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/c5/1b/b7acbe8ded2f098abdc55db95e78fde3fc44850cc78132bdfa65d8226fd7/plantextract-0.2.8.tar.gz\", \n                \"md5_digest\": \"12c7507b37788b975804e78e7a681799\", \n                \"downloads\": 2007, \n                \"filename\": \"plantextract-0.2.8.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"c5/1b/b7acbe8ded2f098abdc55db95e78fde3fc44850cc78132bdfa65d8226fd7/plantextract-0.2.8.tar.gz\", \n                \"size\": 50295\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2013-11-05T08:03:41\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/98/c9/b26490711873c0f4e7e66ec14c38f8b76f8e5ba175fb4f10067d2c2f156d/plantextract-0.3.0.tar.gz\", \n            \"md5_digest\": \"2d514c57417e9ab5b081b170dfdf010b\", \n            \"downloads\": 2242, \n            \"filename\": \"plantextract-0.3.0.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"98/c9/b26490711873c0f4e7e66ec14c38f8b76f8e5ba175fb4f10067d2c2f156d/plantextract-0.3.0.tar.gz\", \n            \"size\": 68368\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:43:26"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/lashex/ped.git", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Content-Type": ["text/html"], "Content-Length": ["178"], "X-Frame-Options": ["DENY"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F9043AF:585CFFCE"], "Location": ["https://github.com/lashex/ped"], "Vary": ["Accept-Encoding"], "Server": ["GitHub.com"], "Date": ["Fri, 23 Dec 2016 10:43:26 GMT"], "X-Served-By": ["63914e33d55e1647962cf498030a7c16"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://github.com/lashex/ped.git", "body": {"encoding": "ISO-8859-1", "string": "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n"}}, "recorded_at": "2016-12-23T10:43:26"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/lashex/ped", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F9043C2:585CFFCE"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:43:26 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["a22dbcbd09a98eacdd14ac7804a635dd"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["5d58da02f54c00d221161bc68c351afe"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.088608"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:43:26 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZjExMTRjOGUwNTBkZmI3MDFjZmJkNGM1NTI2ZWMyMzciLCJzcHlfcmVwbyI6Imxhc2hleC9wZWQiLCJzcHlfcmVwb19hdCI6MTQ4MjQ4OTgwNiwiX2NzcmZfdG9rZW4iOiJHS1lsWllKanYvTHJMV0FHNFkzZE95THRkWFRGVCs3VXdJQWRIYmxTWDYwPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--d5a10fe29397c6be7ba39208080f51e867fecb32; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/lashex/ped", "body": {"base64_string": "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", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:26"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/lashex/ped/master/CHANGES.txt", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C19:56A5:29C90D0:585CFFCE"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:43:27 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1528-HHN"], "X-Fastly-Request-ID": ["7794b0dfe9bce714a11b829158f98561938a2d07"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489807.071557,VS0,VE116"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"26bbfb4e20836e49da507ff5c3fcf8e94c2f3030\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["461"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:48:27 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/lashex/ped/master/CHANGES.txt", "body": {"base64_string": "H4sIAAAAAAAAA02SQW/bMAyF7/kVvGUbViFNB6w7rECB7LYCAXLpzaAlJlYjS4JIJfG/H2VvyI5K+L7H9+iN2Zof8PAAPbK3sP+1A1sIxacIJ3+hCCwYHRYHfUj2zKvVRiXPTfLqHDnI5DIWpmI8d/r49Bmq+OBlgmONdiYpAXCe7jqW0nUwkgzJ/aV9b7S3VAjoloO3XsBRpugo2glqVkK4jQGezMY8go8shA7SUbmTDD6e4OVn+3Ohfbvv9prRDgRbs4Hf3lJkWkae2sjRFxbIhbJmpMxwTAVy7XUBwAv6gP0cY5Fs75KSapztTyTS3IU7i8HCNZWzvldfdPCm9lwjZ7KdQ0GzTz6KkSmrZcpUtB/+px9QQPBMrOEkAVqrFgKHGg+qXwEc3nbvoFrir6ADNsWLElRIsHAvGCot6vajTaWQFdhrP9peUzqYZ8wS57HFafs2S0AYqx1gbCc4Fq/NB70e8qDHMxonB4xCNymoTO30jCeCmK4wIKt4rXSTp7UCXA30/4Uqt4AIhZyWphSIOFJjvh92qlXDj6qdhoTtYPqJYVDvfrpD28ez5tHd5tfVa6KqGCI3d5egJ92JWeVet/0D2gijx9ICAAA=", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:27"}], "recorded_with": "betamax/0.8.0"}