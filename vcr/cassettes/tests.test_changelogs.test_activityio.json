{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://pypi.python.org/pypi/activityio/json", "body": {"string": "", "encoding": "utf-8"}}, "response": {"status": {"message": "OK", "code": 200}, "headers": {"X-Frame-Options": ["deny"], "X-Cache": ["HIT, MISS"], "X-Served-By": ["cache-iad2140-IAD, cache-hhn1525-HHN"], "Content-Disposition": ["inline"], "X-Timer": ["S1482487838.463484,VS0,VE87"], "Age": ["64288"], "X-Permitted-Cross-Domain-Policies": ["none"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["f1402f559703f88e756dbfc228965118ee97a75879382e39e862c1d5c8c7b011"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["1, 0"], "Content-Length": ["6818"], "Accept-Ranges": ["bytes"], "Date": ["Fri, 23 Dec 2016 10:10:38 GMT"], "X-PYPI-LAST-SERIAL": ["2535148"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "X-Content-Type-Options": ["nosniff"], "Server": ["nginx/1.10.2"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Content-Type": ["application/json; charset=\"UTF-8\""]}, "url": "https://pypi.python.org/pypi/activityio/json", "body": {"string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"exercise cycling running garmin data\", \n        \"package_url\": \"http://pypi.python.org/pypi/activityio\", \n        \"author\": \"Jordan Mackie\", \n        \"author_email\": \"jmackie@protonmail.com\", \n        \"download_url\": \"\", \n        \"platform\": \"\", \n        \"version\": \"0.0.2\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"# activityio: Exercise data handling library\\n\\nExercise/activity data has become a prolific resource, but applying any kind of sophisticated analyses is made difficult by the variety of file formats. This `python` library is intended to munge a number of these formats and present the data in a predictable and useable form. Moreover, the API is both closely intertwined with, and an extension of, the awesome [`pandas`](https://github.com/pandas-dev/pandas) library.\\n\\n## Installation\\n\\nThe package is available on PyPI:\\n\\n```\\npip install activityio\\n```\\n\\n## Example usage\\n\\nThere is a `read` function at the top-level of `activityio` that dispatches the appropriate reader based on file extension:\\n\\n```pycon\\n>>> import activityio as aio\\n>>> data = aio.read('example.srm')\\n```\\n\\nBut you can also use sub-packages explicitly:\\n\\n```pycon\\n>>> from activityio import srm\\n>>> data = srm.read('example.srm')\\n```\\n\\n`data` is a subclass of the `pandas.DataFrame` and provides some neat additional functionality. Most notably, certain columns are \\\"magic\\\" in that they return specific `pandas.Series` subclasses. These subclasses make unit-switching easy, and provide other useful methods.\\n\\n```pycon\\n>>> type(data)\\n<class 'activityio._util.types.ActivityData'>\\n\\n>>> data.head(5)\\n          lap    dist  pwr   speed  temp  alt  cad  hr\\ntime                                                  \\n00:00:00    1   5.611    0   5.611  26.8  530    0   0\\n00:00:01    1  10.999    0   5.388  26.8  530    0   0\\n00:00:02    1  25.054    0  14.055  27.1  532    0   0\\n00:00:03    1  42.609    0  17.555  27.1  532    0   0\\n00:00:04    1  59.414    0  16.805  27.3  532    0   0\\n\\n>>> data.normpwr()\\n279.40584154170227\\n\\n>>> type(data.speed)\\n<class 'activityio._util.types.Speed'>\\n>>> data.speed.base_unit\\n'm/s'\\n>>> data.speed.kph.mean()  # use a different unit\\n41.045473986415516\\n\\n>>> data.dist.base_unit\\n'm'\\n>>> data.dist.miles[-1]\\n101.17480453266764\\n\\n>>> data.alt.base_unit\\n'm'\\n>>> data.alt.ascent.sum()\\n1779.0\\n```\\n\\nBut note that you lose this functionality if you go changing column names:\\n\\n```pycon\\n>>> data = data.rename(columns={'alt': 'altitude'})\\n>>> type(data.altitude)\\n<class 'pandas.core.series.Series'>\\n```\\n\\n## API Notes\\n\\nThe main package is composed of sub-packages that contain the reading logic for the file format after which they're named. (e.g. `activityio.fit` is for parsing ANT/Garmin FIT files.) \\n\\nThe ultimate logic is defined in a `_reading` module, which provides two functions: `gen_records` and `read_and_format`. \\n\\n+ `gen_records` is a generator function for iterating over the data-points in a file. The rows of the data table if you like. A \\\"record\\\" is a dictionary.\\n+ `read_and_format` uses the above generator to return an `ActivityData` object.\\n\\n`read_and_format` is available at the top-level of a sub-package as `read`; so reading in a file looks like `srm.read('path_to_file.srm')`. `gen_records` is imported as the same name.\\n\\nThere are also some `tools` provided in a separate module.\\n\\n## Testing\\n\\nAll the readers have been tested extensively on my machine using a bank of files that I am not able to share. I will implement some simpler tests at some point that I can push to this repo.\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/activityio/0.0.2\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Intended Audience :: Science/Research\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Topic :: Scientific/Engineering :: Medical Science Apps.\"\n        ], \n        \"name\": \"activityio\", \n        \"bugtrack_url\": null, \n        \"license\": \"MIT\", \n        \"summary\": \"Exercise data handling library\", \n        \"home_page\": \"https://github.com/jmackie4/activityio\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-01T12:33:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/bc/71/29b512becacd5483dfc165f8cdadebe7eae0e7fbe6f3a1ad9130e8cecb7c/activityio-0.0.1.tar.gz\", \n                \"md5_digest\": \"7edec446f45e4d018ffcb64f094b9b0f\", \n                \"downloads\": 20, \n                \"filename\": \"activityio-0.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"bc/71/29b512becacd5483dfc165f8cdadebe7eae0e7fbe6f3a1ad9130e8cecb7c/activityio-0.0.1.tar.gz\", \n                \"size\": 50673\n            }\n        ], \n        \"0.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-02T17:37:07\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6e/c2/049e357bf3b2d838f8590686828fc89836dee51b51cbf57ca5f43ac90a18/activityio-0.0.2.tar.gz\", \n                \"md5_digest\": \"a4a96f67e0efd7844dc14a7508b9fed9\", \n                \"downloads\": 27, \n                \"filename\": \"activityio-0.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6e/c2/049e357bf3b2d838f8590686828fc89836dee51b51cbf57ca5f43ac90a18/activityio-0.0.2.tar.gz\", \n                \"size\": 56045\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-11-02T17:37:07\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/6e/c2/049e357bf3b2d838f8590686828fc89836dee51b51cbf57ca5f43ac90a18/activityio-0.0.2.tar.gz\", \n            \"md5_digest\": \"a4a96f67e0efd7844dc14a7508b9fed9\", \n            \"downloads\": 27, \n            \"filename\": \"activityio-0.0.2.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"6e/c2/049e357bf3b2d838f8590686828fc89836dee51b51cbf57ca5f43ac90a18/activityio-0.0.2.tar.gz\", \n            \"size\": 56045\n        }\n    ]\n}", "encoding": "UTF-8"}}, "recorded_at": "2016-12-23T10:10:38"}, {"request": {"method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://github.com/jmackie4/activityio", "body": {"string": "", "encoding": "utf-8"}}, "response": {"status": {"message": "OK", "code": 200}, "headers": {"X-Frame-Options": ["deny"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Date": ["Fri, 23 Dec 2016 10:10:39 GMT"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:10:39 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNGMxZmRjZjc5NjJiMjlkNmI2OTU4ODIzMGRjN2I2YTAiLCJzcHlfcmVwbyI6ImptYWNraWU0L2FjdGl2aXR5aW8iLCJzcHlfcmVwb19hdCI6MTQ4MjQ4NzgzOCwiX2NzcmZfdG9rZW4iOiI1U080VjRHdWx4dUtpb0QzelJ5YUhuQTVGSTVlcU1XalplZGw1a0FqYVlrPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--03cb603247f9124d729aad8f038251aa7869c11e; path=/; secure; HttpOnly"], "X-Served-By": ["e8139beab029364506236105cf49728b"], "X-XSS-Protection": ["1; mode=block"], "X-Runtime": ["0.108888"], "Transfer-Encoding": ["chunked"], "X-Content-Type-Options": ["nosniff"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Vary": ["X-PJAX", "Accept-Encoding"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8851DE:585CF81E"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Status": ["200 OK"], "X-Request-Id": ["576a63f7c231c02f279f952fa52b3426"], "Server": ["GitHub.com"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Type": ["text/html; charset=utf-8"]}, "url": "https://github.com/jmackie4/activityio", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:10:39"}, {"request": {"method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://raw.githubusercontent.com/jmackie4/activityio/master/NEWS.txt", "body": {"string": "", "encoding": "utf-8"}}, "response": {"status": {"message": "OK", "code": 200}, "headers": {"X-Frame-Options": ["deny"], "X-Cache": ["MISS"], "X-Served-By": ["cache-hhn1525-HHN"], "X-Timer": ["S1482487839.316815,VS0,VE125"], "Vary": ["Authorization,Accept-Encoding"], "X-Geo-Block-List": [""], "X-Fastly-Request-ID": ["d3e75de85a3b521306e148133d724e74aeec2a99"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "Expires": ["Fri, 23 Dec 2016 10:15:39 GMT"], "Strict-Transport-Security": ["max-age=31536000"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["0"], "ETag": ["\"943b23eebc6191d956dfc68db6d7d66f60a73f5b\""], "Content-Length": ["390"], "Accept-Ranges": ["bytes"], "Date": ["Fri, 23 Dec 2016 10:10:39 GMT"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=300"], "Source-Age": ["0"], "X-GitHub-Request-Id": ["C71B4C17:5BAC:3E57482:585CF81D"], "Content-Encoding": ["gzip"], "Access-Control-Allow-Origin": ["*"], "Content-Type": ["text/plain; charset=utf-8"]}, "url": "https://raw.githubusercontent.com/jmackie4/activityio/master/NEWS.txt", "body": {"base64_string": "H4sIAAAAAAAAA22SzU7lMAyF9zyFJTb8VszwBGhGYgULQGxb38RtI5I4cnwvvW+PU8oCgdRV6nO+45OcwitJDZzhprvpbk8u4YlGdMpCHionAh5BZwIh9CFPUIQd1QojCywpwhgigR4L1c7E/1iEnJoWoR6z4gIkYqMhry6OU8LsIYZMdqYkBqOmfDAiTJRJMAItjoq2VA7VzY1rBndOwyHo8T8qdn0/kQal1PeWE7BCZgXlzZXM7T3ovFILCmWFRDqzX2PaNtpcEYZ7scXs92Dh4j5lOARcVd9w0zZ1dr7ZwLshvXApzafNh+xp6eBlDhXsG8NCBjs5/dbwX6M/70thUUDvrahW5EU3lWWtcmvxt5a2+bNKBAMGhut5OG/jA25JA3f9XkPs7GKGNaCLvNuRfEWsarYozXknKEdrxr3h1CCfl+2wUr1qhTa1tYbJkNbqr4x+exSDhXjkfO3Y0+cWJk18aNsJpy9K/dHGHxPexTIjHLZToUiWwYr7AJUN3wqaAgAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:10:39"}]}