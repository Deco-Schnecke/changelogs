{"http_interactions": [{"response": {"status": {"code": 301, "message": "Moved Permanently"}, "headers": {"X-Cache": ["MISS, MISS"], "Via": ["1.1 varnish", "1.1 varnish"], "X-Served-By": ["cache-iad2148-IAD, cache-hhn1540-HHN"], "Age": ["0"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["0, 0"], "Date": ["Fri, 23 Dec 2016 10:30:29 GMT"], "Fastly-Debug-Digest": ["4f9aa19ce2e0e1822b5bcad42367a49aabe07beb4fb872844b7e328ff5e41963"], "Server": ["nginx/1.10.2"], "X-Content-Type-Options": ["nosniff"], "Location": ["/pypi/buck.pprint/json"], "Connection": ["keep-alive"], "X-Timer": ["S1482489029.337374,VS0,VE118"], "Content-Length": ["0"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/buck_pprint/json", "body": {"string": "", "encoding": null}}, "recorded_at": "2016-12-23T10:30:29", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/buck_pprint/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["HIT, HIT"], "Via": ["1.1 varnish", "1.1 varnish"], "Date": ["Fri, 23 Dec 2016 10:30:29 GMT"], "Server": ["nginx/1.10.2"], "Content-Disposition": ["inline"], "Content-Length": ["4670"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Cache-Control": ["max-age=600, public"], "X-Served-By": ["cache-iad2148-IAD, cache-hhn1540-HHN"], "Age": ["59686"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Fastly-Debug-Digest": ["98b726777f2c79d7a82c120b695776c397edd09c042ed1484ff96386916c3d2e"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Content-Type-Options": ["nosniff"], "X-PYPI-LAST-SERIAL": ["2535315"], "Connection": ["keep-alive"], "X-Timer": ["S1482489029.483835,VS0,VE0"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/buck.pprint/json", "body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/buck.pprint\", \n        \"author\": \"Buck Golemon\", \n        \"author_email\": \"buck.golemon@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.0\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Python's standard library contains a pretty print module (`pprint`), but it's\\noutput is in a very odd style.  This project is a fairly straightforward fork\\nwhich aim to create output suitable for use in python code with standard\\nformatting.\\n\\nI copied both pprint.py and test_pprint.py from the cpython (2.6) code base,\\nand made the minimal changes to make things work, and all the tests pass. The\\nresult should be equally reliable as the stdlib pprint library.\\n\\n\\n    >>> example_obj = {1:2, 3:4, 'range':range(3)}\\n    >>> example_obj['range'].append(range(5))\\n    >>> example_obj['range'].append(range(20))\\n\\n    >>> import buck.pprint\\n    >>> buck.pprint.pprint(example_obj)\\n    {\\n        1: 2,\\n        3: 4,\\n        'range': [\\n            0,\\n            1,\\n            2,\\n            [0, 1, 2, 3, 4],\\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\\n        ],\\n    }\\n\\nThis is how I'd format this object in my own code. Below is the formatting that\\nthe standard pprint gives. I believe you'll agree that it's not a style you've\\never seen in real python code.\\n\\n    >>> import pprint\\n    >>> pprint.pprint(example_obj)\\n    {1: 2,\\n     3: 4,\\n     'range': [0,\\n               1,\\n               2,\\n               [0, 1, 2, 3, 4],\\n               [0,\\n                1,\\n                2,\\n                3,\\n                4,\\n                5,\\n                6,\\n                7,\\n                8,\\n                9,\\n                10,\\n                11,\\n                12,\\n                13,\\n                14,\\n                15,\\n                16,\\n                17,\\n                18,\\n                19]]}\\n\\n\\nHistory\\n-------\\n\\n0.0\\n+++++\\n\\n2013-03-28 -- Initial release.\", \n        \"release_url\": \"http://pypi.python.org/pypi/buck.pprint/0.0\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 0, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Environment :: Console\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Natural Language :: English\", \n            \"Operating System :: OS Independent\", \n            \"Topic :: Software Development :: Code Generators\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"buck.pprint\", \n        \"license\": \"LICENSE.txt\", \n        \"summary\": \"A fork of the cpython's pprint which gives standard indentation.\", \n        \"home_page\": \"https://github.com/bukzor/buck.pprint\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-03-02T00:38:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/d7/7a/f59450dbe6fd7fdab3bd40195358cd08ccb316da2fa47bfeb5b734896269/buck.pprint-0.0.tar.gz\", \n                \"md5_digest\": \"0380a98b0348510c2fde4db696f27c2d\", \n                \"downloads\": 3205, \n                \"filename\": \"buck.pprint-0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"d7/7a/f59450dbe6fd7fdab3bd40195358cd08ccb316da2fa47bfeb5b734896269/buck.pprint-0.0.tar.gz\", \n                \"size\": 6436\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2013-03-02T00:38:02\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/d7/7a/f59450dbe6fd7fdab3bd40195358cd08ccb316da2fa47bfeb5b734896269/buck.pprint-0.0.tar.gz\", \n            \"md5_digest\": \"0380a98b0348510c2fde4db696f27c2d\", \n            \"downloads\": 3205, \n            \"filename\": \"buck.pprint-0.0.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"d7/7a/f59450dbe6fd7fdab3bd40195358cd08ccb316da2fa47bfeb5b734896269/buck.pprint-0.0.tar.gz\", \n            \"size\": 6436\n        }\n    ]\n}", "encoding": "UTF-8"}}, "recorded_at": "2016-12-23T10:30:29", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/buck.pprint/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["d40dcd9e15394b3db1cec2fc0e0a2b32"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:30 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "X-Runtime": ["0.164823"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8D0B68:585CFCC5"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["4d45b22303d86e8f8061d04bde2fae56"], "Content-Encoding": ["gzip"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:30:30 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYjZmYTIxZDU3OTIwODRiZDYwNWNmNGFhMjU0MWM1ZTIiLCJzcHlfcmVwbyI6ImJ1a3pvci9idWNrLnBwcmludCIsInNweV9yZXBvX2F0IjoxNDgyNDg5MDI5LCJfY3NyZl90b2tlbiI6IkVQRGJqSWRvbnRmRUI4U2hNK1pNM0JVWmMvcDE2WkpWbHpobllsZ04yTm89IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--e80408a2a4bd521fc5df2c3eb6a8a9a4facdf9eb; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/bukzor/buck.pprint", "body": {"encoding": "utf-8", "base64_string": ""}}, "recorded_at": "2016-12-23T10:30:30", "request": {"method": "GET", "uri": "https://github.com/bukzor/buck.pprint", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["MISS"], "Via": ["1.1 varnish"], "Vary": ["Authorization,Accept-Encoding"], "Date": ["Fri, 23 Dec 2016 10:30:30 GMT"], "Content-Length": ["72"], "Content-Encoding": ["gzip"], "X-XSS-Protection": ["1; mode=block"], "Expires": ["Fri, 23 Dec 2016 10:35:30 GMT"], "Cache-Control": ["max-age=300"], "X-Served-By": ["cache-hhn1521-HHN"], "X-Fastly-Request-ID": ["a631f7824681ae1e01299fc00cef337f6bb6d41b"], "X-Cache-Hits": ["0"], "X-GitHub-Request-Id": ["C71B4C14:2ADB8:28D094F:585CFCC6"], "Content-Type": ["text/plain; charset=utf-8"], "X-Content-Type-Options": ["nosniff"], "Connection": ["keep-alive"], "X-Timer": ["S1482489030.308528,VS0,VE118"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "ETag": ["\"fae3a28b5d269f529fed6982f8a06b1d423fd03e\""], "Source-Age": ["0"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Geo-Block-List": [""]}, "url": "https://raw.githubusercontent.com/bukzor/buck.pprint/master/HISTORY.rst", "body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA/PILC7JL6rk0oUALi4DPQMubRDg4jIyMDTWNTDWNbJQ0NVV8MzLLMlMzFEoSs1JTSxO1eMCAOLr0cU7AAAA"}}, "recorded_at": "2016-12-23T10:30:30", "request": {"method": "GET", "uri": "https://raw.githubusercontent.com/bukzor/buck.pprint/master/HISTORY.rst", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}], "recorded_with": "betamax/0.8.0"}