{"http_interactions": [{"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["HIT, HIT"], "Via": ["1.1 varnish", "1.1 varnish"], "Date": ["Fri, 23 Dec 2016 10:30:18 GMT"], "Server": ["nginx/1.10.2"], "Content-Disposition": ["inline"], "Content-Length": ["8776"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Cache-Control": ["max-age=600, public"], "X-Served-By": ["cache-iad2123-IAD, cache-hhn1540-HHN"], "Age": ["59797"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Fastly-Debug-Digest": ["b81996df2f53611e2b7e8212932a9ff4cc8209ede1b4f73b8c2c8a7a5c98c4d9"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Content-Type-Options": ["nosniff"], "X-PYPI-LAST-SERIAL": ["2535313"], "Connection": ["keep-alive"], "X-Timer": ["S1482489018.696968,VS0,VE0"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/btnamespace/json", "body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/btnamespace\", \n        \"author\": \"Simon Weber\", \n        \"author_email\": \"simon@venmo.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"2.0.0\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"btnamespace\\n===========\\n\\n.. image:: https://travis-ci.org/venmo/btnamespace.svg?branch=master\\n    :target: https://travis-ci.org/venmo/btnamespace\\n\\nA Braintree namespace isolates state on the Braintree gateway:\\n\\n.. code-block:: python\\n\\n    import braintree\\n    import btnamespace\\n\\n    with btnamespace.Namespace():\\n        customer = braintree.Customer.create({\\\"id\\\": \\\"123\\\"})\\n        assert customer.id == \\\"123\\\"\\n        braintree.Customer.find(\\\"123\\\")  # success\\n\\n    braintree.Customer.find(\\\"123\\\")  # NotFound exception\\n\\nThis is primarily useful during integration tests:\\n\\n.. code-block:: python\\n\\n    def setUp(self):\\n        self.namespace = btnamespace.Namespace()\\n        self.namespace.__enter__()\\n\\n    def test_some_sandbox_integration(self):\\n        #...\\n\\n    def tearDown(self):\\n        self.namespace.__exit__()\\n\\n\\nCompared to calling eg ``braintree.Customer.delete`` during ``tearDown``, this has a number of advantages:\\n\\n-  it's faster, since no teardown is needed\\n-  it's simpler, since it doesn't require any bookkeeping\\n-  it's robust, since tests can be written without any state assumptions\\n\\nYou can install it with ``$ pip install btnamespace``.\\n\\n\\nWhat's supported\\n----------------\\n\\n- Customer create, update, find, delete\\n- CreditCard create, update, find, delete\\n- Transaction create, find\\n\\nAll operations involving subresources - eg creating a CreditCard and Customer in one call - work as expected.\\n\\nAdding support for other operations is easy; we just haven't needed them yet.\\nContributions welcome!\\n\\n\\nHow it Works\\n------------\\n\\nUnder the hood, a Namespace globally patches the braintree client library.\\n\\nDuring create operations, any provided ids are removed.\\nThis forces the gateway to respond with unique ids, which are later mapped back to the originally-provided ids.\\nHere's an example:\\n\\n- on a call to ``braintree.Customer.create({'id': '123', ...})``, ``'123'`` is stored as a Customer id and the call becomes ``braintree.Customer.create({...})``.\\n- then, the server returns a unique id ``'abcde'`` for the Customer. ``'123'`` is mapped to ``'abcde'``, and the resulting Customer object's id is set to ``'123'``.\\n- later, a call to ``braintree.Customer.find('123')`` becomes ``braintree.Customer.find('abcde')``.\\n\\n\\nContributing\\n------------\\n\\nInside your vitualenv:\\n\\n.. code-block:: bash\\n\\n    $ cd btnamespace\\n    $ pip install -e .\\n    $ pip install -r requirements.txt\\n\\n\\nTo run the tests, first add your sandbox credentials:\\n\\n.. code-block:: bash\\n\\n    $ export BT_MERCHANT_ID=merchant-id\\n    $ export BT_PUBLIC_KEY=public-id\\n    $ export BT_PRIVATE_KEY=private-key\\n\\n\\nThen run ``$ python tests/test_integration.py``.\\n\\n\\nHistory\\n-------\\n2.0.0\\n+++++\\nreleased 2016-07-15\\n\\n- breaking: drop python 2.6 support\\n- fix a bug affecting operations after exiting a namespace\\n- add strict_missing and strict_missing_exception options\\n\\n\\n1.1.1\\n+++++\\nreleased 2014-09-26\\n\\n- pin bidict to 0.1.5 to avoid breaking changes in newer versions\\n\\n1.1.0\\n+++++\\nreleased 2014-07-28\\n\\n- add schema for braintree.ClientToken.generate\\n\\n1.0.1\\n+++++\\nreleased 2014-04-08\\n\\n- use less expensive introspection\\n- remove decorator dependency\\n\\n1.0.0\\n+++++\\nreleased 2014-04-07\\n\\n- initial release\", \n        \"release_url\": \"http://pypi.python.org/pypi/btnamespace/2.0.0\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 4, \n        \"classifiers\": [], \n        \"bugtrack_url\": null, \n        \"name\": \"btnamespace\", \n        \"license\": \"MIT\", \n        \"summary\": \"Isolate state on the Braintree sandbox during testing.\", \n        \"home_page\": \"https://github.com/venmo/btnamespace\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"1.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-09-26T19:40:37\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/bd/19/daf026615159a206ccef0102b2794d89893b0b134c91e386f8c8e26ea54a/btnamespace-1.1.1.tar.gz\", \n                \"md5_digest\": \"77255b1ef48c70524619497a86a14066\", \n                \"downloads\": 5333, \n                \"filename\": \"btnamespace-1.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"bd/19/daf026615159a206ccef0102b2794d89893b0b134c91e386f8c8e26ea54a/btnamespace-1.1.1.tar.gz\", \n                \"size\": 9124\n            }\n        ], \n        \"1.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-07-28T23:08:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/0f/16/ef960abc02aa6b40a01aba763795c527d5ee5086e4b66cdf73255a2d0593/btnamespace-1.1.0.tar.gz\", \n                \"md5_digest\": \"3556ca25765dcb65c5f5dcee5e962ab4\", \n                \"downloads\": 1933, \n                \"filename\": \"btnamespace-1.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"0f/16/ef960abc02aa6b40a01aba763795c527d5ee5086e4b66cdf73255a2d0593/btnamespace-1.1.0.tar.gz\", \n                \"size\": 10394\n            }\n        ], \n        \"1.0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-04-07T21:00:09\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/80/88/deb723dbff08dde220b6b46dbe6eb29c8f3e0c9299c3ec24bac08f5343e3/btnamespace-1.0.0.tar.gz\", \n                \"md5_digest\": \"6ef3eaa73fe78fa4cda3301e8c062cb7\", \n                \"downloads\": 2014, \n                \"filename\": \"btnamespace-1.0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"80/88/deb723dbff08dde220b6b46dbe6eb29c8f3e0c9299c3ec24bac08f5343e3/btnamespace-1.0.0.tar.gz\", \n                \"size\": 8338\n            }\n        ], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-04-08T15:26:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b4/19/ab708d95d267cee92b01234ae08d977134ff211562e8e70476b74a367949/btnamespace-1.0.1.tar.gz\", \n                \"md5_digest\": \"c9291b55f1310d4b935fe22ef9c85a0c\", \n                \"downloads\": 3406, \n                \"filename\": \"btnamespace-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b4/19/ab708d95d267cee92b01234ae08d977134ff211562e8e70476b74a367949/btnamespace-1.0.1.tar.gz\", \n                \"size\": 9045\n            }\n        ], \n        \"2.0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-07-15T21:11:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/39/26/7b3b1fd8a242b30c32150bba65c6aec79b6366aeef720befb4461609f01e/btnamespace-2.0.0.tar.gz\", \n                \"md5_digest\": \"a0b807afed4a4756e8ff9f021af62e49\", \n                \"downloads\": 1490, \n                \"filename\": \"btnamespace-2.0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"39/26/7b3b1fd8a242b30c32150bba65c6aec79b6366aeef720befb4461609f01e/btnamespace-2.0.0.tar.gz\", \n                \"size\": 9441\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-07-15T21:11:58\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/39/26/7b3b1fd8a242b30c32150bba65c6aec79b6366aeef720befb4461609f01e/btnamespace-2.0.0.tar.gz\", \n            \"md5_digest\": \"a0b807afed4a4756e8ff9f021af62e49\", \n            \"downloads\": 1490, \n            \"filename\": \"btnamespace-2.0.0.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"39/26/7b3b1fd8a242b30c32150bba65c6aec79b6366aeef720befb4461609f01e/btnamespace-2.0.0.tar.gz\", \n            \"size\": 9441\n        }\n    ]\n}", "encoding": "UTF-8"}}, "recorded_at": "2016-12-23T10:30:18", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/btnamespace/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["d41662224d8c44f09604b862e979767a"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:19 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "X-Runtime": ["0.132765"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8CFFE0:585CFCBA"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["95ded362fff0a41987456e1a6ea7ee8e"], "Content-Encoding": ["gzip"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:30:19 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNTE5NWQ5ZTkxYzk1ZTdmODUwMThlMTM1OGNmNGMyNzMiLCJzcHlfcmVwbyI6InZlbm1vL2J0bmFtZXNwYWNlIiwic3B5X3JlcG9fYXQiOjE0ODI0ODkwMTksIl9jc3JmX3Rva2VuIjoiOUFkcTRwb3BOYW1yckNqamM0TFptbFAzakxhNjExazdPZVhHMFY5QlFNST0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--c994b6647166677cbf5f44a51e5c82dc12d1392c; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/venmo/btnamespace", "body": {"encoding": "utf-8", "base64_string": ""}}, "recorded_at": "2016-12-23T10:30:19", "request": {"method": "GET", "uri": "https://github.com/venmo/btnamespace", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["MISS"], "Via": ["1.1 varnish"], "Vary": ["Authorization,Accept-Encoding"], "Date": ["Fri, 23 Dec 2016 10:30:19 GMT"], "Content-Length": ["312"], "Content-Encoding": ["gzip"], "X-XSS-Protection": ["1; mode=block"], "Expires": ["Fri, 23 Dec 2016 10:35:19 GMT"], "Cache-Control": ["max-age=300"], "X-Served-By": ["cache-hhn1528-HHN"], "X-Fastly-Request-ID": ["d0ee5a27a18a690f0d93e98f961c1acbfb7c3d9b"], "X-Cache-Hits": ["0"], "X-GitHub-Request-Id": ["C71B4C2D:4149:330B4BC:585CFCBB"], "Content-Type": ["text/plain; charset=utf-8"], "X-Content-Type-Options": ["nosniff"], "Connection": ["keep-alive"], "X-Timer": ["S1482489019.505324,VS0,VE120"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "ETag": ["\"78eaff34698187a6acea23516b4f80bcd6a352a2\""], "Source-Age": ["0"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Geo-Block-List": [""]}, "url": "https://raw.githubusercontent.com/venmo/btnamespace/master/HISTORY.rst", "body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA3WRzW7CMBCE736KvVeJQgT059pLH6B3ZOxJsEjWltdQePuuQ9tDBU4O0Xr8zXjyEaTEfDXNbZm+7drOPNVlMiZYgae+W22b7rlZbYxpaJ9hj4HHN/I5JkrXcohMfbslOaUUc1HNEC5kaX8ayQ4DXFE5xYRsS4gsOizIhEtYNiyxnSHJOuhR6z1JycGV3RxEFgH/H+1wcUgVptiFaYxZtfrcyb5uutem39bsKTDtg1cSlUidHtjUD3uOwf9djNzB8gghFTO+NOkZWW4m1eNeP+vaT/9ifi/gDpgtDTEr1QYuGWjfpwAun/EIbkdwbQOV2D1Kre9CPAlogog2lsASzqCKjJJqtZFVkjFHHXu4qFi19VCpB7vrzeJB6Jq7WgTWf2En+tk23/CYnL4YAgAA"}}, "recorded_at": "2016-12-23T10:30:19", "request": {"method": "GET", "uri": "https://raw.githubusercontent.com/venmo/btnamespace/master/HISTORY.rst", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}], "recorded_with": "betamax/0.8.0"}