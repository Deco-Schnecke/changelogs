{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/pylibrabbitmq/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["e21e7a9c29e18613f0155aa640ba46e5f4518c5af1b9e787be09b3fa95d933ac"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:44:04 GMT"], "X-Served-By": ["cache-iad2130-IAD, cache-hhn1525-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489844.015194,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534724"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["77896"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["10113"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/pylibrabbitmq/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/pylibrabbitmq\", \n        \"author\": \"Ask Solem\", \n        \"author_email\": \"ask@celeryproject.org\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.5.0\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"==================================================\\n pylibrabbitmq - Python bindings to librabbitmq-c\\n==================================================\\n\\n:Version: 0.5.0\\n:Download: http://pypi.python.org/pypi/pylibrabbitmq/\\n:Code: http://github.com/ask/pylibrabbitmq/\\n:Keywords: rabbitmq, amqp, messaging, librabbitmq, rabbitmq-c, python\\n\\n.. contents::\\n    :local:\\n\\nExperimental Python bindings to the RabbitMQ C-library `librabbitmq`_.\\n\\n\\nYou should probably use `amqplib`_ instead, but when needed you can \\ncome back to this if the extra performance is needed.\\n\\n.. _`librabbitmq`: http://hg.rabbitmq.com/rabbitmq-c/\\n.. _`amqplib`: http://barryp.org/software/py-amqplib/\\n\\nInstallation\\n============\\n\\nTo install you need to compile `librabbitmq`::\\n\\n    $ mkdir -p /opt/Build/rabbit\\n    $ cd /opt/Build/rabbit\\n    $ hg clone http://hg.rabbitmq.com/rabbitmq-codegen/\\n    $ hg clone http://hg.rabbitmq.com/rabbitmq-c/\\n    $ cd rabbitmq-c\\n    $ autoreconf -i\\n    $ ./configure\\n    $ make\\n    $ make install\\n\\nThen you can install this package::\\n\\n    $ cd pylibrabbitmq-x.x.x\\n    $ python setup.py install\\n\\nExamples\\n========\\n\\n    >>> from pylibrabbitmq import Connection, Message\\n\\n    >>> conn = Connection(host=\\\"localhost\\\", userid=\\\"guest\\\",\\n    ...                   password=\\\"guest\\\", virtual_host=\\\"/\\\")\\n\\n    >>> channel = conn.channel()\\n    >>> channel.exchange_declare(exchange, type, ...)\\n    >>> channel.queue_declare(queue, ...)\\n    >>> channel.queue_bind(queue, exchange, routing_key)\\n\\nProduce\\n-------\\n\\n    >>> m = Message(body, content_type=None, content_encoding=None,\\n    ...             delivery_mode=1)\\n    >>> channel.basic_publish(m, exchange, routing_key, ...)\\n\\nConsume\\n-------\\n\\n    >>> def dump_message(message):\\n    ...     print(\\\"Body:'%s', Proeprties:'%s', DeliveryInfo:'%s'\\\" % (\\n    ...         message.body, message.properties, message.delivery_info))\\n    ...     message.ack()\\n\\n    >>> channel.basic_consume(queue, ..., callback=dump_message)\\n\\n    >>> while True:\\n    ...    connection.drain_events()\\n\\nPoll\\n----\\n\\n    >>> message = channel.basic_get(queue, ...)\\n    >>> if message:\\n    ...     dump_message(message)\\n    ...     print(\\\"Body:'%s' Properties:'%s' DeliveryInfo:'%s'\\\" % (\\n    ...         message.body, message.properties, message.delivery_info))\\n\\n\\nOther\\n-----\\n\\n    >>> channel.queue_unbind(queue, ...)\\n    >>> channel.close()\\n    >>> connection.close()\\n\\nLicense\\n=======\\n\\nThis software is licensed under the ``Mozilla Public License``.\\nSee the ``LICENSE-MPL-RabbitMQ`` file in the top distribution directory\\nfor the full license text.\\n\\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround\", \n        \"release_url\": \"http://pypi.python.org/pypi/pylibrabbitmq/0.5.0\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 6, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: Mozilla Public License 1.0 (MPL)\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: C\", \n            \"Topic :: Communications\", \n            \"Topic :: Software Development :: Libraries\", \n            \"Topic :: System :: Networking\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"pylibrabbitmq\", \n        \"license\": \"MPL\", \n        \"summary\": \"Python bindings to librabbitmq-c\", \n        \"home_page\": \"http://github.com/ask/pylibrabbitmq\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-06-14T11:56:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/73/20/62e056701acf06aff2dad8e311bef6c267332bd30abf06a9783c47ee8409/pylibrabbitmq-0.0.1.tar.gz\", \n                \"md5_digest\": \"b28b6c706c3d8a0f2b8054a3452f7653\", \n                \"downloads\": 2863, \n                \"filename\": \"pylibrabbitmq-0.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"73/20/62e056701acf06aff2dad8e311bef6c267332bd30abf06a9783c47ee8409/pylibrabbitmq-0.0.1.tar.gz\", \n                \"size\": 22187\n            }\n        ], \n        \"0.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-01-24T13:40:00\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/03/2f/820104743bc731a19193ca6b901df3c21ceb63f441b0248018c1019859b7/pylibrabbitmq-0.0.2.tar.gz\", \n                \"md5_digest\": \"786b00d40334734a25c135767939249d\", \n                \"downloads\": 2358, \n                \"filename\": \"pylibrabbitmq-0.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"03/2f/820104743bc731a19193ca6b901df3c21ceb63f441b0248018c1019859b7/pylibrabbitmq-0.0.2.tar.gz\", \n                \"size\": 30485\n            }\n        ], \n        \"0.3.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-06-28T16:44:25\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/fa/6c/6fb971a85e542cfc8b7df24f62b746afbc8c0e97a33b93a19ec69e10fa52/pylibrabbitmq-0.3.0.tar.gz\", \n                \"md5_digest\": \"6d054a98ce79eee7c97e583100722146\", \n                \"downloads\": 2406, \n                \"filename\": \"pylibrabbitmq-0.3.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"fa/6c/6fb971a85e542cfc8b7df24f62b746afbc8c0e97a33b93a19ec69e10fa52/pylibrabbitmq-0.3.0.tar.gz\", \n                \"size\": 27510\n            }\n        ], \n        \"0.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-01-24T13:44:27\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f8/27/5f10f1d774dab74313309317c65243c5abc395822aa58f6f297ec0a9c365/pylibrabbitmq-0.2.0.tar.gz\", \n                \"md5_digest\": \"139b07e93b97bc08c16830cab405ceee\", \n                \"downloads\": 2402, \n                \"filename\": \"pylibrabbitmq-0.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f8/27/5f10f1d774dab74313309317c65243c5abc395822aa58f6f297ec0a9c365/pylibrabbitmq-0.2.0.tar.gz\", \n                \"size\": 30819\n            }\n        ], \n        \"0.4.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-09-27T15:08:26\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/b8/6ddfd955fceb0c8c5faca33e3f09a348c4dbb401fc397e98a0ad104fa86b/pylibrabbitmq-0.4.1.tar.gz\", \n                \"md5_digest\": \"ddc6427415140030b6b25b1c77ef8fcf\", \n                \"downloads\": 2241, \n                \"filename\": \"pylibrabbitmq-0.4.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/b8/6ddfd955fceb0c8c5faca33e3f09a348c4dbb401fc397e98a0ad104fa86b/pylibrabbitmq-0.4.1.tar.gz\", \n                \"size\": 28538\n            }\n        ], \n        \"0.4.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-09-02T18:47:25\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/76/d6/33671d63a99c4f017481dc9167612e294dcc55b705e107ba151d2c9ef0d1/pylibrabbitmq-0.4.0.tar.gz\", \n                \"md5_digest\": \"573488b552c4379175b9e0021fad9565\", \n                \"downloads\": 2309, \n                \"filename\": \"pylibrabbitmq-0.4.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"76/d6/33671d63a99c4f017481dc9167612e294dcc55b705e107ba151d2c9ef0d1/pylibrabbitmq-0.4.0.tar.gz\", \n                \"size\": 47790\n            }\n        ], \n        \"0.5.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-12-07T18:26:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/77/8e/297cb11400939280c407a8701bac9bba96c8e80964b0285551dd80a91ef7/pylibrabbitmq-0.5.0.tar.gz\", \n                \"md5_digest\": \"4e666893fed0f8d1d6e07a22707dca01\", \n                \"downloads\": 5568, \n                \"filename\": \"pylibrabbitmq-0.5.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"77/8e/297cb11400939280c407a8701bac9bba96c8e80964b0285551dd80a91ef7/pylibrabbitmq-0.5.0.tar.gz\", \n                \"size\": 30551\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2011-12-07T18:26:11\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/77/8e/297cb11400939280c407a8701bac9bba96c8e80964b0285551dd80a91ef7/pylibrabbitmq-0.5.0.tar.gz\", \n            \"md5_digest\": \"4e666893fed0f8d1d6e07a22707dca01\", \n            \"downloads\": 5568, \n            \"filename\": \"pylibrabbitmq-0.5.0.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"77/8e/297cb11400939280c407a8701bac9bba96c8e80964b0285551dd80a91ef7/pylibrabbitmq-0.5.0.tar.gz\", \n            \"size\": 30551\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:44:04"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "http://github.com/ask/pylibrabbitmq", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Connection": ["close"], "Content-length": ["0"], "Location": ["https://github.com/ask/pylibrabbitmq"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/ask/pylibrabbitmq", "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:44:04"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/ask/pylibrabbitmq", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EE:E65ADB2:585CFFF4"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:44:04 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["d0e230454cb69aa01d4f86fc3a57b17f"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["d56377c48a6c857902c02f33a4b336c5"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.308170"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:44:04 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYzgwNTNlMzJjMjQyODhlNDRmNWQ0MWY2M2MzZTVhMzUiLCJzcHlfcmVwbyI6ImFzay9weWxpYnJhYmJpdG1xIiwic3B5X3JlcG9fYXQiOjE0ODI0ODk4NDQsIl9jc3JmX3Rva2VuIjoiQUtEOXpnMjIwNjhxZUhvalJqcSs4TmI0WElWSmJHVjhudEpsZ1FlUHVqOD0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--3281df2ced6131e2301b2fd61907b55c543d3c1f; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/ask/pylibrabbitmq", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:44:05"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/ask/pylibrabbitmq/master/Changelog", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C22:73BD:3B6C0A7:585CFFF4"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:44:05 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1541-HHN"], "X-Fastly-Request-ID": ["9c9b7db9464a598f306af7a99c7b9ceca20a45dc"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489845.194460,VS0,VE120"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"3207b77012310d38343b76c6fcd1d5795d71093a\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["529"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:49:05 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/ask/pylibrabbitmq/master/Changelog", "body": {"base64_string": "H4sIAAAAAAAAA5VTUW/aMBB+9684dS9QQeQESitLPLANTZXWbir0aZrqIz7AW7Az20Hi388hAXVpV21WZEWfv7v7fP5uOv1zMfiwRbMh2GofrDuwaZfAkgRyawKZ4IVgEJcobI6FYIwnVwlvQphwVBB6GioMJCDjaTpMsyG/Bn4lOIevyR18ulsysToImPmfsLAF7Ri7hJlSHraEihz4qiytCwk7FpqVZaFzDNqaluAhRwMrAlSKFAQLUpbOluSCJv/tomVdfJeyzXEJCzJKmw3syHvckBfNQXvYFCR1xhpcm9BBfHAAPWMDPBqdW0X95HmiR+P/kor25A5hW0ugwlMCPU8ELirtnzU+UE56/98qVzY2EY04/nT16o2JLYoXEaBvBqDTSdxGWdwm4w63Ms/ZVWRXNbuq2dUL9rqwGGnrUdY5ULZaFfHx1y9CYvPi5aLOQyD/b21D5/DQwYKO7Qm4K7s4xrodbG91N6WiXO+wqI07ftu4fMgz4JOTcd8vlmen1hpsFU5WPXpQOdTmKT50HJLGeMuWpQ14ivMTAzF+Te8GYB2IiPog5L01JGEdEWNPyZNa4uhNifx6mN0AH78m8SStTirlCr3Onxz9oDxIOQA06oz+sl5K6N16XxG8S/vHwjxJXy98/2UJD/PP89li/jEOskOTbwXs0AdydfFbo4PGAtoo9huL2v29bgQAAA==", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:44:05"}], "recorded_with": "betamax/0.8.0"}