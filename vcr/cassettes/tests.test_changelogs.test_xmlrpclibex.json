{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/xmlrpclibex/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["701d7811a9d89f4b5242544c90abedc46a08dc872e6e572e3201ff7385db5ae8"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:45:46 GMT"], "X-Served-By": ["cache-iad2135-IAD, cache-hhn1520-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489946.056740,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534563"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["84988"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["5102"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/xmlrpclibex/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"xmlrpc proxy\", \n        \"package_url\": \"http://pypi.python.org/pypi/xmlrpclibex\", \n        \"author\": \"benhengx\", \n        \"author_email\": \"benhengx@gmail.com\", \n        \"download_url\": \"\", \n        \"platform\": \"\", \n        \"version\": \"0.1.0\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"===========\\r\\nxmlrpclibex\\r\\n===========\\r\\n\\r\\nA Python xmlrpc client library with proxy and timeout support.\\r\\n\\r\\nInstallation\\r\\n------------\\r\\n\\r\\n.. code-block:: bash\\r\\n\\r\\n    $ pip install xmlrpclibex\\r\\n\\r\\nOr\\r\\n\\r\\n.. code-block:: bash\\r\\n\\r\\n    $ python setup.py install\\r\\n\\r\\nUsage\\r\\n-----\\r\\n\\r\\n* A basic example\\r\\n\\r\\n.. code-block:: python\\r\\n\\r\\n    from xmlrpclibex import xmlrpclibex\\r\\n    sp = xmlrpclibex.ServerProxy(uri, timeout=30, \\r\\n                        proxy={\\r\\n                            'host': 'your proxy address',\\r\\n                            'port': 'your proxy port',\\r\\n                            'is_socks': True,\\r\\n                            'socks_type': 'v5'\\r\\n                        })\\r\\n\\r\\n* The timeout and proxy parameters\\r\\n\\r\\n  This module subclasses the ServerProxy class from the xmlrpclib module (or\\r\\n  the xmlrpc.client module in case of Python3), and adds two parameters\\r\\n  timeout and proxy.\\r\\n\\r\\n  * timeout: seconds waiting for the socket operations.\\r\\n  * proxy: a dict specifies the proxy settings (supports HTTP proxy and socks\\r\\n    proxy). The dict supports the following keys:\\r\\n\\r\\n    * host: the address of the proxy server (IP or DNS)\\r\\n    * port: the port of the proxy server. default: 8080 for http\\r\\n      proxy, and 1080 for socks proxy\\r\\n    * username: username to authenticate to the server. default None\\r\\n    * password: password to authenticate to the server, only relevant when\\r\\n      username is set. default None\\r\\n    * is_socks: whether the proxy is a socks proxy, default False\\r\\n    * socks_type: string, 'v4', 'v5', 'http' (http connect tunnel), only \\r\\n      relevant when is_socks is True. default 'v5'\\r\\n\\r\\nNote\\r\\n-------\\r\\n\\r\\n* Sometimes, access HTTPS over HTTP Proxy (through CONNECT tunnel) may report\\r\\n  errors, recommend using SOCKS proxy.\\r\\n\\r\\nLicense\\r\\n-------\\r\\n\\r\\nCopyright 2015 benhengx\\r\\n\\r\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\nyou may not use this file except in compliance with the License.\\r\\nYou may obtain a copy of the License at\\r\\n\\r\\nhttp://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nUnless required by applicable law or agreed to in writing, software\\r\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\nSee the License for the specific language governing permissions and\\r\\nlimitations under the License.\", \n        \"release_url\": \"http://pypi.python.org/pypi/xmlrpclibex/0.1.0\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 0, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"xmlrpclibex\", \n        \"license\": \"Apache License, Version 2.0\", \n        \"summary\": \"A Python xmlrpc client library with proxy and timeout support.\", \n        \"home_page\": \"https://github.com/benhengx/xmlrpclibex\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-03-31T04:25:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f4/cd/c1f3ecc2260892cf8f66028885f4d49ce9e88119ff3f69bb765f5712323a/xmlrpclibex-0.1.0.tar.gz\", \n                \"md5_digest\": \"b5e6065d3ab45bc0859fd911dc0d1ac9\", \n                \"downloads\": 2384, \n                \"filename\": \"xmlrpclibex-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f4/cd/c1f3ecc2260892cf8f66028885f4d49ce9e88119ff3f69bb765f5712323a/xmlrpclibex-0.1.0.tar.gz\", \n                \"size\": 7990\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-03-31T04:25:44\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/f4/cd/c1f3ecc2260892cf8f66028885f4d49ce9e88119ff3f69bb765f5712323a/xmlrpclibex-0.1.0.tar.gz\", \n            \"md5_digest\": \"b5e6065d3ab45bc0859fd911dc0d1ac9\", \n            \"downloads\": 2384, \n            \"filename\": \"xmlrpclibex-0.1.0.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"f4/cd/c1f3ecc2260892cf8f66028885f4d49ce9e88119ff3f69bb765f5712323a/xmlrpclibex-0.1.0.tar.gz\", \n            \"size\": 7990\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:45:46"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/benhengx/xmlrpclibex", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EB:8FEA22C:585D005A"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:45:46 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["55557c365974809f4e10ed787a2656a4"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["3ffb979642c5505ee4fbe0c2e8829854"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.221054"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:45:46 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZGVhM2MwNjdlMzRkZGM0ZmE0YzgwNGRmMzU3NjBmNTAiLCJzcHlfcmVwbyI6ImJlbmhlbmd4L3htbHJwY2xpYmV4Iiwic3B5X3JlcG9fYXQiOjE0ODI0ODk5NDYsIl9jc3JmX3Rva2VuIjoiblpENWQ1RW5Qbk1RTDJ1WkNEMHlneEhYb0p6RGFsZU43Z005U2V5LzhyWT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--63b0dbd8286dc3655b2628c13a8337daa357968c; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/benhengx/xmlrpclibex", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:45:46"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/benhengx/xmlrpclibex/master/CHANGES", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C25:773A:5366B55:585D005A"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:45:47 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1527-HHN"], "X-Fastly-Request-ID": ["4656daabb75b0a3b16cfc6ad53ccb273854e5b68"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489946.943360,VS0,VE116"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"a1531eeab7e10d1ecd6e32ec9a7a1ad5e95fc7b7\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["54"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:50:47 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/benhengx/xmlrpclibex/master/CHANGES", "body": {"base64_string": "H4sIAAAAAAAAAzPQM9QzUDAyMDTVNTDWNTbk0lXwzMssyUzMUUjOz83NLOECAPoJn4giAAAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:45:47"}], "recorded_with": "betamax/0.8.0"}