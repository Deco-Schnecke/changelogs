{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/player/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["c6c3469dd727e39ce5b6bd6f511e50fdfb0073370e317a713a033af0553a8030"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 1"], "Date": ["Fri, 23 Dec 2016 10:43:35 GMT"], "X-Served-By": ["cache-iad2151-IAD, cache-hhn1530-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489815.269479,VS0,VE0"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2534662"], "X-Cache": ["HIT, HIT"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["79829"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["10285"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/player/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/player\", \n        \"author\": \"Nikolay Kim\", \n        \"author_email\": \"fafhrd91@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.6.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"player\\n======\\n\\n.. image :: https://travis-ci.org/fafhrd91/player.png \\n  :target:  https://travis-ci.org/fafhrd91/player\\n\\nplayer allows to address templates with two parameters, \\ncategory and name. Also it is possible to use set of directories\\nfor each layer, in that case `player` searches templates\\nin each directory. It allows to override templates without changing\\ncode. For example form library can define layer `field`::\\n\\n     >> ls ./fields/\\n     .. bool.pt\\n     .. file.pt\\n     ...\\n     .. textarea.pt\\n\\nIn your application you can override any of this template by defining \\nnew layer for `field` category::\\n\\n     >> ls ./myproject/fields/\\n     .. bool.pt\\n\\nUsually top level directory is a category and file in directory is template.\\nFor example 'form:view.lt'::\\n\\n    `form` - layer category\\n    `view` - template name\\n    `.lt`  - custom pyramid renderer factory\\n\\nLayer can to be defined with `add_layer` config directive:\\n\\n.. code-block:: python\\n\\n    >> config = Configurator()\\n    .. config.include('player')\\n    ..\\n    .. config.add_layer('form', path='./path_to_form_dirctory/form/')\\n\\n`form` directory can contain any template:\\n\\n.. code-block:: python\\n\\n    >> ./form/\\n    ..   view.pt\\n    ..   actions.jinja2\\n\\nIt is possible to use any of this templates as pyramid renderer path:\\n\\n.. code-block:: python\\n\\n    >> config.add_view(\\n    ..     name='view.html', \\n    ..     renderer='form:view.lt')\\n\\nor :\\n\\n.. code-block:: python\\n\\n    >> config.add_view(\\n    ..     name='actions.html', \\n    ..     renderer='form:actions.lt')\\n\\n\\nIt is possible to run python code before rendering template. \\nThere are `add_tmpl_filter` directive and `player.tmpl_filter` \\ndecorator:\\n\\n.. code-block:: python\\n\\n    >> def form_actions(context, request):\\n    ..     return {'url': ...}\\n\\n    >> config.add_tmpl_filter('form:actions', form_action, name='custom')\\n   \\nor:\\n\\n.. code-block:: python\\n\\n    >> import player\\n\\n    >> @player.tmpl_filter('form:actions', name='custom')\\n    .. def form_actions(context, request):\\n    ..     return {'url': ...}\\n\\n`form_actions` function gets call just before rendering template.\\nLayer has to be defined with `add_layer` directve before registering \\ntemplate filter function.\\n\\n\\nCustomization\\n-------------\\n\\nAny number of layer categories can be registered and any number of\\nlayers can be registered in each category. It doesnt require to override \\nall templates from category. For example it is possible to override just \\nview.pt template::\\n\\n    >> config.add_layer('form', 'custom', path='path_to_form_directory_2/form')\\n\\nand content of this new directory::\\n\\n    >> ./another_path/form/\\n    ..   view.jinja2\\n\\nNow view `view.html` uses `view.jinja2` template. But `actions.html` stil\\nuses original template.\\n\\nAnother example, if you want customize `bool` field from ptah.form package\\nall you need is to create some folder, add it as 'fields' layer, and put\\n`bool.pt` template to this folder, something like that::\\n\\n   >> config.add_layer('fields', 'custom', 'mypackage:fields')\\n\\nand ::\\n\\n   >> .mypackage/fields/\\n   ..    bool.pt\\n\\n\\nRequest method\\n--------------\\n\\n`player` also provides request method `render_tmpl`. It acccepts\\npath::\\n\\n   ..  ${structure: request.render_tmpl('form:actions')\\n\\n`.lt` extension is optional in this case.\\n\\n\\nplayer\\n-------\\n\\n...\\n\\n\\nLicense\\n-------\\n\\nplayer is offered under the BSD license.\\n\\nCHANGES\\n=======\\n\\n0.6.1 (01-22-2013)\\n------------------\\n\\n- Added python 2.6\\n\\n\\n0.6 (12-10-2012)\\n----------------\\n\\n- Allow to use standard renderers in `render` function\\n\\n\\n0.5 (11-30-2012)\\n----------------\\n\\n- Use jinja2 for templates\\n\\n- Added `layout_data` request property\\n\\n- Allow to pass several messages to `error` message\\n\\n\\n0.4 (11-12-2012)\\n----------------\\n\\n- Added `player.layout` renderer\\n\\n- Added `-c` argument to `player` console script, \\n  it allows to customize templates\\n\\n- `set_layout_data` accepts keyword arguments\\n\\n- Removed `player.wrap_layout()`\\n\\n- Removed python2.6 support\\n\\n\\n0.3 (11-07-2012)\\n----------------\\n\\n- Added `set_layout_data` request method, allow to set global layout options\\n\\n- Added status messages\\n\\n- Added formatters\\n\\n\\n0.2 (11-01-2012)\\n----------------\\n\\n- Added `layout` subsystem\\n\\n\\n0.1 (10-30-2012)\\n----------------\\n\\n- Initial release\", \n        \"release_url\": \"http://pypi.python.org/pypi/player/0.6.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 4, \n        \"classifiers\": [\n            \"Framework :: Pyramid\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 2.6\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3.2\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: Implementation :: CPython\", \n            \"Topic :: Internet :: WWW/HTTP\", \n            \"Topic :: Internet :: WWW/HTTP :: WSGI\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"player\", \n        \"license\": \"BSD\", \n        \"summary\": \"Pyramid view layers\", \n        \"home_page\": \"https://github.com/fafhrd91/player/\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.6.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-01-22T17:27:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/66/a9/699a6820e8169d28d1372f28c77e4d3f0086dddc670645edb1ec4671a051/player-0.6.1.tar.gz\", \n                \"md5_digest\": \"20a25fd8b8d234eb32e2796052e565f6\", \n                \"downloads\": 3642, \n                \"filename\": \"player-0.6.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"66/a9/699a6820e8169d28d1372f28c77e4d3f0086dddc670645edb1ec4671a051/player-0.6.1.tar.gz\", \n                \"size\": 18295\n            }\n        ], \n        \"0.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-11-30T21:38:49\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/60/d4/9542d6c9ae2275978a417eebe6834b410bc92046cd95a62310081c6d8107/player-0.5.tar.gz\", \n                \"md5_digest\": \"ac267bc7b5174b8beb03254bd4ae53c0\", \n                \"downloads\": 2077, \n                \"filename\": \"player-0.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"60/d4/9542d6c9ae2275978a417eebe6834b410bc92046cd95a62310081c6d8107/player-0.5.tar.gz\", \n                \"size\": 17911\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-11-13T07:32:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/cc/4a/3a36e9ed944c70e28b9ad57f5297f52fa32544b3a5b6649c8dfb493405de/player-0.4.tar.gz\", \n                \"md5_digest\": \"528f291693a817849f131df4f6362aab\", \n                \"downloads\": 2183, \n                \"filename\": \"player-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"cc/4a/3a36e9ed944c70e28b9ad57f5297f52fa32544b3a5b6649c8dfb493405de/player-0.4.tar.gz\", \n                \"size\": 17623\n            }\n        ], \n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-11-08T01:18:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2f/c3/9e30596e7b5e979ffefbcb8a593e141789a3605e9043cab99893eabce566/player-0.3.tar.gz\", \n                \"md5_digest\": \"c71a6953be43a68b1e8edf464eb60f7d\", \n                \"downloads\": 2327, \n                \"filename\": \"player-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2f/c3/9e30596e7b5e979ffefbcb8a593e141789a3605e9043cab99893eabce566/player-0.3.tar.gz\", \n                \"size\": 17258\n            }\n        ], \n        \"0.6\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-12-10T21:18:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2f/e4/c10004d744caeb1417c081ea2983a538d77cdcfe65becec92ee78d530cfb/player-0.6.tar.gz\", \n                \"md5_digest\": \"3814f31aab29352b4aa19692b8efd688\", \n                \"downloads\": 2103, \n                \"filename\": \"player-0.6.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2f/e4/c10004d744caeb1417c081ea2983a538d77cdcfe65becec92ee78d530cfb/player-0.6.tar.gz\", \n                \"size\": 18095\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2013-01-22T17:27:58\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/66/a9/699a6820e8169d28d1372f28c77e4d3f0086dddc670645edb1ec4671a051/player-0.6.1.tar.gz\", \n            \"md5_digest\": \"20a25fd8b8d234eb32e2796052e565f6\", \n            \"downloads\": 3642, \n            \"filename\": \"player-0.6.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"66/a9/699a6820e8169d28d1372f28c77e4d3f0086dddc670645edb1ec4671a051/player-0.6.1.tar.gz\", \n            \"size\": 18295\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:43:35"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/fafhrd91/player", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F904D09:585CFFD7"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:43:35 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["1c0ce1a213af16e49d5419559ef44f50"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["8d05b27926ea5308a54c8f9f0605796e"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.262075"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:43:35 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMzgxZTk1MTU3MTc1MTQ0ZDdmMzMyODc1Y2U1YjJiMDEiLCJzcHlfcmVwbyI6ImZhZmhyZDkxL3BsYXllciIsInNweV9yZXBvX2F0IjoxNDgyNDg5ODE1LCJfY3NyZl90b2tlbiI6InJGWHE2Ni9OYkxkaVpac2lqYnVFTTZhQXI0S3hQRVJrL2pUbng4MEdOODQ9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--986fc7ef7de326f9accd79448920f80eda3f4856; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/fafhrd91/player", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:36"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/fafhrd91/player/master/CHANGES.txt", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C26:73BD:3B6B9F9:585CFFD8"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:43:36 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1537-HHN"], "X-Fastly-Request-ID": ["9187d6115188c749360e7bb5ef267ffe973557bb"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489816.201642,VS0,VE122"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"8bfd0e8f55094f0465e1d8fb5028e00f6d7fa27d\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["411"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:48:36 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/fafhrd91/player/master/CHANGES.txt", "body": {"base64_string": "H4sIAAAAAAAAA4WTwU7kMAyG73kKHweJjtrMLnvigNBqlwsHEGcSWjMU2iQbO4y6T4+bMDCjkWZyS+Pf/uzfvf57dfvn9726LEepenmxbGBRN5XWla6b1ZmqDo5SFVx1HXYQJn7xDvTyQmUtLBpdNfWs1IfKrBsGvwH2kAiB2LrOxg4iug4jRoLegSk3A8/Jtdx7l3P/lNxNtTqW+0FSvvbu1Wp49hEYxzBYRvrmNYOdfOLHzrI1UvVfQmII0QeMPO3xBUsEhO8Y7QAjEtk10vxgMEYvdJ/fMtyPDNfoY40XACGaMC4Lh/lqfCeiag3YuE4jOs71isRA6x35QabWxj7wOSiAnsHOwBmsTcR+7P/jfueGkB/3+rZti4EJ3nDaeJn+tloOv8PRv++QbqINn/LFmdmNKOaL90ApBB85j2KVR1H/Oj2KA66tHyNK4u68tDZ3JpGwHvyTOFEE4MO8GDvOyipxoi+jvh9kE0bLLLuV8XTBa07jbS2i9EQTyUizXn4O2e+ja3jjeu4FNeKAllB9AHIZy9dlAwAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:43:36"}], "recorded_with": "betamax/0.8.0"}