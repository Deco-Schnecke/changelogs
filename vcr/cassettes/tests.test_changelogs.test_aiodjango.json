{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/aiodjango/json"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://pypi.python.org/pypi/aiodjango/json", "headers": {"Content-Length": ["6462"], "Connection": ["keep-alive"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Age": ["70896"], "Fastly-Debug-Digest": ["e4b122839f937559a8b316aa249ff156e281c9e838c124bc32c6d1d55ebb3c20"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish", "1.1 varnish"], "Content-Disposition": ["inline"], "X-Served-By": ["cache-iad2120-IAD, cache-hhn1525-HHN"], "X-Timer": ["S1482488767.281886,VS0,VE0"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Cache": ["HIT, HIT"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["1, 1"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=600, public"], "X-Frame-Options": ["deny"], "Date": ["Fri, 23 Dec 2016 10:26:07 GMT"], "Server": ["nginx/1.10.2"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-PYPI-LAST-SERIAL": ["2534909"], "Access-Control-Allow-Origin": ["*"]}, "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/aiodjango\", \n        \"author\": \"Mark Lavin\", \n        \"author_email\": \"markdlavin@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.1.0\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"aiodjango\\n=========\\n\\nThis is a proof-of-concept experiment to combine a Django WSGI app mixed with\\nasync views/websocket handlers using aiohttp. The API is highly unstable\\nand I wouldn't recommend that you use this code for anything other than\\nwild experimentation.\\n\\n.. image:: https://travis-ci.org/mlavin/aiodjango.svg\\n    :target: https://travis-ci.org/mlavin/aiodjango\\n\\n.. image:: https://codecov.io/github/mlavin/aiodjango/coverage.svg?branch=master\\n    :target: https://codecov.io/github/mlavin/aiodjango?branch=master\\n\\n\\nHow It Works\\n------------\\n\\n``aidjango.get_aio_application`` builds an application which combines both\\nrequest handlers/views from Django and `aiohttp.web <http://aiohttp.readthedocs.org/en/stable/web.html>`_.\\nViews are defined using the normal Django url pattern syntax but\\nany handler which is a coroutine is handled by the ``aiohttp`` application\\nwhile the rest of the views are handled by the normal Django app.\\n\\nInternal this makes use of `aiohttp-wsgi <https://github.com/etianen/aiohttp-wsgi>`_\\nwhich runs the Django WSGI app in a thread-pool to minimize blocking the async\\nportions of the app.\\n\\n\\nRunning the Demo\\n----------------\\n\\nThe example project requires Python 3.4+ to run. You should create a virtualenv\\nto install the necessary requirements::\\n\\n    $ git clone https://github.com/mlavin/aiodjango.git\\n    $ cd aiodjango/\\n    $ mkvirtualenv aiodjango -p `which python3.4`\\n    (aiodjango) $ add2virtualenv .\\n    (aiodjango) $ cd example\\n    (aiodjango) $ pip install -r requirements.txt\\n    (aiodjango) $ python manage.py migrate\\n    (aiodjango) $ python manage.py runserver\\n\\nThis starts the server on http://localhost:8000/ with a new version of Django's\\nbuilt-in runserver. For a more multi-process server you can run using the\\naiohttp worker along with Gunicorn::\\n\\n    (aiodjango) $ gunicorn example.wsgi:app --worker-class aiohttp.worker.GunicornWebWorker --workers 2\", \n        \"release_url\": \"http://pypi.python.org/pypi/aiodjango/0.1.0\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Framework :: Django\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"aiodjango\", \n        \"license\": \"BSD\", \n        \"summary\": \"Utilities for running async aiohttp based routes in the context of a Django project.\", \n        \"home_page\": \"https://github.com/mlavin/aiodjango\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-20T11:51:54\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/37/53/c745e2a18dcd704b8f8f8f792c31852a0cf4c753eac808a499fd5f965ccd/aiodjango-0.1.0-py2.py3-none-any.whl\", \n                \"md5_digest\": \"19a5cfd067dece7c2a16029ee213c3ad\", \n                \"downloads\": 712, \n                \"filename\": \"aiodjango-0.1.0-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"37/53/c745e2a18dcd704b8f8f8f792c31852a0cf4c753eac808a499fd5f965ccd/aiodjango-0.1.0-py2.py3-none-any.whl\", \n                \"size\": 9693\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-20T11:51:49\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/3e/b9/34ca7e80331c8dbfad76cf60aeca719456f72e40e07e611c487c41d35591/aiodjango-0.1.0.tar.gz\", \n                \"md5_digest\": \"c7b04ed0d557adb24ffd169f07e20882\", \n                \"downloads\": 447, \n                \"filename\": \"aiodjango-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"3e/b9/34ca7e80331c8dbfad76cf60aeca719456f72e40e07e611c487c41d35591/aiodjango-0.1.0.tar.gz\", \n                \"size\": 7194\n            }\n        ], \n        \"0.0\": []\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-12-20T11:51:54\", \n            \"comment_text\": \"\", \n            \"python_version\": \"2.7\", \n            \"url\": \"https://pypi.python.org/packages/37/53/c745e2a18dcd704b8f8f8f792c31852a0cf4c753eac808a499fd5f965ccd/aiodjango-0.1.0-py2.py3-none-any.whl\", \n            \"md5_digest\": \"19a5cfd067dece7c2a16029ee213c3ad\", \n            \"downloads\": 712, \n            \"filename\": \"aiodjango-0.1.0-py2.py3-none-any.whl\", \n            \"packagetype\": \"bdist_wheel\", \n            \"path\": \"37/53/c745e2a18dcd704b8f8f8f792c31852a0cf4c753eac808a499fd5f965ccd/aiodjango-0.1.0-py2.py3-none-any.whl\", \n            \"size\": 9693\n        }, \n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-12-20T11:51:49\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/3e/b9/34ca7e80331c8dbfad76cf60aeca719456f72e40e07e611c487c41d35591/aiodjango-0.1.0.tar.gz\", \n            \"md5_digest\": \"c7b04ed0d557adb24ffd169f07e20882\", \n            \"downloads\": 447, \n            \"filename\": \"aiodjango-0.1.0.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"3e/b9/34ca7e80331c8dbfad76cf60aeca719456f72e40e07e611c487c41d35591/aiodjango-0.1.0.tar.gz\", \n            \"size\": 7194\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:26:07"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://github.com/mlavin/aiodjango"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://github.com/mlavin/aiodjango", "headers": {"X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Served-By": ["75d72dcf27484631bfac6100aeeba60c"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Runtime": ["0.136592"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Date": ["Fri, 23 Dec 2016 10:26:07 GMT"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8BF68E:585CFBBF"], "Server": ["GitHub.com"], "Content-Encoding": ["gzip"], "X-Content-Type-Options": ["nosniff"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:26:07 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYTg0ZTQ0YTc3ZjA3Njc1ODZmMWVhNTZjMmFjN2UyYjkiLCJzcHlfcmVwbyI6Im1sYXZpbi9haW9kamFuZ28iLCJzcHlfcmVwb19hdCI6MTQ4MjQ4ODc2NywiX2NzcmZfdG9rZW4iOiI2KzM0U05KRHJudTlpODJReW5XYjdBSnZmSFMySlE0RHhFWmsxUE1nalgwPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--a1173b2317cfba4e2e4ed73a581122609425dc36; path=/; secure; HttpOnly"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-Request-Id": ["b529bbebd9155280aabd90084594fc6e"], "X-XSS-Protection": ["1; mode=block"], "X-Frame-Options": ["deny"], "Cache-Control": ["no-cache"], "Transfer-Encoding": ["chunked"]}, "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:07"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://raw.githubusercontent.com/mlavin/aiodjango/master/CHANGELOG.rst"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://raw.githubusercontent.com/mlavin/aiodjango/master/CHANGELOG.rst", "headers": {"Content-Length": ["279"], "Connection": ["keep-alive"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish"], "X-GitHub-Request-Id": ["C71B4C28:773D:357ED06:585CFBBF"], "X-Cache-Hits": ["0"], "X-Timer": ["S1482488768.081199,VS0,VE118"], "Strict-Transport-Security": ["max-age=31536000"], "X-Cache": ["MISS"], "Vary": ["Authorization,Accept-Encoding"], "Expires": ["Fri, 23 Dec 2016 10:31:08 GMT"], "X-Fastly-Request-ID": ["7b404bafa16e2ddeec307f69cf92b63055e27265"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["cache-hhn1536-HHN"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=300"], "X-Frame-Options": ["deny"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Date": ["Fri, 23 Dec 2016 10:26:08 GMT"], "Content-Encoding": ["gzip"], "Source-Age": ["0"], "Content-Type": ["text/plain; charset=utf-8"], "Access-Control-Allow-Origin": ["*"], "ETag": ["\"ddaaa3fe8f370dca5cd18cfd956bfd4e7dce689c\""], "X-Geo-Block-List": [""]}, "body": {"base64_string": "H4sIAAAAAAAAA3WQMU/EMAyF9/wKj8fQ6lqJkeGAgVsQQmKvlfhyOXp2lKQ9+u9xAwcLeIlkO+99zw9HZE+jeHN3LWOeQi6SFpADJBoJMzk4SAIM4k66L60xZt62PWze2FGCR5pVI56Jy41p/iljGtg5p1p5ilFSqZpWkkwlMMH6UtYGFwwc2APjWbcTefoAr+OYW9XYcygBR4hJTmQLOLHT6owlCH+TdbDpt91t0/VNv/0DyZgfFbTv6KtNTdqumPeYg4Xdy74iOirqswJhXtjCHOiSAdnBJWGM6yAwDIOe51hKHAbQ7hjsFxA8C7hFo6hijXiNv2Z5nThTmvWEgQv5VL9U01Gs0rnfw7bmE8jb/CesAQAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:08"}]}