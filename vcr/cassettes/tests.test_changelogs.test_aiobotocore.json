{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/aiobotocore/json"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://pypi.python.org/pypi/aiobotocore/json", "headers": {"Content-Length": ["6374"], "Connection": ["keep-alive"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Age": ["5810"], "Fastly-Debug-Digest": ["17d8ca5d236401cab2163c11e496678ec1d1cde3fb8413f5e4ccf799fe1cf398"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish", "1.1 varnish"], "Content-Disposition": ["inline"], "X-Served-By": ["cache-iad2126-IAD, cache-hhn1545-HHN"], "X-Timer": ["S1482488762.071072,VS0,VE0"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Cache": ["MISS, HIT"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["0, 1"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=600, public"], "X-Frame-Options": ["deny"], "Date": ["Fri, 23 Dec 2016 10:26:02 GMT"], "Server": ["nginx/1.10.2"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-PYPI-LAST-SERIAL": ["2536232"], "Access-Control-Allow-Origin": ["*"]}, "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"\", \n        \"package_url\": \"http://pypi.python.org/pypi/aiobotocore\", \n        \"author\": \"Nikolay Novik\", \n        \"author_email\": \"nickolainovik@gmail.com\", \n        \"download_url\": \"https://pypi.python.org/pypi/aiobotocore\", \n        \"platform\": \"\", \n        \"version\": \"0.0.6\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"aiobotocore\\n===========\\n.. image:: https://travis-ci.org/aio-libs/aiobotocore.svg?branch=master\\n    :target: https://travis-ci.org/aio-libs/aiobotocore\\n\\nAsync client for amazon services using botocore_ and aiohttp_/asyncio_.\\n\\nMain purpose of this library to support amazon s3 api, but other services\\nshould work (but may be with minor fixes). For now we have tested\\nonly upload/download api for s3. More tests coming soon.\\n\\n\\nInstall\\n-------\\n::\\n\\n    $ pip install -e git+https://github.com/aio-libs/aiobotocore.git@master#egg=aiobotocore\\n\\n\\nBasic Example\\n-------------\\n\\n.. code:: python\\n\\n    import asyncio\\n    import aiobotocore\\n\\n    AWS_ACCESS_KEY_ID = \\\"xxx\\\"\\n    AWS_SECRET_ACCESS_KEY = \\\"xxx\\\"\\n\\n\\n    @asyncio.coroutine\\n    def go(loop):\\n\\n        bucket = 'dataintake'\\n        filename = 'dummy.bin'\\n        folder = 'aiobotocore'\\n        key = '{}/{}'.format(folder, filename)\\n\\n        session = aiobotocore.get_session(loop=loop)\\n        client = session.create_client('s3', region_name='us-west-2',\\n                                       aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\\n                                       aws_access_key_id=AWS_ACCESS_KEY_ID)\\n        # upload object to amazon s3\\n        data = b'\\\\x01'*1024\\n        resp = yield from client.put_object(Bucket=bucket,\\n                                            Key=key,\\n                                            Body=data)\\n        print(resp)\\n\\n        # getting s3 object properties of file we just uploaded\\n        resp = yield from client.get_object_acl(Bucket=bucket, Key=key)\\n        print(resp)\\n\\n        # delete object from s3\\n        resp = yield from client.delete_object(Bucket=bucket, Key=key)\\n        print(resp)\\n\\n    loop = asyncio.get_event_loop()\\n    loop.run_until_complete(go(loop))\\n\\n\\nRun Tests\\n---------\\n\\nMake sure you have development requirements installed and your amazon key and\\nsecret accessible via environment variables:\\n\\n::\\n\\n    $ cd aiobotocore\\n    $ export AWS_ACCESS_KEY_ID=xxx\\n    $ export AWS_SECRET_ACCESS_KEY=xxx\\n    $ pip install -Ur requirements-dev.txt\\n\\nExecute tests suite:\\n\\n::\\n\\n    $ py.test -v tests\\n\\n\\nRequirements\\n------------\\n\\n* Python_ 3.3+\\n* asyncio_ or Python_ 3.4+\\n* aiohttp_\\n* botocore_\\n\\n.. _Python: https://www.python.org\\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\\n.. _botocore: https://github.com/boto/botocore\\n.. _aiohttp: https://github.com/KeepSafe/aiohttp\\n\\nChanges\\n-------\\n\\n0.0.6 (2016-11-19)\\n^^^^^^^^^^^^^^^^^^\\n\\n* Added enforcement of plain response #57 (thanks @rymir)\\n* botocore updated to version 1.4.73 #74 (thanks @vas3k)\\n\\n\\n0.0.5 (2016-06-01)\\n^^^^^^^^^^^^^^^^^^\\n\\n* Initial alpha release\", \n        \"release_url\": \"http://pypi.python.org/pypi/aiobotocore/0.0.6\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 2, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Environment :: Web Environment\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: System Administrators\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\"\n        ], \n        \"name\": \"aiobotocore\", \n        \"bugtrack_url\": null, \n        \"license\": \"Apache 2\", \n        \"summary\": \"\", \n        \"home_page\": \"https://github.com/aio-libs/aiobotocore\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-07-01T20:59:19\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/dc/9d/b32e9e865da0d69c058d5527606acb4f52307a8568be889a9ddfe8b94d34/aiobotocore-0.0.5.tar.gz\", \n                \"md5_digest\": \"8f09e045d250d6059f042fe54e7bd34b\", \n                \"downloads\": 1751, \n                \"filename\": \"aiobotocore-0.0.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"dc/9d/b32e9e865da0d69c058d5527606acb4f52307a8568be889a9ddfe8b94d34/aiobotocore-0.0.5.tar.gz\", \n                \"size\": 20417\n            }\n        ], \n        \"0.0.6\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-19T12:00:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b9/c5/10edbf2a36e061ae0ea5c6db9270069e4d32e35aa0ca46e8be215f7302ba/aiobotocore-0.0.6.tar.gz\", \n                \"md5_digest\": \"bfad16c17bf895c56491f4a4f780a89a\", \n                \"downloads\": 177, \n                \"filename\": \"aiobotocore-0.0.6.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b9/c5/10edbf2a36e061ae0ea5c6db9270069e4d32e35aa0ca46e8be215f7302ba/aiobotocore-0.0.6.tar.gz\", \n                \"size\": 32017\n            }\n        ], \n        \"0.0.2\": []\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-11-19T12:00:34\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/b9/c5/10edbf2a36e061ae0ea5c6db9270069e4d32e35aa0ca46e8be215f7302ba/aiobotocore-0.0.6.tar.gz\", \n            \"md5_digest\": \"bfad16c17bf895c56491f4a4f780a89a\", \n            \"downloads\": 177, \n            \"filename\": \"aiobotocore-0.0.6.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"b9/c5/10edbf2a36e061ae0ea5c6db9270069e4d32e35aa0ca46e8be215f7302ba/aiobotocore-0.0.6.tar.gz\", \n            \"size\": 32017\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:26:02"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://github.com/aio-libs/aiobotocore"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://github.com/aio-libs/aiobotocore", "headers": {"X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Served-By": ["9660edcd10921168c9f5df4333b06e59"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Runtime": ["0.094568"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Date": ["Fri, 23 Dec 2016 10:26:02 GMT"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8BF265:585CFBBA"], "Server": ["GitHub.com"], "Content-Encoding": ["gzip"], "X-Content-Type-Options": ["nosniff"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:26:02 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYjY5OWQ3OGRkNDE2YzA5OTYzZGQ4ZGU1OWI2OGE0YmYiLCJzcHlfcmVwbyI6ImFpby1saWJzL2Fpb2JvdG9jb3JlIiwic3B5X3JlcG9fYXQiOjE0ODI0ODg3NjIsIl9jc3JmX3Rva2VuIjoiQ3o5Yk1CS3ZOWnBERGxCQTNKYU5Ma1hZc1Z0Q2JHcjB3Z092dGZlVzFsOD0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--1a11f4970aae3948ca5ce0c14a30b471a71273ce; path=/; secure; HttpOnly"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-Request-Id": ["e4f831c9d4b0022558fce1cb6e03d406"], "X-XSS-Protection": ["1; mode=block"], "X-Frame-Options": ["deny"], "Cache-Control": ["no-cache"], "Transfer-Encoding": ["chunked"]}, "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:02"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://raw.githubusercontent.com/aio-libs/aiobotocore/master/CHANGES.txt"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://raw.githubusercontent.com/aio-libs/aiobotocore/master/CHANGES.txt", "headers": {"Content-Length": ["177"], "Connection": ["keep-alive"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish"], "X-GitHub-Request-Id": ["C71B4C19:56A0:460635B:585CFBBA"], "X-Cache-Hits": ["0"], "X-Timer": ["S1482488762.834166,VS0,VE123"], "Strict-Transport-Security": ["max-age=31536000"], "X-Cache": ["MISS"], "Vary": ["Authorization,Accept-Encoding"], "Expires": ["Fri, 23 Dec 2016 10:31:02 GMT"], "X-Fastly-Request-ID": ["707bd75873d30e87196ded64778299cd818db552"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["cache-hhn1545-HHN"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=300"], "X-Frame-Options": ["deny"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Date": ["Fri, 23 Dec 2016 10:26:02 GMT"], "Content-Encoding": ["gzip"], "Source-Age": ["0"], "Content-Type": ["text/plain; charset=utf-8"], "Access-Control-Allow-Origin": ["*"], "ETag": ["\"7eb9c17529411e2fb7cd8f4da39fed00843b16b4\""], "X-Geo-Block-List": [""]}, "body": {"base64_string": "H4sIAAAAAAAAA3WOywrCMBRE9/mKC25aoSGxL9wprvwJ4drc2tA0CUks+PcGKrgQD7OdmXOZ0D4osmqDMcEF76A4CNlVUlbyWLLbD4zt4awUKSA7ujDQQjaBG8Eb1BYCRe9sJNi1PRQpX8wRTuG16FDm5t0lN7hA8PQKUx5JDlYKUTsLkje8r2HXN9/iirGeS7a5tR83kSP/uV2tThoNoPETZh1DGIm9AU26NrrsAAAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:02"}]}