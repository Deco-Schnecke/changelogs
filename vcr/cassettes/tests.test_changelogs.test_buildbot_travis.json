{"http_interactions": [{"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["HIT, HIT"], "Via": ["1.1 varnish", "1.1 varnish"], "Date": ["Fri, 23 Dec 2016 10:30:40 GMT"], "Server": ["nginx/1.10.2"], "Content-Disposition": ["inline"], "Content-Length": ["24543"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Cache-Control": ["max-age=600, public"], "X-Served-By": ["cache-iad2121-IAD, cache-hhn1525-HHN"], "Age": ["76842"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Fastly-Debug-Digest": ["07a512ceb9aa8ffa0c2c9c04221dc180a0676758d4c932a001e87ec391dd42df"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Content-Type-Options": ["nosniff"], "X-PYPI-LAST-SERIAL": ["2534734"], "Connection": ["keep-alive"], "X-Timer": ["S1482489040.728646,VS0,VE1"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"]}, "url": "https://pypi.python.org/pypi/buildbot_travis/json", "body": {"string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"buildbot travis ci\", \n        \"package_url\": \"http://pypi.python.org/pypi/buildbot_travis\", \n        \"author\": \"Buildbot community\", \n        \"author_email\": \"buildbot-devel@lists.sourceforge.net\", \n        \"download_url\": \"\", \n        \"platform\": \"\", \n        \"version\": \"0.4.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"============================\\nTravis CI Compatibility Shim\\n============================\\n\\nThis is a setup of Buildbot steps, factories and configuration helpers that\\ngive you the best of buildbot and the best of Travis CI:\\n\\n * Builder configuration that lives with the source code\\n * Private builds\\n * non-github SCM support (gerrit, gitlab, github, github enterpris)\\n * unlimitted build parallelization on your own infra\\n\\n\\nBasically we provide a compatibility shim in buildbot that allows it to consume a ``.travis.yml`` file.\\n\\nbuildbot_travis does however not support the full .travis.yml format.\\n\\n|travis-badge|_ |codecov-badge|_\\n\\n\\n.. |travis-badge| image:: https://travis-ci.org/buildbot/buildbot_travis.svg?branch=master\\n.. _travis-badge: https://travis-ci.org/buildbot/buildbot_travis\\n.. |codecov-badge| image:: http://codecov.io/github/buildbot/buildbot_travis/coverage.svg?branch=master\\n.. _codecov-badge: http://codecov.io/github/buildbot/buildbot_travis?branch=master\\n\\n\\nQuickStart\\n==========\\n\\nFirst you need to make sure you have the proper python 2.7 environment. On ubuntu 16.04, that would mean::\\n\\n    sudo apt-get install build-essential python-dev libffi-dev libssl-dev python-pip\\n\\nThen you create a virtualenv and install buildbot_travis via pip::\\n\\n    mkdir bbtravis\\n    cd bbtravis\\n    virtualenv sandbox\\n    . ./sandbox/bin/activate\\n    pip install buildbot_travis\\n\\nNow you can create a new master::\\n\\n    bbtravis create-master master\\n\\nNow you can start that new master::\\n\\n    buildbot start master\\n\\nAnd then go to the UI: http://localhost:8010  which has an administration panel where to configure the projects.\\n\\n\\nQuickStart With Docker\\n======================\\n\\n::\\n\\n    docker run -p 8010:8010 -p 9989:9989 buildbot/buildbot-travis\\n\\n\\nQuickStart With Hyper\\n=====================\\n\\n::\\n\\n    IP=<yourFIPaddress>\\n    container=`hyper run -d -e buildbotURL=http://$IP/ -p 9989:9989 -p 80:8010 buildbot/buildbot-travis`\\n    hyper fip attach $IP $container\\n    echo go to http://$IP/#/bbtravis/config/auth  to configure admin access\\n    echo go to http://$IP/#/bbtravis/config/workers to configure\\n\\n\\nBuildbot Nine UI Plugin\\n=======================\\n\\nbuildbot_travis is configurable via the web UI.\\n\\nYou can edit the project list, environment variables, not_important files, deployment environments, all through the web UI.\\n\\nhigh level configuration is either stored in a yaml file or directly in the configured database.\\n\\nThe per project config file\\n===========================\\n\\nThis is a ``.travis.yml`` for a typical buildout project::\\n\\n    language: python\\n\\n    before_install: python bootstrap.py\\n    install:./bin/buildout\\n    script: ./bin/test\\n\\nYou can read more about this file format on the travis-ci website::\\n\\n    http://about.travis-ci.org/docs/user/build-configuration/\\n\\nBut features not also mentioned on this page might not currently be supported.\\n\\n\\nSupported languages\\n-------------------\\n\\nThe list of supported language is depending on your build worker configuration.\\n\\nWith the help of docker, you can create as many images as you need worker configuration.\\n\\n\\nActually the language parameter of the defacto travis format does not fully leverage the full possibilities of what you can do with buildbot.\\n\\nYou could think of selecting a different docker image according to the version of software you want to check.\\nThis can avoid the time to setup the worker environment at the beginning of your travis.yml (as you would do in travis saas)\\n\\n\\nBuild Steps\\n-----------\\n\\nTravis provides 6 hook points for your builds:\\n\\n * before_install\\n * install\\n * after_install\\n * before_script\\n * script\\n * after_script\\n\\nWe really don't care what you run from these hooks as long as exit code 0 means\\nsuccess and anything else means fail.\\n\\nYou can provide a single command like this::\\n\\n    install: ./bin/buildout\\n\\nOr multiple commands like this::\\n\\n    install:\\n      - ./configure\\n      - ./bin/buildout\\n\\nEach element of the list in the yaml will create a single step, which is named with the first characters of your command line.\\n\\nIf you want to create a custom name, buildbot_travis supports following syntax::\\n\\n    script:\\n      - |\\n          # build\\n          ./configure\\n          make\\n      - |\\n          # tests\\n          make tests\\n\\n\\nBuildbot specific features\\n--------------------------\\n\\nOriginal Travis just create a simple shell script to run the whole CI script.\\nBuildbot is a little bit more powerful, and buildbot_travis can make use of it.\\nFor this you need to go out of the travis \\\"de-facto\\\" standard. e.g::\\n\\n    script:\\n      - |\\n          # build\\n          ./configure\\n          make\\n\\n      - title: tests\\n        condition: TESTS=='tests'\\n        cmd: make tests\\n\\nIf yaml parser encounters a dictionary, then it will use the following keys:\\n\\n* ``title``: the title of the step in the UI\\n* ``condition``: a condition to run the step.\\n   It is evaluated as a python expression, with variables beiing the environment variable generated by your matrix.\\n   The condition is evaluated at the time of the parsing of the yaml file.\\n   If the condition is not met, then the step is just not inserted in the step list.\\n* ``cmd``: The command to run.\\n\\nIn order to keep working with buildbot_travis and travis.org at the same time, buildbot travis will look for a .bbtravis.yml before .travis.yml.\\nWith this, you can keep your .travis.yml without any buildbot specific feature.\\n\\n* Original travis supports clone depth configuration inside the yml file (aka shallow clone).\\n  As the git clone is made before buildbot has a chance to parse the yaml, this configuration is done in the per project config in buildbot travis.\\n  Two options are available in the cfg.yml (shallow and retryFetch) e.g::\\n\\n    projects:\\n    -   branches:\\n        - master\\n        name: buildbot\\n        repository: https://github.com/buildbot/buildbot\\n        shallow: 200\\n        retryFetch: true\\n        mode: \\\"full\\\"\\n        method: \\\"clobber\\\"\\n        stages: []\\n        tags: []\\n        vcs_type: github\\n\\n\\nInstalling dependencies\\n-----------------------\\n\\nThe docker image that is used is throw away, and will start from clean state for each build.\\n\\nYou can create a docker image with passwordless sudo, as travis does, so that you can use apt-get::\\n\\n    before_install:\\n      - sudo apt-get update\\n      - sudo apt-get install -y -q mydependency\\n\\nIt is however a better practice and more optimized to just provide a prebuilt docker image which contain what you need.\\n\\n\\nEnvironments\\n------------\\n\\nYou might want to perform multiple builds of the same piece of software. Travis\\ndelivers::\\n\\n    env:\\n     - FLAVOUR=blue\\n     - FLAVOUR=green\\n     - FLAVOUR=red\\n\\n    install:\\n      - ./configure -f $FLAVOUR\\n      - ./bin/buildout\\n\\nCommits to this code base will cause builds for blue, green and red flavours.\\nThe environment variables can be used like ordinary environment variables\\ninside the scripts you run from your ``.travis.yml`` and can be used in the\\n``.travis.yml`` itself.\\n\\n``env`` is a list of environment variables. You can specify multiple variables\\non a single line like this::\\n\\n    env:\\n     - PROP1=foo PROP2=bar\\n\\n\\nBuild Matrix\\n------------\\n\\nYour options for ``language`` and ``env`` create an implicit build matrix. A\\nbuild matrix is a collection of all the possible combinations of the ``env``\\noptions and language versions. You can fine tine this matrix by excluding\\ncertain combinations, or inserting additional ones.\\n\\nHere is an example of excluding a combination and inserting an additional\\nbuild::\\n\\n      python:\\n        - 2.6\\n        - 2.7\\n\\n      env:\\n        - FLAVOUR=apple\\n        - FLAVOUR=orange\\n\\n      matrix:\\n        exclude:\\n          - python: 2.7\\n            env: FLAVOUR=orange\\n        include:\\n          - python: 2.7\\n            env: FLAVOUR=banana\\n\\nThis will do an additional build of the ``banana`` build but only for python\\n2.7. And it will turn off the build for the ``orange`` flavour, again only\\nfor python 2.7.\\n\\n\\nDeployment\\n----------\\n\\nA ``Deploy`` section is available in the left side menu. In this section, a Deployment dashboard will be\\navailable once configured.\\n\\nThis dashboard enables a streamlined, fully automated delivery process, from Commit to Production environment.\\nLatest version of your project is just one click away from users.\\n\\nSee the dashboard's template below\\n\\n    ==============   =========    =========    =========    =========\\n     DELIVERABLES                         STAGES\\n    --------------   ------------------------------------------------\\n     (projects)        COMMIT        DEV          QA           PROD\\n    ==============   =========    =========    =========    =========\\n     Deliverable A    GIT rev      1.2.3        GIT tag      GIT tag\\n    ==============   =========    =========    =========    =========\\n\\nFor example, the version 1.2.3 (specified thanks to a GIT tag) of deliverable A is deployed in DEV stage.\\n\\nHere are the 5 steps to setup a Deployment dashboard in Buildbot Travis.\\n\\n1) A ``Deployment`` section is available in the ``Settings`` section.\\n   In this section, the ``Deployment Environment(s)`` is the list of target environments (or Stages)\\n   where deliverables are going to be deployed.\\n   These environments should be sorted following your development process definition.\\n   Example::\\n\\n       COMMIT (merged dev), DEV, QA, PROD\\n       BEWARE!The first column is reserved for COMMIT stage so you do not need to define it in the Stages list.\\n\\n2) Go to the ``Deploy`` section in the left side menu. You should see a Deployment dashboard like the above example.\\n   The Stages should be the same as the ones defined in 1).\\n\\n3) Go to the ``Settings/Projects`` section. Add corresponding Stages to the different projects in the Stages field.\\n   Stages can be a subset of the Stages defined in 2).\\n\\n4) You should see a fully configured Deployment dashboard with all the deliverables, Stages, GIT revisions and GIT\\n   tags. GIT revisions and GIT tags are available in dropdown lists. When you select a specific version, a pop_up\\n   window appears to launch the deployment procedure in the specific stage.\\n\\n5) To enable push button deployments, you need to define the deployment procedures.\\n   Create deployment scripts and update the script and/or after_script sections of the ``.travis.yml`` file\\n   of each deliverable.\\n\\n   Example::\\n\\n    after_script:\\n       - |\\n         # Deployment\\n           python ./deploy.py --repo \\\"${repository}\\\" --stage \\\"${stage}\\\" --version \\\"${version}\\\";\\n\\n           ${repository} is the URL of the project's (or deliverable's) repo.\\n           ${stage} is the retrieved from the Deployment dashboard.\\n           ${version} is retrieved from the Deployment dashboard.\\n\\nHow it works\\n============\\n\\nThe basic behaviour is:\\n\\n * Commit is picked up (polling by default, with additional triggers via\\n   ``/change_hook/poller?poller=pollername`` web hook\\n\\n * Build is scheduled on a 'spawner' builder - this is a builder configured to\\n   use an ordinary slave\\n\\n * Checkout occurs - for the purposes of acquiring the ``.travis.yml`` rather\\n   than for actually performing a build\\n\\n * 'spawner' triggers a build on a 'job' builder for each environment in the\\n   build matrix defined in ``.travis.yml``\\n\\n * 'job' builder does a single build in a clean latent buildslave (VM or docker)\\n\\n * ``setup-steps`` step dynamically appends ShellCommand steps based on\\n   contents of ``.travis.yml``\\n\\n * when job is over VM orcontainer is thrown away.\\n\\n * The 'spawner' build acts as a way of aggregating the build results in a\\n   single pass/fail status.\\n\\n * MailNotifier subclass uses ``.travis.yml`` found in build history so that\\n   recipients list and whether or not to mail can be adapted accordingly.\\n   XXX: this needs to be adapted for nine\\n\\n\\nCommandLine\\n===========\\n``buildbot_travis`` package comes with a ``bbtravis`` command line utility.\\n\\nThis utility is useful to test travis.yml locally without pushing it to the CI.\\nIt allows to test either the travis.yml and the docker image used to run the workers.\\nIt allows to run only the part of the matrix that you are working on\\n\\nExample::\\n\\n    bbtravis run -d tardyp/metabbotcfg  -j8 TESTS=trial TWISTED=latest\\n\\nThis will run the resulting tests in parallel using docker image tagged tardyp/metabbotcfg and will filter only the matrix environment with TESTS=='trial' and TWISTED=='latest'\\n\\nUI is using urwid console UI framework, and will split the terminal into several terminal showing each matrix run.\\nYou can scroll using mouse wheel, and click to zoom and get more details.\\n\\nTODO\\n====\\n\\nThis special branch is the nine port of buildbot_travis.\\nCompared to previous version following features are not yet available\\n\\n* Custom MailNotifier needs to be adapted for nine data api, in order to get the .travis.yml configuration\\n* mergerequest should be adapted to the new collapseRequest api\\n* SVN shall be validated (only git has been tested so far)\\n* metrics facility is not really specific to travis, and should be available in buildbot master directly\\n* nextBuild feature shall be reimplemented: allowed to avoid running a spawner when no '-job' slave is available\\n\\nCompared to original Travis format, here is a non-exaustive list of features known not to be supported\\n\\n* after_success, after_failure. Not implemented, but easy to add.\\n* deploy. Deployment step would have to happen after all the matrix subbuilds are succeed\\n\\n\\nAnd configure your hyper keys in the default hyper worker\\nYou should also configure an authentication plugin in order to protect those keys.\\n\\n\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/buildbot_travis/0.4.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 9, \n        \"requires_dist\": [\n            \"setuptools\", \n            \"buildbot\", \n            \"buildbot-www\", \n            \"buildbot-worker\", \n            \"klein\", \n            \"urwid\", \n            \"PyYAML\", \n            \"txrequests\", \n            \"pyjade\", \n            \"txgithub\", \n            \"ldap3\", \n            \"hyper-sh\"\n        ], \n        \"classifiers\": [], \n        \"bugtrack_url\": null, \n        \"name\": \"buildbot_travis\", \n        \"license\": \"MIT\", \n        \"summary\": \"Travis CI implemented in Buildbot\", \n        \"home_page\": \"http://github.com/buildbot/buildbot_travis\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-07-28T13:21:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/67/6e/530ec60afd02ee4b08035571d42eb165973e104913367ca78d4d3cc1ad9f/buildbot_travis-0.1.1-py2-none-any.whl\", \n                \"md5_digest\": \"6acb4d922ecfd3f15cb24c8f01272874\", \n                \"downloads\": 2045, \n                \"filename\": \"buildbot_travis-0.1.1-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"67/6e/530ec60afd02ee4b08035571d42eb165973e104913367ca78d4d3cc1ad9f/buildbot_travis-0.1.1-py2-none-any.whl\", \n                \"size\": 329928\n            }\n        ], \n        \"0.3.0\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-07-07T16:57:35\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2\", \n                \"url\": \"https://pypi.python.org/packages/60/6c/925a8f7d01eb9bd6ec2ea5a4c1af2048eaa515d238abaa974336ea36fb66/buildbot_travis-0.3.0-py2-none-any.whl\", \n                \"md5_digest\": \"fae12224e0672682f11bea7d14f4cea8\", \n                \"downloads\": 671, \n                \"filename\": \"buildbot_travis-0.3.0-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"60/6c/925a8f7d01eb9bd6ec2ea5a4c1af2048eaa515d238abaa974336ea36fb66/buildbot_travis-0.3.0-py2-none-any.whl\", \n                \"size\": 358123\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-05-12T09:09:39\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2\", \n                \"url\": \"https://pypi.python.org/packages/db/ad/a4658f2bdfcd68bfa360c258ab4a217777cb875501201403221df594a353/buildbot_travis-0.2.2-py2-none-any.whl\", \n                \"md5_digest\": \"2ca6508aa0c3b7852e1c76ffa909908a\", \n                \"downloads\": 152, \n                \"filename\": \"buildbot_travis-0.2.2-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"db/ad/a4658f2bdfcd68bfa360c258ab4a217777cb875501201403221df594a353/buildbot_travis-0.2.2-py2-none-any.whl\", \n                \"size\": 347074\n            }\n        ], \n        \"0.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-05-11T20:59:45\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/4d/33/56f74b341f9db9701bc69b603867548d568dfddc5f704d3929ddbecb0e09/buildbot_travis-0.2.1-py2-none-any.whl\", \n                \"md5_digest\": \"45b7fd748dda8adf52f0e0dd0e6e929c\", \n                \"downloads\": 117, \n                \"filename\": \"buildbot_travis-0.2.1-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"4d/33/56f74b341f9db9701bc69b603867548d568dfddc5f704d3929ddbecb0e09/buildbot_travis-0.2.1-py2-none-any.whl\", \n                \"size\": 38921\n            }\n        ], \n        \"0.2.0\": [], \n        \"0.4.1\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-10-05T12:40:18\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2\", \n                \"url\": \"https://pypi.python.org/packages/31/ed/9230cf599af6fe63a4d7a5a345c23bb0d11d251a2d9c4e2fe30aa29e75ce/buildbot_travis-0.4.1-py2-none-any.whl\", \n                \"md5_digest\": \"3a8dbf672c6cad2eb6b68f1031ba7430\", \n                \"downloads\": 257, \n                \"filename\": \"buildbot_travis-0.4.1-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"31/ed/9230cf599af6fe63a4d7a5a345c23bb0d11d251a2d9c4e2fe30aa29e75ce/buildbot_travis-0.4.1-py2-none-any.whl\", \n                \"size\": 369694\n            }\n        ], \n        \"0.4.0\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-09-30T15:47:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2\", \n                \"url\": \"https://pypi.python.org/packages/12/2a/49423a1066c1b2321fe94d4ae883db75d72fbb41114fc205ba47eab79a07/buildbot_travis-0.4.0-py2-none-any.whl\", \n                \"md5_digest\": \"f8acb1ca7905d83be3ccb2bfa35b8ff6\", \n                \"downloads\": 67, \n                \"filename\": \"buildbot_travis-0.4.0-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"12/2a/49423a1066c1b2321fe94d4ae883db75d72fbb41114fc205ba47eab79a07/buildbot_travis-0.4.0-py2-none-any.whl\", \n                \"size\": 397521\n            }\n        ], \n        \"0.4.3\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-11-21T08:49:10\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2\", \n                \"url\": \"https://pypi.python.org/packages/bd/ca/20e4faaf044bc852f5978b2cf539b5710f4cdb492fcf4078ab0b8ee07ad0/buildbot_travis-0.4.3-py2-none-any.whl\", \n                \"md5_digest\": \"9676273b3405ab7a00a1329e44a8e65e\", \n                \"downloads\": 40, \n                \"filename\": \"buildbot_travis-0.4.3-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"bd/ca/20e4faaf044bc852f5978b2cf539b5710f4cdb492fcf4078ab0b8ee07ad0/buildbot_travis-0.4.3-py2-none-any.whl\", \n                \"size\": 370306\n            }, \n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-11-21T08:49:13\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/c9/86/c499ad5ede6cf8ba13733e8a75b4a3b0b271b2fd192a9c55c48a5dcae8e4/buildbot_travis-0.4.3.tar.gz\", \n                \"md5_digest\": \"a424a7ca9d4125e533795ed65ea50056\", \n                \"downloads\": 39, \n                \"filename\": \"buildbot_travis-0.4.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"c9/86/c499ad5ede6cf8ba13733e8a75b4a3b0b271b2fd192a9c55c48a5dcae8e4/buildbot_travis-0.4.3.tar.gz\", \n                \"size\": 348334\n            }\n        ], \n        \"0.4.2\": [\n            {\n                \"has_sig\": true, \n                \"upload_time\": \"2016-10-06T09:46:21\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py2\", \n                \"url\": \"https://pypi.python.org/packages/c5/60/3ecc5f53ebd42c3fbc4f6ca106b1c0046ce59821e5a22b1e1b07afdf9195/buildbot_travis-0.4.2-py2-none-any.whl\", \n                \"md5_digest\": \"d40c183852fca75fafa1ff8a15b786d6\", \n                \"downloads\": 210, \n                \"filename\": \"buildbot_travis-0.4.2-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"c5/60/3ecc5f53ebd42c3fbc4f6ca106b1c0046ce59821e5a22b1e1b07afdf9195/buildbot_travis-0.4.2-py2-none-any.whl\", \n                \"size\": 369695\n            }\n        ], \n        \"0.0.18\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-02-04T19:41:45\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/dd/8c/d5f2fb23ec029ae31fa488c039d2634114d3a77cfb8592a7bdba6dfd0875/buildbot_travis-0.0.18-py2-none-any.whl\", \n                \"md5_digest\": \"eeaefdf7b2ff92518f74feee07381166\", \n                \"downloads\": 1039, \n                \"filename\": \"buildbot_travis-0.0.18-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"dd/8c/d5f2fb23ec029ae31fa488c039d2634114d3a77cfb8592a7bdba6dfd0875/buildbot_travis-0.0.18-py2-none-any.whl\", \n                \"size\": 328147\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": true, \n            \"upload_time\": \"2016-11-21T08:49:10\", \n            \"comment_text\": \"\", \n            \"python_version\": \"py2\", \n            \"url\": \"https://pypi.python.org/packages/bd/ca/20e4faaf044bc852f5978b2cf539b5710f4cdb492fcf4078ab0b8ee07ad0/buildbot_travis-0.4.3-py2-none-any.whl\", \n            \"md5_digest\": \"9676273b3405ab7a00a1329e44a8e65e\", \n            \"downloads\": 40, \n            \"filename\": \"buildbot_travis-0.4.3-py2-none-any.whl\", \n            \"packagetype\": \"bdist_wheel\", \n            \"path\": \"bd/ca/20e4faaf044bc852f5978b2cf539b5710f4cdb492fcf4078ab0b8ee07ad0/buildbot_travis-0.4.3-py2-none-any.whl\", \n            \"size\": 370306\n        }, \n        {\n            \"has_sig\": true, \n            \"upload_time\": \"2016-11-21T08:49:13\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/c9/86/c499ad5ede6cf8ba13733e8a75b4a3b0b271b2fd192a9c55c48a5dcae8e4/buildbot_travis-0.4.3.tar.gz\", \n            \"md5_digest\": \"a424a7ca9d4125e533795ed65ea50056\", \n            \"downloads\": 39, \n            \"filename\": \"buildbot_travis-0.4.3.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"c9/86/c499ad5ede6cf8ba13733e8a75b4a3b0b271b2fd192a9c55c48a5dcae8e4/buildbot_travis-0.4.3.tar.gz\", \n            \"size\": 348334\n        }\n    ]\n}", "encoding": "UTF-8"}}, "recorded_at": "2016-12-23T10:30:40", "request": {"method": "GET", "uri": "https://pypi.python.org/pypi/buildbot_travis/json", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 301, "message": "Moved Permanently"}, "headers": {"Content-length": ["0"], "Location": ["https://github.com/buildbot/buildbot_travis"], "Connection": ["close"]}, "url": "http://github.com/buildbot/buildbot_travis", "body": {"string": "", "encoding": null}}, "recorded_at": "2016-12-23T10:30:40", "request": {"method": "GET", "uri": "http://github.com/buildbot/buildbot_travis", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"Vary": ["X-PJAX", "Accept-Encoding"], "X-Served-By": ["406ec24a019e3172bda0b95e34dd53f7"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Date": ["Fri, 23 Dec 2016 10:30:41 GMT"], "Server": ["GitHub.com"], "X-Content-Type-Options": ["nosniff"], "X-Runtime": ["0.066595"], "X-GitHub-Request-Id": ["54B1D78B:C3EF:F8D180C:585CFCD1"], "X-Frame-Options": ["deny"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "X-Request-Id": ["a2168d5eb1252e923a9bea1dfcbf9c17"], "Content-Encoding": ["gzip"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:30:41 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMjEwNzc2Zjk0NjQxMjAyYzAzNWYzMGRlMTJhNDg0NGEiLCJzcHlfcmVwbyI6ImJ1aWxkYm90L2J1aWxkYm90X3RyYXZpcyIsInNweV9yZXBvX2F0IjoxNDgyNDg5MDQxLCJfY3NyZl90b2tlbiI6IlBualFIY1FEQnJKVVY0TjJvbGIyUGw0Z0hZclE2M0ZZemluOWgybnBUa289IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--02a131895a3e822777e89cec15831d91a4ec4ebc; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"]}, "url": "https://github.com/buildbot/buildbot_travis", "body": {"encoding": "utf-8", "base64_string": ""}}, "recorded_at": "2016-12-23T10:30:41", "request": {"method": "GET", "uri": "https://github.com/buildbot/buildbot_travis", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}, {"response": {"status": {"code": 200, "message": "OK"}, "headers": {"X-Cache": ["MISS"], "Via": ["1.1 varnish"], "Vary": ["Authorization,Accept-Encoding"], "Date": ["Fri, 23 Dec 2016 10:30:41 GMT"], "Content-Length": ["1424"], "Content-Encoding": ["gzip"], "X-XSS-Protection": ["1; mode=block"], "Expires": ["Fri, 23 Dec 2016 10:35:41 GMT"], "Cache-Control": ["max-age=300"], "X-Served-By": ["cache-hhn1540-HHN"], "X-Fastly-Request-ID": ["84335ef7600cbfb826c596794848e65b7749a3b2"], "X-Cache-Hits": ["0"], "X-GitHub-Request-Id": ["C71B4C27:074F:5BB1F67:585CFCD1"], "Content-Type": ["text/plain; charset=utf-8"], "X-Content-Type-Options": ["nosniff"], "Connection": ["keep-alive"], "X-Timer": ["S1482489041.707514,VS0,VE124"], "Access-Control-Allow-Origin": ["*"], "Accept-Ranges": ["bytes"], "X-Frame-Options": ["deny"], "ETag": ["\"a392fad7f6b1b9cb50745ae32d147d88ffa402b2\""], "Source-Age": ["0"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Geo-Block-List": [""]}, "url": "https://raw.githubusercontent.com/buildbot/buildbot_travis/master/CHANGES", "body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA6VXXXPTOBR9z6/QG2Vmmyb9hM7w0LKwdGYpTEt5JbIl29rKklcfSfPvOVeynbTT7mbZMAw4ls79Oufem/cNN7XUtp68Gz6TyWx6PD2a7NNnss9iVzsuJCtt2/GgCqVVWLNKPUg/ZR/VAyu5l2wlnWSB155x/EfETquSBymYMiw0dNtUqs7YhyP2zYeL3z9/yGCsso51606xjtcyn5yPJz8rg9dCdtIIaUpF52E7WFY6CUOMMx94oWHblvfSkcHAlZEuI81GpNvYddaFZO7TusNRjfsmsJV1uOifHOGiRQg8IggTFBJgzZMTf6jwKRbsa9SaOfl3lD54Mnr0gtGciugSFrPVYJhxI5IhtlQ821U+9MfurghyPmbkRmpJecf1IiotCht+4OxSeVbge8FwZ3jBDPLAChn4fDK55F6VzG/5U6vQxCLDDx5/VM4HRPMfjUy+NXi3RDDk84p71nAnqEoRMHh87BIdMHjgS650Kh5S3amOfIE3b9leNL0P4nX27PFngtRe29AoU7MyUVmwtQzTSY/whu0dzuaH+/P5/vzwRQQicUE1EEPEI8DZTgB3nSAK9mES3YlSSGBwqq7BsIuvV2wPwaqQYh5cRbSz6Zvp2espoVwIARkVKHUqi5M1yi8dxWbkinXO/iXL4EffTje+zeYv+nYjW7vMTi0WhrdysYBEodPK2TZ93VmtiX779LTOSnbpVlavamVyKLk6Wj/Zyfq1XbEKwliPjMuOtBypeYArtiN6g/ta2xWFWpFmk3qd1QxOOLoyYUy16ClwKV9ltcS51GHGQDTyRVx10ZDTWVDSLJWzpoV6AbLkThHR/Pn5BI/06dahsea8f2JIw+H09NHTWf8EqO1jH/+8+P7l7uYd7zotn/neOqpy/yJ7vbkuH0odhdx8QTd7V7ZMbgw/D4u0mF8FKrjBH0pDUu1KoX8Ji6Sh9whFZeE6C5aSmuuW76Bu+fsiIuEG1c29m4wCDlan7AK5J7oTaoiOGl0GyTfpQobM8QCy0nxpo/uN8RqNO+ECbIOccIlUn9EtqG+oimYMdZqSm1eBeUkNtFfX4wOqImeElZ4ONnxJCeRmnVsHTRGabi5peA9/hQzQWp5cCe71lN3abYzg1jg8yuG4l8PsFIp4uVFcMRgMHgMy6RqTtZTQB/NNDMKuzAB3tBPcF0q9b6AxGosEmJLrqS+T6+g+TUjjlJ1/HaAPN9Czs1/qqvOdEKirttyoKjVCOxCVBQkhU3sc4Gb/16G3/wYwdFdOLVA+hEvKEhgHKKFTg+FgT7Cdp7Q5mpVkynd8Rc2oT+oKc9JG6iJoMKlJ8Y6XWIbG7u0tWqWQFY86MFVjY5E+vbzDWLgFpJaXYHvZ3JaNFJFMH0Ao6ydf0o3bZ6oKUdB8iGoI/M1W4KcvBU51iMbfK/gs2KuEBdBX2DIwVcCUxeJgmC0HK1WgOx4gN9HpIT+DubNdzF060Bico8Wq4PXTiXq6C8a3ralEojTIBY0ukWaU6qdFKlZL1CrkMGlxpFiPPQClaqy9H2yfbNk+ecn27ffr3vaTRQ1mfSxKzb2nCdJjHu+C+T6CXG3qW9epKw2ca/k9xlTMK9Y0r1bTdat78KNdwP9BGKPUT/aPZr9wfxT68f7hs9tPKngm56MCPFIOlCU7zGsKNy1ZJKSkxXxM/CjWiwVqBRaCNfhx4S2ITk2d2JM2q77Q+FdhHIAT2NezKqYbcX8Krb6RHjOkzBsLtUYKDQxHLb3VNGZ8WGPRJPL7cbHNKN9QDcy+JccvhzqVpMJPiwgRk/Quh9WV9qDTtFuQb246iKxRQt4i1Ksqvax0NPdkvV9xtohACfHkXaQZSlsvcFzswhaxZpvcPz8BCO/KYE5zPYhsMvkJ442+NtANAAA="}}, "recorded_at": "2016-12-23T10:30:41", "request": {"method": "GET", "uri": "https://raw.githubusercontent.com/buildbot/buildbot_travis/master/CHANGES", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"]}, "body": {"string": "", "encoding": "utf-8"}}}], "recorded_with": "betamax/0.8.0"}