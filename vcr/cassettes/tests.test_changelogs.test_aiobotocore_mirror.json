{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/aiobotocore_mirror/json"}, "response": {"status": {"message": "Moved Permanently", "code": 301}, "url": "https://pypi.python.org/pypi/aiobotocore_mirror/json", "headers": {"Content-Length": ["0"], "X-Timer": ["S1482488763.073908,VS0,VE139"], "Connection": ["keep-alive"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Age": ["0"], "Fastly-Debug-Digest": ["f6050943a6214bf663d0ab08ab281ee7671b9569a9aaf984c9eada8e579caba6"], "Accept-Ranges": ["bytes"], "Date": ["Fri, 23 Dec 2016 10:26:03 GMT"], "Via": ["1.1 varnish", "1.1 varnish"], "Server": ["nginx/1.10.2"], "X-Served-By": ["cache-iad2148-IAD, cache-hhn1540-HHN"], "Location": ["/pypi/aiobotocore-mirror/json"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Cache": ["MISS, MISS"], "X-XSS-Protection": ["1; mode=block"], "X-Frame-Options": ["deny"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Cache-Hits": ["0, 0"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Content-Type-Options": ["nosniff"]}, "body": {"encoding": null, "string": ""}}, "recorded_at": "2016-12-23T10:26:03"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/aiobotocore-mirror/json"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://pypi.python.org/pypi/aiobotocore-mirror/json", "headers": {"Content-Length": ["5528"], "Connection": ["keep-alive"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Age": ["78193"], "Fastly-Debug-Digest": ["967d3a1632a9f6055118d18e12eee40161f7ec77e2fb74c0178007cd592e8c12"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish", "1.1 varnish"], "Content-Disposition": ["inline"], "X-Served-By": ["cache-iad2144-IAD, cache-hhn1540-HHN"], "X-Timer": ["S1482488763.239989,VS0,VE0"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Cache": ["HIT, HIT"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["8, 1"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=600, public"], "X-Frame-Options": ["deny"], "Date": ["Fri, 23 Dec 2016 10:26:03 GMT"], "Server": ["nginx/1.10.2"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-PYPI-LAST-SERIAL": ["2534670"], "Access-Control-Allow-Origin": ["*"]}, "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/aiobotocore-mirror\", \n        \"author\": \"nhumrich\", \n        \"author_email\": \"nick@humrich.us\", \n        \"download_url\": \"https://pypi.python.org/pypi/aiobotocore-mirror\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.0.4\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"aiobotocore\\n===========\\n.. image:: https://travis-ci.org/aio-libs/aiobotocore.svg?branch=master\\n    :target: https://travis-ci.org/aio-libs/aiobotocore\\n\\nAsync client for amazon services using botocore_ and aiohttp_/asyncio_.\\n\\nMain purpose of this library to support amazon s3 api, but other services\\nshould work (but may be with minor fixes). For now we have tested\\nonly upload/download api for s3. More tests coming soon.\\n\\n\\nInstall\\n-------\\n::\\n\\n    $ pip install -e git+https://github.com/aio-libs/aiobotocore.git@master#egg=aiobotocore\\n\\n\\nBasic Example\\n-------------\\n\\n.. code:: python\\n\\n    import asyncio\\n    import aiobotocore\\n\\n    AWS_ACCESS_KEY_ID = \\\"xxx\\\"\\n    AWS_SECRET_ACCESS_KEY = \\\"xxx\\\"\\n\\n\\n    @asyncio.coroutine\\n    def go(loop):\\n\\n        bucket = 'dataintake'\\n        filename = 'dummy.bin'\\n        folder = 'aiobotocore'\\n        key = '{}/{}'.format(folder, filename)\\n\\n        session = aiobotocore.get_session(loop=loop)\\n        client = session.create_client('s3', region_name='us-west-2',\\n                                       aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\\n                                       aws_access_key_id=AWS_ACCESS_KEY_ID)\\n        # upload object to amazon s3\\n        data = b'\\\\x01'*1024\\n        resp = yield from client.put_object(Bucket=bucket,\\n                                            Key=key,\\n                                            Body=data)\\n        print(resp)\\n\\n        # getting s3 object properties of file we just uploaded\\n        resp = yield from client.get_object_acl(Bucket=bucket, Key=key)\\n        print(resp)\\n\\n        # delete object from s3\\n        resp = yield from client.delete_object(Bucket=bucket, Key=key)\\n        print(resp)\\n\\n    loop = asyncio.get_event_loop()\\n    loop.run_until_complete(go(loop))\\n\\n\\nRun Tests\\n---------\\n\\nMake sure you have development requirements installed and your amazon key and\\nsecret accessible via environment variables:\\n\\n::\\n\\n    $ cd aiobotocore\\n    $ export AWS_ACCESS_KEY_ID=xxx\\n    $ export AWS_SECRET_ACCESS_KEY=xxx\\n    $ pip install -Ur requirements-dev.txt\\n\\nExecute tests suite:\\n\\n::\\n\\n    $ py.test -v tests\\n\\n\\nRequirements\\n------------\\n\\n* Python_ 3.3+\\n* asyncio_ or Python_ 3.4+\\n* aiohttp_\\n* botocore_\\n\\n.. _Python: https://www.python.org\\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\\n.. _botocore: https://github.com/boto/botocore\\n.. _aiohttp: https://github.com/KeepSafe/aiohttp\\n\\nChanges\\n-------\\n\\n0.0.1 (xxxx-xx-xx)\\n^^^^^^^^^^^^^^^^^^\\n\\n* Initial release\", \n        \"release_url\": \"http://pypi.python.org/pypi/aiobotocore-mirror/0.0.4\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 0, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Environment :: Web Environment\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: System Administrators\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"aiobotocore-mirror\", \n        \"license\": \"Apache 2\", \n        \"summary\": \"UNKNOWN\", \n        \"home_page\": \"https://github.com/aio-libs/aiobotocore\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-17T20:44:05\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/eb/8f/8f761663d2980338f1e9267075d4a8fbec37eb22b9758bfda68c412e54cc/aiobotocore-mirror-0.0.4.tar.gz\", \n                \"md5_digest\": \"ba3574962b16c4096824e1df93b0dc35\", \n                \"downloads\": 450, \n                \"filename\": \"aiobotocore-mirror-0.0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"eb/8f/8f761663d2980338f1e9267075d4a8fbec37eb22b9758bfda68c412e54cc/aiobotocore-mirror-0.0.4.tar.gz\", \n                \"size\": 15603\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-06-17T20:44:05\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/eb/8f/8f761663d2980338f1e9267075d4a8fbec37eb22b9758bfda68c412e54cc/aiobotocore-mirror-0.0.4.tar.gz\", \n            \"md5_digest\": \"ba3574962b16c4096824e1df93b0dc35\", \n            \"downloads\": 450, \n            \"filename\": \"aiobotocore-mirror-0.0.4.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"eb/8f/8f761663d2980338f1e9267075d4a8fbec37eb22b9758bfda68c412e54cc/aiobotocore-mirror-0.0.4.tar.gz\", \n            \"size\": 15603\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:26:03"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://github.com/aio-libs/aiobotocore"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://github.com/aio-libs/aiobotocore", "headers": {"X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Served-By": ["a4e77e68361b6b21519d8422c6815f62"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Runtime": ["0.078661"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Date": ["Fri, 23 Dec 2016 10:26:03 GMT"], "X-GitHub-Request-Id": ["54B1D78B:C3ED:CA232D9:585CFBBB"], "Server": ["GitHub.com"], "Content-Encoding": ["gzip"], "X-Content-Type-Options": ["nosniff"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:26:03 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiYzI4MjIzOWUwYzE5YWJmMWM2NWMxYjk3YzVhMjNiNGYiLCJzcHlfcmVwbyI6ImFpby1saWJzL2Fpb2JvdG9jb3JlIiwic3B5X3JlcG9fYXQiOjE0ODI0ODg3NjMsIl9jc3JmX3Rva2VuIjoid1BjT2lVenFmMWtpQkQxV2orR0pwUmQyM1kwQkZnb29QMFppOTNIQzZRMD0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--5ed2ff658992596746aced25ad7f3d0b8db62870; path=/; secure; HttpOnly"], "Content-Type": ["text/html; charset=utf-8"], "Status": ["200 OK"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-Request-Id": ["3537cc134c2caa5f94a33afd17b8c30e"], "X-XSS-Protection": ["1; mode=block"], "X-Frame-Options": ["deny"], "Cache-Control": ["no-cache"], "Transfer-Encoding": ["chunked"]}, "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:03"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://raw.githubusercontent.com/aio-libs/aiobotocore/master/CHANGES.txt"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://raw.githubusercontent.com/aio-libs/aiobotocore/master/CHANGES.txt", "headers": {"Content-Length": ["177"], "Connection": ["keep-alive"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish"], "X-GitHub-Request-Id": ["C71B4C19:56A0:460635B:585CFBBA"], "X-Cache-Hits": ["1"], "X-Timer": ["S1482488764.008823,VS0,VE0"], "Strict-Transport-Security": ["max-age=31536000"], "X-Cache": ["HIT"], "Vary": ["Authorization,Accept-Encoding"], "Expires": ["Fri, 23 Dec 2016 10:31:04 GMT"], "X-Fastly-Request-ID": ["18c6b4c29e2db02edbc6151472b091da700ea5ba"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["cache-hhn1544-HHN"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=300"], "X-Frame-Options": ["deny"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Date": ["Fri, 23 Dec 2016 10:26:04 GMT"], "Content-Encoding": ["gzip"], "Source-Age": ["1"], "Content-Type": ["text/plain; charset=utf-8"], "Access-Control-Allow-Origin": ["*"], "ETag": ["\"7eb9c17529411e2fb7cd8f4da39fed00843b16b4\""], "X-Geo-Block-List": [""]}, "body": {"base64_string": "H4sIAAAAAAAAA3WOywrCMBRE9/mKC25aoSGxL9wprvwJ4drc2tA0CUks+PcGKrgQD7OdmXOZ0D4osmqDMcEF76A4CNlVUlbyWLLbD4zt4awUKSA7ujDQQjaBG8Eb1BYCRe9sJNi1PRQpX8wRTuG16FDm5t0lN7hA8PQKUx5JDlYKUTsLkje8r2HXN9/iirGeS7a5tR83kSP/uV2tThoNoPETZh1DGIm9AU26NrrsAAAA", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:04"}]}