{"recorded_with": "betamax/0.8.0", "http_interactions": [{"recorded_at": "2016-12-23T10:27:09", "response": {"body": {"string": "", "encoding": null}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/algoliasearch_django/json", "headers": {"X-Clacks-Overhead": ["GNU Terry Pratchett"], "Age": ["0"], "Date": ["Fri, 23 Dec 2016 10:27:09 GMT"], "Server": ["nginx/1.10.2"], "X-Frame-Options": ["deny"], "X-Cache-Hits": ["0, 0"], "Connection": ["keep-alive"], "X-Cache": ["MISS, MISS"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Accept-Ranges": ["bytes"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "Location": ["/pypi/algoliasearch-django/json"], "X-Timer": ["S1482488829.423253,VS0,VE131"], "Via": ["1.1 varnish", "1.1 varnish"], "Content-Length": ["0"], "X-Permitted-Cross-Domain-Policies": ["none"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Served-By": ["cache-iad2135-IAD, cache-hhn1530-HHN"], "Fastly-Debug-Digest": ["e38d05c01d830f013ad029db8da1b5f7c5d74b88e2ab1f23cc003ecda2a9ef69"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://pypi.python.org/pypi/algoliasearch_django/json"}}, {"recorded_at": "2016-12-23T10:27:09", "response": {"body": {"string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"algolia,pyalgolia,search,backend,hosted,cloud,full-text search,faceted search,django\", \n        \"package_url\": \"http://pypi.python.org/pypi/algoliasearch-django\", \n        \"author\": \"Algolia Team\", \n        \"author_email\": \"support@algolia.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"1.2.4\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \".. raw:: html\\n\\n   <!--NO_HTML-->\\n\\nAlgolia Search for Django\\n=========================\\n\\n.. raw:: html\\n\\n   <!--/NO_HTML-->\\n\\nThis package lets you easily integrate the Algolia Search API to your\\n`Django <https://www.djangoproject.com/>`__ project. It's based on the\\n`algoliasearch-client-python <https://github.com/algolia/algoliasearch-client-python>`__\\npackage.\\n\\nYou might be interested in this sample Django application providing a\\ntypeahead.js based auto-completion and Google-like instant search:\\n`algoliasearch-django-example <https://github.com/algolia/algoliasearch-django-example>`__\\n\\nCompatible with **Python 2.7**, **Python 3.2+** and **Django 1.7+**\\n\\n|Build Status| |Coverage Status| |PyPI version|\\n\\n.. raw:: html\\n\\n   <!--NO_HTML-->\\n\\nTable of Content\\n----------------\\n\\n1. `Install <#install>`__\\n2. `Setup <#setup>`__\\n3. `Quick Start <#quick-start>`__\\n4. `Commands <#commands>`__\\n5. `Search <#search>`__\\n6. `Geo-search <#geo-search>`__\\n7. `Tags <#tags>`__\\n8. `Options <#options>`__\\n9. `Run Tests <#run-tests>`__\\n\\n.. raw:: html\\n\\n   <!--/NO_HTML-->\\n\\nInstall\\n=======\\n\\n.. code:: sh\\n\\n    pip install algoliasearch-django\\n\\nSetup\\n=====\\n\\nIn your Django settings, add ``django.contrib.algoliasearch`` to\\n``INSTALLED_APPS`` and add these two settings:\\n\\n.. code:: python\\n\\n    ALGOLIA = {\\n        'APPLICATION_ID': 'MyAppID',\\n        'API_KEY': 'MyApiKey'\\n    }\\n\\nThere are two optional settings:\\n\\n-  ``INDEX_PREFIX``: prefix all indexes. Use it to separate different\\n   applications, like ``site1_Products`` and ``site2_Products``.\\n-  ``INDEX_SUFFIX``: suffix all indexes. Use it to differenciate\\n   development and production environment, like ``Location_dev`` and\\n   ``Location_prod``.\\n-  ``AUTO_INDEXING``: automatically synchronize the models with Algolia\\n   (default to **True**).\\n\\nQuick Start\\n===========\\n\\nSimply call ``AlgoliaSearch.register()`` for each of the models you want\\nto index. A good place to do this is in your application's AppConfig\\n(generally named ``apps.py``). More info in the\\n`documentation <https://docs.djangoproject.com/en/1.8/ref/applications/>`__\\n\\n.. code:: python\\n\\n    from django.apps import AppConfig\\n    from django.contrib import algoliasearch\\n\\n    class YourAppConfig(AppConfig):\\n        name = 'your_app'\\n\\n        def ready(self):\\n            YourModel = self.get_model('your_model')\\n            algoliasearch.register(YourModel)\\n\\nAnd then, don't forget the line below in the ``__init__.py`` file of\\nyour Django application.\\n\\n.. code:: python\\n\\n    default_app_config = 'your_django_app.apps.YourAppConfig'\\n\\nBy default, all the fields of your model will be used. You can configure\\nthe index by creating a subclass of ``AlgoliaIndex``. A good place to do\\nthis is in a separate file, like ``index.py``.\\n\\n.. code:: python\\n\\n    from django.contrib.algoliasearch import AlgoliaIndex\\n\\n    class YourModelIndex(AlgoliaIndex):\\n        fields = ('name', 'date')\\n        geo_field = 'location'\\n        settings = {'attributesToIndex': ['name']}\\n        index_name = 'my_index'\\n\\nAnd then replace ``algoliasearch.register(YourModel)`` with\\n``algoliasearch.register(YourModel, YourModelIndex)``.\\n\\nCommands\\n========\\n\\n-  ``python manage.py algolia_reindex``: reindex all the registered\\n   models. This command will first send all the record to a temporary\\n   index and then moves it.\\n\\n   -  you can pass ``--model`` parameter to reindex a given model\\n\\n-  ``python manage.py algolia_applysettings``: (re)apply the index\\n   settings.\\n-  ``python manage.py algolia_clearindex``: clear the index\\n\\nSearch\\n======\\n\\nWe recommend the usage of our `JavaScript API\\nClient <https://github.com/algolia/algoliasearch-client-js>`__ to\\nperform queries directly from the end-user browser without going through\\nyour server.\\n\\nHowever, if you want to search from your backend you can use the\\n``raw_search(YourModel, 'yourQuery', params)`` method. It retrieves the\\nraw JSON answer from the API.\\n\\n.. code:: python\\n\\n    from django.contrib.algoliasearch import raw_search\\n\\n    params = { \\\"hitsPerPage\\\": 5 }\\n    raw_search(Contact, \\\"jim\\\", params)\\n\\nGeo-Search\\n==========\\n\\nUse the ``geo_field`` attribute to localize your record. ``geo_field``\\nshould be a callable that returns a tuple (latitude, longitude).\\n\\n.. code:: python\\n\\n    class Contact(models.model):\\n        name = models.CharField(max_lenght=20)\\n        lat = models.FloatField()\\n        lng = models.FloatField()\\n\\n        def location(self):\\n            return (self.lat, self.lng)\\n\\n\\n    class ContactIndex(AlgoliaIndex):\\n        fields = 'name'\\n        geo_field = 'location'\\n\\n\\n    algoliasearch.register(Contact, ContactIndex)\\n\\nTags\\n====\\n\\nUse the ``tags`` attributes to add tags to your record. It can be a\\nfield or a callable.\\n\\n.. code:: python\\n\\n    class ArticleIndex(AlgoliaIndex):\\n        tags = 'category'\\n\\nAt query time, specify ``{ tagFilters: 'tagvalue' }`` or\\n``{ tagFilters: ['tagvalue1', 'tagvalue2'] }`` as search parameters to\\nrestrict the result set to specific tags.\\n\\nOptions\\n=======\\n\\nCustom ``objectID``\\n-------------------\\n\\nYou can choose which field will be used as the ``objectID``. The field\\nshould be unique and can be a string or integer. By default, we use the\\n``pk`` field of the model.\\n\\n.. code:: python\\n\\n    class ArticleIndex(AlgoliaIndex):\\n        custom_objectID = 'post_id'\\n\\nCustom index name\\n-----------------\\n\\nYou can customize the index name. By default, the index name will be the\\nname of the model class.\\n\\n.. code:: python\\n\\n    class ContactIndex(algoliaindex):\\n        index_name = 'Entreprise'\\n\\nIndex settings\\n--------------\\n\\nWe provide many ways to configure your index allowing you to tune your\\noverall index relevancy. All the configuration is explained on `our\\nwebsite <https://www.algolia.com/doc/python#Settings>`__.\\n\\n.. code:: python\\n\\n    class ArticleIndex(AlgoliaIndex):\\n        settings = {\\n            'attributesToIndex': ['name', 'description', 'url'],\\n            'customRanking': ['desc(vote_count)', 'asc(name)']\\n        }\\n\\nRestrict indexing to a subset of your data\\n------------------------------------------\\n\\nYou can add constraints controlling if a record must be indexed or not.\\n``should_index`` should be a callable that returns a boolean.\\n\\n.. code:: python\\n\\n    class Contact(models.model):\\n        name = models.CharField(max_lenght=20)\\n        age = models.IntegerField()\\n\\n        def is_adult(self):\\n            return (self.age >= 18)\\n\\n    class ContactIndex(AlgoliaIndex):\\n        should_index = 'is_adult'\\n\\n.. raw:: html\\n\\n   <!--NO_HTML-->\\n\\nRun Tests\\n=========\\n\\nTo run the tests, first find your Algolia application id and Admin API\\nkey (found on the Credentials page).\\n\\n.. code:: shell\\n\\n    ALGOLIA_APPLICATION_ID={APPLICATION_ID} ALGOLIA_API_KEY={ADMIN_API_KEY} tox\\n\\n.. raw:: html\\n\\n   <!--/NO_HTML-->\\n\\n.. |Build Status| image:: https://travis-ci.org/algolia/algoliasearch-django.svg?branch=master\\n   :target: https://travis-ci.org/algolia/algoliasearch-django\\n.. |Coverage Status| image:: https://coveralls.io/repos/algolia/algoliasearch-django/badge.svg?branch=master\\n   :target: https://coveralls.io/r/algolia/algoliasearch-django\\n.. |PyPI version| image:: https://badge.fury.io/py/algoliasearch-django.svg?branch=master\\n   :target: http://badge.fury.io/py/algoliasearch-django\", \n        \"release_url\": \"http://pypi.python.org/pypi/algoliasearch-django/1.2.4\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 5, \n        \"classifiers\": [\n            \"Environment :: Web Environment\", \n            \"Framework :: Django\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 3\", \n            \"Topic :: Internet :: WWW/HTTP\"\n        ], \n        \"name\": \"algoliasearch-django\", \n        \"bugtrack_url\": \"\", \n        \"license\": \"MIT License\", \n        \"summary\": \"Algolia Search integration for Django\", \n        \"home_page\": \"https://github.com/algolia/algoliasearch-django\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"1.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-06-19T11:10:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/63/f7/56a3264aa4c66a17895690ee65a31dee10eaf08a3ff178acc271eb3cfdcf/algoliasearch-django-1.1.0.tar.gz\", \n                \"md5_digest\": \"fa264ba83e8ec87cf8f1148425f55393\", \n                \"downloads\": 2362, \n                \"filename\": \"algoliasearch-django-1.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"63/f7/56a3264aa4c66a17895690ee65a31dee10eaf08a3ff178acc271eb3cfdcf/algoliasearch-django-1.1.0.tar.gz\", \n                \"size\": 8132\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-06-19T11:10:06\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/94/31/2d1c5bbcd584fcab42152dd743a1b94b85b2ba8fd5364ca4407b7e5c5d21/algoliasearch_django-1.1.0-py2.py3-none-any.whl\", \n                \"md5_digest\": \"483899671ca16a4e4f3812961144ed4b\", \n                \"downloads\": 973, \n                \"filename\": \"algoliasearch_django-1.1.0-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"94/31/2d1c5bbcd584fcab42152dd743a1b94b85b2ba8fd5364ca4407b7e5c5d21/algoliasearch_django-1.1.0-py2.py3-none-any.whl\", \n                \"size\": 13174\n            }\n        ], \n        \"1.2.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-04-15T16:13:39\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/d3/cf/9f7e45082e9398486bab13ffb46aa1e4a76194ce6905ec904e03deea0ec8/algoliasearch-django-1.2.4.tar.gz\", \n                \"md5_digest\": \"0c76e740bfb5743bae651fcc700c5eff\", \n                \"downloads\": 155, \n                \"filename\": \"algoliasearch-django-1.2.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"d3/cf/9f7e45082e9398486bab13ffb46aa1e4a76194ce6905ec904e03deea0ec8/algoliasearch-django-1.2.4.tar.gz\", \n                \"size\": 9792\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-04-15T16:13:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/7c/4d/4775c5203ea7dc2ca3ffc2d0dd3565882409d75efdacd19a239e2995f60f/algoliasearch_django-1.2.4-py2.py3-none-any.whl\", \n                \"md5_digest\": \"c9b0df20fba9bb7efb1d2e1f7f34a151\", \n                \"downloads\": 829, \n                \"filename\": \"algoliasearch_django-1.2.4-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"7c/4d/4775c5203ea7dc2ca3ffc2d0dd3565882409d75efdacd19a239e2995f60f/algoliasearch_django-1.2.4-py2.py3-none-any.whl\", \n                \"size\": 14381\n            }\n        ], \n        \"1.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-03T10:15:13\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/81/f3/9347662abffb176b3168843c63f2a69c0544f8f59ee21d752b5809c52851/algoliasearch-django-1.2.2.tar.gz\", \n                \"md5_digest\": \"f5ced5ddac9a7d24fdab25b150941c3b\", \n                \"downloads\": 472, \n                \"filename\": \"algoliasearch-django-1.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"81/f3/9347662abffb176b3168843c63f2a69c0544f8f59ee21d752b5809c52851/algoliasearch-django-1.2.2.tar.gz\", \n                \"size\": 9481\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-03T10:15:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/62/a0/d94a92a6374407ed8d91eff8f97226ae34a47d8707ddac2b4b116f4b9241/algoliasearch_django-1.2.2-py2.py3-none-any.whl\", \n                \"md5_digest\": \"7e69cfec6238bd368d2a26d6a4e718b2\", \n                \"downloads\": 531, \n                \"filename\": \"algoliasearch_django-1.2.2-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"62/a0/d94a92a6374407ed8d91eff8f97226ae34a47d8707ddac2b4b116f4b9241/algoliasearch_django-1.2.2-py2.py3-none-any.whl\", \n                \"size\": 14021\n            }\n        ], \n        \"1.2.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-15T15:55:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f6/55/2cf0d38ea757a61eb449cdacb3109647dbbef99c09087dd4ab292a868b51/algoliasearch-django-1.2.3.tar.gz\", \n                \"md5_digest\": \"e152dd202fef8928d4d55ce80f5b73fc\", \n                \"downloads\": 465, \n                \"filename\": \"algoliasearch-django-1.2.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f6/55/2cf0d38ea757a61eb449cdacb3109647dbbef99c09087dd4ab292a868b51/algoliasearch-django-1.2.3.tar.gz\", \n                \"size\": 9679\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-12-15T15:55:53\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/be/aa/9e3a46ec9134eac55aead8c992c2ec7f90dc354072b582a5e068099d3aba/algoliasearch_django-1.2.3-py2.py3-none-any.whl\", \n                \"md5_digest\": \"97be0172b2f2b620fc1da97c8a1ae996\", \n                \"downloads\": 603, \n                \"filename\": \"algoliasearch_django-1.2.3-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"be/aa/9e3a46ec9134eac55aead8c992c2ec7f90dc354072b582a5e068099d3aba/algoliasearch_django-1.2.3-py2.py3-none-any.whl\", \n                \"size\": 14260\n            }\n        ], \n        \"1.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-07-04T13:06:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ed/85/bcaf957b46aed26b3ec8637eb0f6f3f5cfacc446cade20c1851d1983c03b/algoliasearch-django-1.2.0.tar.gz\", \n                \"md5_digest\": \"86864bd5eac0f06cd5fe45b8105a9445\", \n                \"downloads\": 892, \n                \"filename\": \"algoliasearch-django-1.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ed/85/bcaf957b46aed26b3ec8637eb0f6f3f5cfacc446cade20c1851d1983c03b/algoliasearch-django-1.2.0.tar.gz\", \n                \"size\": 8664\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-07-04T13:06:07\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/65/95/9cb272227a585d7e8a84b10e08706e604d63ccdde8b8cd6072c473916b9c/algoliasearch_django-1.2.0-py2.py3-none-any.whl\", \n                \"md5_digest\": \"75eaeb9c51df866dd297c8999c455b6b\", \n                \"downloads\": 858, \n                \"filename\": \"algoliasearch_django-1.2.0-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"65/95/9cb272227a585d7e8a84b10e08706e604d63ccdde8b8cd6072c473916b9c/algoliasearch_django-1.2.0-py2.py3-none-any.whl\", \n                \"size\": 13455\n            }\n        ], \n        \"1.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-07-09T08:54:56\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/85/84/35c9f270c77cfcf4b2bf5b1904ac5e4fe081a9ab3b38786355bf3e684eae/algoliasearch-django-1.2.1.tar.gz\", \n                \"md5_digest\": \"592e33525bdabe1e52addea03a9aa3e4\", \n                \"downloads\": 1019, \n                \"filename\": \"algoliasearch-django-1.2.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"85/84/35c9f270c77cfcf4b2bf5b1904ac5e4fe081a9ab3b38786355bf3e684eae/algoliasearch-django-1.2.1.tar.gz\", \n                \"size\": 9431\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-07-09T08:55:00\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/31/41/ae6ea5deabad330b325ee32c0ab72ad1d549c978ab7cb00fd5d29a5aed1d/algoliasearch_django-1.2.1-py2.py3-none-any.whl\", \n                \"md5_digest\": \"f2760aeaa15ce277ed4766829991cc3c\", \n                \"downloads\": 189605, \n                \"filename\": \"algoliasearch_django-1.2.1-py2.py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"31/41/ae6ea5deabad330b325ee32c0ab72ad1d549c978ab7cb00fd5d29a5aed1d/algoliasearch_django-1.2.1-py2.py3-none-any.whl\", \n                \"size\": 13974\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-04-15T16:13:39\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/d3/cf/9f7e45082e9398486bab13ffb46aa1e4a76194ce6905ec904e03deea0ec8/algoliasearch-django-1.2.4.tar.gz\", \n            \"md5_digest\": \"0c76e740bfb5743bae651fcc700c5eff\", \n            \"downloads\": 155, \n            \"filename\": \"algoliasearch-django-1.2.4.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"d3/cf/9f7e45082e9398486bab13ffb46aa1e4a76194ce6905ec904e03deea0ec8/algoliasearch-django-1.2.4.tar.gz\", \n            \"size\": 9792\n        }, \n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-04-15T16:13:46\", \n            \"comment_text\": \"\", \n            \"python_version\": \"2.7\", \n            \"url\": \"https://pypi.python.org/packages/7c/4d/4775c5203ea7dc2ca3ffc2d0dd3565882409d75efdacd19a239e2995f60f/algoliasearch_django-1.2.4-py2.py3-none-any.whl\", \n            \"md5_digest\": \"c9b0df20fba9bb7efb1d2e1f7f34a151\", \n            \"downloads\": 829, \n            \"filename\": \"algoliasearch_django-1.2.4-py2.py3-none-any.whl\", \n            \"packagetype\": \"bdist_wheel\", \n            \"path\": \"7c/4d/4775c5203ea7dc2ca3ffc2d0dd3565882409d75efdacd19a239e2995f60f/algoliasearch_django-1.2.4-py2.py3-none-any.whl\", \n            \"size\": 14381\n        }\n    ]\n}", "encoding": "UTF-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/algoliasearch-django/json", "headers": {"X-Frame-Options": ["deny"], "X-PYPI-LAST-SERIAL": ["2534563"], "Access-Control-Allow-Origin": ["*"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Accept-Ranges": ["bytes"], "X-Content-Type-Options": ["nosniff"], "X-Timer": ["S1482488829.581907,VS0,VE0"], "Via": ["1.1 varnish", "1.1 varnish"], "X-Served-By": ["cache-iad2151-IAD, cache-hhn1530-HHN"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Age": ["83891"], "Date": ["Fri, 23 Dec 2016 10:27:09 GMT"], "Fastly-Debug-Digest": ["3eb208a5b9a81720658168c266807c0d68d75d2c25450804b7dd50afc1dd91d0"], "Server": ["nginx/1.10.2"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Content-Length": ["19790"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Cache-Hits": ["1, 1"], "Content-Disposition": ["inline"], "X-Cache": ["HIT, HIT"], "Connection": ["keep-alive"], "Cache-Control": ["max-age=600, public"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://pypi.python.org/pypi/algoliasearch-django/json"}}, {"recorded_at": "2016-12-23T10:27:10", "response": {"body": {"base64_string": "", "encoding": "utf-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/algolia/algoliasearch-django", "headers": {"Content-Encoding": ["gzip"], "Date": ["Fri, 23 Dec 2016 10:27:10 GMT"], "Server": ["GitHub.com"], "X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["54B1D78B:C3EB:8FBE91F:585CFBFD"], "Transfer-Encoding": ["chunked"], "X-XSS-Protection": ["1; mode=block"], "Vary": ["X-PJAX", "Accept-Encoding"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Request-Id": ["d86293649e24a762bfa28bf08649daa7"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-Content-Type-Options": ["nosniff"], "Status": ["200 OK"], "X-Runtime": ["0.100740"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["73ab9dfb66867a4ebbe0dc0967441cd8"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:27:10 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiM2Q3MGM0NTYwNzBiODk0NGViYmMxNzFlMmQwOWY5YTMiLCJzcHlfcmVwbyI6ImFsZ29saWEvYWxnb2xpYXNlYXJjaC1kamFuZ28iLCJzcHlfcmVwb19hdCI6MTQ4MjQ4ODgzMCwiX2NzcmZfdG9rZW4iOiJKdzZMdVFFQnZYcTVVM0puWmtFeUw5dDV1aUZWd2ljSzFPeUpza05LYVM0PSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--2d89e92553afdec263f14d57834db30f96eb604d; path=/; secure; HttpOnly"], "Cache-Control": ["no-cache"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://github.com/algolia/algoliasearch-django"}}, {"recorded_at": "2016-12-23T10:27:10", "response": {"body": {"base64_string": "H4sIAAAAAAAAA1WSzW7bMBCE736KPReQIDlOgxwD20kNpDXQNEGBwnCW1FrahCJVchnbffpK8k/kmyRyPs3M7vTb3Y+H+ePyYTQaZ/nXJJsk+TXk6TidjAC+wJ/7xe8V3PMOkkSh6CoJ/I/AbcAT24J2oF1doy3AWZi9oS1dq77paddJPj7Rrga0aUX6HaRCgZLcesNkCtBoDCpDLVeitwGCq0kqtiV8oOHik5hd9cTxkOjqBoUVG5Y9bNHbTrdlqT493R4J2U2S3faE/EC4m81W8FqSrP9G8vtA8gob56H0yBb6kB2tcSEc/zDQLRvhNrk4KAi18AcKAUZxyUk4sPmCnl0MoGIZBm4mvZvscPHn/PvyZb4CNKUzjGsV2RQXTafwHOh8fhoD2yCERXqgTPuxruCJRFoPoQtUo6TwiEGOL8BtycLGQIhN47zQSd0ne7YsIBRk+PEXlu2kGtSXLUydLbgrAg1c5u6Pnwi9rs7CblUU6neyxaCche3nDDoGcfXaqTfSspgBinhWUWhwd77TdCy+8m4Lat8+0HkVtxVZiKGb2mAl/wOAU1ql6wIAAA==", "encoding": "utf-8"}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/algolia/algoliasearch-django/master/ChangeLog", "headers": {"Content-Encoding": ["gzip"], "Expires": ["Fri, 23 Dec 2016 10:32:10 GMT"], "ETag": ["\"e0fe1ee67b3eeffa677dd5cb15a5bc5a2893a886\""], "X-Frame-Options": ["deny"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "X-Cache": ["MISS"], "X-Fastly-Request-ID": ["243b8e35df7a30ff16a59704e763d530c719fa8b"], "Accept-Ranges": ["bytes"], "X-Content-Type-Options": ["nosniff"], "X-Geo-Block-List": [""], "Cache-Control": ["max-age=300"], "Via": ["1.1 varnish"], "Access-Control-Allow-Origin": ["*"], "X-Served-By": ["cache-hhn1544-HHN"], "Content-Type": ["text/plain; charset=utf-8"], "Date": ["Fri, 23 Dec 2016 10:27:10 GMT"], "Source-Age": ["0"], "X-XSS-Protection": ["1; mode=block"], "Vary": ["Authorization,Accept-Encoding"], "X-GitHub-Request-Id": ["C71B4C27:074F:5BAD847:585CFBFE"], "Content-Length": ["433"], "X-Cache-Hits": ["0"], "X-Timer": ["S1482488830.368334,VS0,VE130"], "Connection": ["keep-alive"], "Strict-Transport-Security": ["max-age=31536000"]}}, "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"User-Agent": ["python-requests/2.12.4"], "Connection": ["keep-alive"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"]}, "uri": "https://raw.githubusercontent.com/algolia/algoliasearch-django/master/ChangeLog"}}]}