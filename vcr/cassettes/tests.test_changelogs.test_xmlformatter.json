{"http_interactions": [{"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/xmlformatter/json", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"Cache-Control": ["max-age=600, public"], "Fastly-Debug-Digest": ["e7750ea422db2a3d55d7357fbe4821b79017ff287707ac9ff81e74eb5fb83872"], "Via": ["1.1 varnish", "1.1 varnish"], "Connection": ["keep-alive"], "X-Cache-Hits": ["1, 0"], "Date": ["Fri, 23 Dec 2016 10:45:41 GMT"], "X-Served-By": ["cache-iad2127-IAD, cache-hhn1535-HHN"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Access-Control-Allow-Origin": ["*"], "X-Timer": ["S1482489941.183408,VS0,VE86"], "X-XSS-Protection": ["1; mode=block"], "X-PYPI-LAST-SERIAL": ["2536261"], "X-Cache": ["HIT, MISS"], "Accept-Ranges": ["bytes"], "Content-Disposition": ["inline"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Server": ["nginx/1.10.2"], "Age": ["4510"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Length": ["10765"], "X-Frame-Options": ["deny"], "X-Content-Type-Options": ["nosniff"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/xmlformatter/json", "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/xmlformatter\", \n        \"author\": \"P. Andreas Moeller\", \n        \"author_email\": \"kontakt@pamoller.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.1.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"============\\nxmlformatter\\n============\\n\\n`xmlformatter <http://pamoller.com/xmlformatter.html>`_ is an Open Source Python package, which provides formatting of XML documents. *It is the replacement for the Python 2 package XmlFormatter, which has been removed from PyPi completely (see Notes)*. xmlformatter differs from others formatters by *handling whitespaces by a distinct set of formatting rules* - formatting element content by a object style and mixed content by a text style. You may find xmlformatter useful for corrections and presentations. In addition xmlformatter comes with a wrapper script named xmlformat.\\n\\n================\\nFormatting Rules\\n================\\n\\nxmlformatter treats the element content from the following example as a object. The elements are associated with containers, like complex, or properties names, like real and imaginary. Text nodes are associated with property values, like 4.4E+12. Leading and trailing whitespaces are meaningless in this scenario like sequences of whitespaces. Leading and trailing whitespaces will be remove, sequences of whitespaces will be collapsed.\\n\\n::\\n\\n    <complex>\\n      <real>  4.4E+12</real>\\n     <imaginary>5.4E-11\\n       </imaginary>\\n    </complex>\\n\\nThe element content from the example above can be formatted by xmlformat:\\n\\n::\\n\\n    $ xmlformat ele.xml\\n\\nThe following output shows the formatted XML document. xmlformatter has removed leading and trailing whitespaces from the text nodes and has indented the child elements equal. This formatting style is called object style.\\n\\n::\\n\\n    <complex>\\n      <real>4.4E+12</real>\\n      <imaginary>5.4E-11</imaginary>\\n    </complex>\\n\\nxmlformatter treats the mixed content from the following example as a literal text with some markup. The outer element enclose poem encloses the text. The inline element em gives a text snippet a special meaning. Leading and trailing whitespaces enclosed by inline elements are misplaced. They will be adopted by the previous or following text node. Note: xmlformatter may insert a text node if necessary. Even sequences of whitespaces will be collapsed:\\n\\n::\\n\\n    <poem> Es<em>   war</em> einmal und <em>ist  </em>nicht mehr...</poem>\\n\\nThe following output shows the formatted XML document. xmlfromatter has removed leading and trailing whitespaces and has collapsed sequences of whitespaces. This formatting style is called text style.\\n\\n::\\n\\n    <poem>Es <em>war</em> einmal und <em>ist</em> nicht mehr...</poem>\\n\\nBoth styles are used while formatting a XML document. The formatting rules are:    \\n\\nA: Surrounding whitespaces are removed from element content.    \\n\\nB: Leading whitespaces are removed from element content.    \\n\\nC: Trailing whitespaces are removed from element content.    \\n\\nD: Leading whitespaces of inline elements are put to preceding text (or inserted) if necessary within mixed content.    \\n\\nE: Trailing whitespaces of inline elements are put to following text (or inserted) if necessary within mixed content.    \\n\\nF: Sequences of whitespaces (n>2) are replaced by a single blank \\\" \\\" within element and mixed content.    \\n\\nG: Linebreak and whitespace are used to indent elements within elements content.\\n\\nThe following example shows the described whitespaces by their labels within a XML document:\\n\\n::\\n\\n    <root>AAAA\\n    AAAA<number>BBBB4.4E+12CCC</number>AAAA\\n    AAAA<poem>BBBBEs<em>DDDDwar</em> einmal und <em>istEEEE</em>nicht mehrF\\n    FFFFein <strong>riesengro\\u00dfer</strong><em>DDDDTeddyb\\u00e4r</em>,F \\n    der a\\u00dfFFFFdie <em>MilchEEEE</em>und trank das BrotFFFF\\n    und als er starb da <strong>war erEEEE</strong><em>tot</em>.CCCC</poem>AAAA\\n    </root>\\n\\nThe following output shows the formatted XML document:\\n\\n::\\n\\n    <root>\\n        <number>4.4E+12</number>\\n        <poem>Es <em>war</em> einmal und <em>ist</em> nicht mehr ein <strong>riesengro\\u00dfer</strong> <em>Teddyb\\u00e4r</em>, der a\\u00df die <em>Milch</em>und trank das Brot und als er starb da <strong>war er</strong> <em>tot</em>.</poem>\\n    </root>\\n\\n=====\\nClass\\n=====\\n\\n::\\n\\n    class xmlformatter.Formatter(compress ::= False, indent ::= 2, indent_char ::= \\\" \\\", inline ::= True, encoding_input ::= None, encoding_output ::= None, preserve ::= [ ])\\n\\nThe Formatter class can be used to format XML documents in scripts. By default all parts of the XML document will formatted. All descendants of elements listed by preserve are left unformatted. Setting the boolean property compress to True suppresses the indenting given by the indent and indent_char properties. Without a value given to encoding_input xmlformatter trys to determine the encoding from the XML document. On failure it use UTF-8 as default. encoding_output advises xmlformatter to encode the output explicit by the given value. Otherwise xmlformatter use the inpurt encoding. Setting the boolean property inline to False suppresses inline formatting. By default element content will be formatted everywhere - also within mixed content. The following example shows the usage of the xmlfromatter class:\\n\\n::\\n\\n    import xmlformatter\\n    \\n    formatter = xmlformatter.Formatter(indent=\\\"1\\\", indent_char=\\\"\\\\t\\\", encoding_output=\\\"ISO-8859-1\\\", preserve=[\\\"literal\\\"])\\n    formatter.format_file(\\\"/home/pa/doc.xml\\\")\\n\\nThe example formats the XML document in /home/pa/doc.xml, preserving the element literal, indenting by the tab character and output in ISO-8859-1 encoding.\\n\\n=======\\nMembers\\n=======\\n\\n::\\n\\n    compress ::= False\\n\\nMinify the XML document.\\n\\n::\\n\\n    correct ::= True\\n\\nApply formatting rules to whitespaces.\\n\\n::\\n\\n    indent ::= 2\\n\\nIndent a child element in element content n-times by indent_char.\\n\\n::\\n\\n    indent_char ::= \\\" \\\"\\n\\nIndent a child element by this string.\\n\\n::\\n\\n    input_encoding ::= None\\n\\nAssume the XML document encoded by a not None value.\\n\\n::\\n\\n    output_encoding ::= None\\n\\nEncode the formatted XML document by a not None value.\\n\\n::\\n\\n    preserve ::= [ ]\\n\\nSkip formatting for all elements listed in preserve and all their descendants.\\n\\n=======\\nMethods\\n=======\\n\\n::\\n\\n     format_file(path)\\n\\nFormat a XML document given by a path.\\n\\n::\\n\\n     format_string(xmldoc)\\n\\nFormat a XML document given by a string.\\n\\n===\\nCmd\\n===\\n\\n::\\n\\n    xmlformat [--preserve \\\"pre,literal\\\"] [--compress] [--indent num] [--indent-char char]\\n              [--outfile file] [--encoding enc] [--outencoding enc] [--disable-inlineformatting] \\n              [--dispable-correction] [--help] < --infile file | file | - >\\n\\nxmlformat can read from STDIN, like:\\n\\n::\\n\\n    $ cat /home/pa/doc.xml | xmlformat -\\n\\n=====\\nNotes\\n=====\\n\\nRemove XmlFormatter before installing xmlformatter:\\n\\n::\\n\\n    $ pip uninstall XmlFormatter\\n\\nAfter reinstallation replace the string \\\"formatter.formatter\\\" by \\\"formatter\\\", \\\"preserving\\\" by \\\"preserve\\\" and \\\"indentChar\\\" by \\\"indent_char\\\" inside your scripts carefully. To reach compatibility with XmlFormatter call xmlformat with --disable-inlineformatting or use inline=False in your scripts.\", \n        \"release_url\": \"http://pypi.python.org/pypi/xmlformatter/0.1.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"classifiers\": [\n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.6\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.2\", \n            \"Topic :: Text Processing :: Markup :: XML\"\n        ], \n        \"name\": \"xmlformatter\", \n        \"bugtrack_url\": null, \n        \"license\": \"MIT\", \n        \"summary\": \"Format and compress XML documents\", \n        \"home_page\": \"http://pamoller.com/xmlformatter.html\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-01-28T18:58:25\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a3/f7/e54251d55ae1d742d8ecb10420ee91bbbf1b0d6c6fe867ea9a7385935ce2/xmlformatter-0.1.0.tar.gz\", \n                \"md5_digest\": \"a8d343583b543cdb20fb073d04184e14\", \n                \"downloads\": 2107, \n                \"filename\": \"xmlformatter-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a3/f7/e54251d55ae1d742d8ecb10420ee91bbbf1b0d6c6fe867ea9a7385935ce2/xmlformatter-0.1.0.tar.gz\", \n                \"size\": 14133\n            }\n        ], \n        \"0.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-01-29T16:52:23\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ba/c6/6f958639e34957aa986041b4e474bbbf5135eeb59dcb788e41719175d48c/xmlformatter-0.1.1.tar.gz\", \n                \"md5_digest\": \"af5cd269580026a460105e532082975d\", \n                \"downloads\": 11836, \n                \"filename\": \"xmlformatter-0.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ba/c6/6f958639e34957aa986041b4e474bbbf5135eeb59dcb788e41719175d48c/xmlformatter-0.1.1.tar.gz\", \n                \"size\": 14146\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2014-01-29T16:52:23\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/ba/c6/6f958639e34957aa986041b4e474bbbf5135eeb59dcb788e41719175d48c/xmlformatter-0.1.1.tar.gz\", \n            \"md5_digest\": \"af5cd269580026a460105e532082975d\", \n            \"downloads\": 11836, \n            \"filename\": \"xmlformatter-0.1.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"ba/c6/6f958639e34957aa986041b4e474bbbf5135eeb59dcb788e41719175d48c/xmlformatter-0.1.1.tar.gz\", \n            \"size\": 14146\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:45:41"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "http://pamoller.com/xmlformatter.html", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"ETag": ["\"265b0bb7-2bd2-520ca1035d7c0\""], "Keep-Alive": ["timeout=3, max=100"], "Content-Length": ["11218"], "Last-Modified": ["Mon, 28 Sep 2015 07:58:31 GMT"], "Accept-Ranges": ["bytes"], "Content-Type": ["text/html"], "Connection": ["Keep-Alive"], "Server": ["Apache/2.2.31 (Unix)"], "Date": ["Fri, 23 Dec 2016 10:45:41 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "http://pamoller.com/xmlformatter.html", "body": {"encoding": "ISO-8859-1", "string": "<!DOCTYPE html><html lang=\"de\"><head><meta charset=\"UTF-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/><meta name=\"HandheldFriendly\" content=\"True\"/><meta name=\"MobileOptimized\" content=\"320\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"alternate icon\" type=\"image/png\" href=\"images/logo.png\"/><link rel=\"stylesheet\" href=\"css/styles.css\"/><script>var pagetype = 'content';</script><script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script><script src=\"js/script.js\"></script><link rel=\"stylesheet\" href=\"css/prettify.css\"/><script src=\"js/prettify.js\"></script><!--[if lt IE 9]><script src=\"//html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]--><title>xmlformatter</title></head><body class=\"contentpage\"><div id=\"page\"><header id=\"main-header\"><nav id=\"navigation\"><ul><li><a href=\"/\">Startseite</a></li><li><a rel=\"nofollow\" href=\"Kontakt.html\">Kontakt</a></li></ul></nav></header><aside class=\"spec\">\n    <p id=\"idp582596164\">Name: xmlformatter</p>\n    <p id=\"idp582613684\">Language: Python (2, 3)</p>\n    <p id=\"idp582693164\">Author: P. A. M\u00c3\u00b6ller, <a id=\"idp582868740\" href=\"http://pamoller.com\">pamoller.com</a></p>\n    <p id=\"idp582679084\">License: MIT (Open Source)</p>\n    <p id=\"idp582673668\">First Published: 01/2014</p>\n    <p id=\"idp582793484\">Acutal Version: 0.1.0</p>\n    <p id=\"idp582771332\">\n       <a id=\"idp582744244\" href=\"http://pamoller.com/xmlformatter.html\">Home</a>\n       <a id=\"idp582678332\" href=\"http://pypi.python.org/pypi/xmlformatter/\">Download</a>\n       <a id=\"idp582643852\" href=\"https://github.com/pamoller/xmlformatter\">Sources</a></p>      \n    </aside><main><article><header id=\"article-header\"><hgroup><h1 id=\"title\">xmlformatter</h1></hgroup></header><p id=\"idp582686924\"><a id=\"idp582686988\" href=\"http://pamoller.com/xmlformatter.html\">xmlformatter</a> is an Open Source Python package, which provides formatting of XML documents. <em>It is the replacement for the Python 2 package XmlFormatter, which has been removed from PyPi completely (see Notes)</em>. xmlformatter differs from others formatters by <em>handling whitespaces by a distinct set of formatting rules</em> - formatting element content by a object style and mixed content by a text style. You may find xmlformatter useful for corrections and presentations. In addition xmlformatter comes with a wrapper script named xmlformat.</p><section id=\"idp582698812\"><h2>Formatting Rules</h2>\n  <p id=\"idp582736084\">xmlformatter treats the element content from the following example as a object. The elements are associated with containers, like complex, or properties names, like real and imaginary. Text nodes are associated with property values, like 4.4E+12. Leading and trailing whitespaces are meaningless in this scenario like sequences of whitespaces. Leading and trailing whitespaces will be remove, sequences of whitespaces will be collapsed.</p>\n<pre class=\"prettyprint\"><code class=\"lang-xml\">&lt;complex&gt;\n  &lt;real&gt;  4.4E+12&lt;/real&gt;\n &lt;imaginary&gt;5.4E-11\n   &lt;/imaginary&gt;\n&lt;/complex&gt;</code></pre>\n<p id=\"idp582752092\">The element content from the example above can be formatted by xmlformat:</p>\n<pre class=\"prettyprint\"><code class=\"lang-bash\">$ xmlformat ele.xml</code></pre>\n<p id=\"idp582892676\">The following output shows the formatted XML document. xmlformatter has removed leading and trailing whitespaces from the text nodes and has indented the child elements equal. This formatting style is called object style.</p>\n<pre class=\"prettyprint\"><code class=\"lang-xml\">&lt;complex&gt;\n  &lt;real&gt;4.4E+12&lt;/real&gt;\n  &lt;imaginary&gt;5.4E-11&lt;/imaginary&gt;\n&lt;/complex&gt;</code></pre>\n<p id=\"idp582898116\">xmlformatter treats the mixed content from the following example as a literal text with some markup. The outer element enclose poem encloses the text. The inline element em gives a text snippet a special meaning. Leading and trailing whitespaces enclosed by inline elements are misplaced. They will be adopted by the previous or following text node. Note: xmlformatter may insert a text node if necessary. Even sequences of whitespaces will be collapsed:</p>\n<pre class=\"prettyprint\"><code class=\"lang-xml\">&lt;poem&gt; Es&lt;em&gt;   war&lt;/em&gt; einmal und &lt;em&gt;ist  &lt;/em&gt;nicht mehr...&lt;/poem&gt;</code></pre>\n<p id=\"idp582893500\">The following output shows the formatted XML document. xmlfromatter has removed leading and trailing whitespaces and has collapsed sequences of whitespaces. This formatting style is called text style.</p>\n<pre class=\"prettyprint\"><code class=\"lang-xml\">&lt;poem&gt;Es &lt;em&gt;war&lt;/em&gt; einmal und &lt;em&gt;ist&lt;/em&gt; nicht mehr...&lt;/poem&gt;</code></pre>\n\n<p id=\"idp582951740\">Both styles are used while formatting a XML document. The formatting rules are:</p>\n<ul>\n<li><p id=\"idp582995068\">A: Surrounding whitespaces are removed from element content.</p></li>\n<li><p id=\"idp582995396\">B: Leading whitespaces are removed from element content.</p></li>\n<li><p id=\"idp582995716\">C: Trailing whitespaces are removed from element content.</p></li>\n<li><p id=\"idp582996036\">D: Leading whitespaces of inline elements are put to preceding text (or inserted) if necessary within mixed content.</p></li>\n<li><p id=\"idp582996420\">E: Trailing whitespaces of inline elements are put to following text (or inserted) if necessary within mixed content.</p></li>\n<li><p id=\"idp582996804\">F: Sequences of whitespaces (n&gt;2) are replaced by a single blank \" \" within element and mixed content.</p></li>\n<li><p id=\"idp582997172\">G: Linebreak and whitespace are used to indent elements within elements content.</p></li>\n</ul>\n<p id=\"idp582997516\">The following example shows the described whitespaces by their labels within a XML document:</p>\n<pre class=\"prettyprint\"><code class=\"lang-xml\">&lt;root&gt;AAAA\nAAAA&lt;number&gt;BBBB4.4E+12CCC&lt;/number&gt;AAAA\nAAAA&lt;poem&gt;BBBBEs&lt;em&gt;DDDDwar&lt;/em&gt; einmal und &lt;em&gt;istEEEE&lt;/em&gt;nicht mehrF\nFFFFein &lt;strong&gt;riesengro\u00c3\u009fer&lt;/strong&gt;&lt;em&gt;DDDDTeddyb\u00c3\u00a4r&lt;/em&gt;,F \nder a\u00c3\u009fFFFFdie &lt;em&gt;MilchEEEE&lt;/em&gt;und trank das BrotFFFF\nund als er starb da &lt;strong&gt;war erEEEE&lt;/strong&gt;&lt;em&gt;tot&lt;/em&gt;.CCCC&lt;/poem&gt;AAAA\n&lt;/root&gt;</code></pre>\n<p id=\"idp582998060\">The following output shows the formatted XML document:</p>\n<pre class=\"prettyprint\"><code class=\"lang-xml\">&lt;root&gt;\n    &lt;number&gt;4.4E+12&lt;/number&gt;\n    &lt;poem&gt;Es &lt;em&gt;war&lt;/em&gt; einmal und &lt;em&gt;ist&lt;/em&gt; nicht mehr ein &lt;strong&gt;riesengro\u00c3\u009fer&lt;/strong&gt; &lt;em&gt;Teddyb\u00c3\u00a4r&lt;/em&gt;, der a\u00c3\u009f die &lt;em&gt;Milch&lt;/em&gt;und trank das Brot und als er starb da &lt;strong&gt;war er&lt;/strong&gt; &lt;em&gt;tot&lt;/em&gt;.&lt;/poem&gt;\n&lt;/root&gt;</code></pre>\n</section><section id=\"idp582999052\">\n   <h2>Class</h2>\n   <div class=\"funcsynopsis\"><code><code>class</code> <strong>xmlformatter.Formatter</strong>(compress ::= False, indent ::= 2, indent_char ::= \" \", inline ::= True, encoding_input ::= None, encoding_output ::= None, preserve ::= [ ])</code></div>\n   <p id=\"idp583004348\">The Formatter class can be used to format XML documents in scripts. By default all parts of the XML document will formatted. All descendants of elements listed by preserve are left unformatted. Setting the boolean property compress to True suppresses the indenting given by the indent and indent_char properties. Without a value given to encoding_input xmlformatter trys to determine the encoding from the XML document. On failure it use UTF-8 as default. encoding_output advises xmlformatter to encode the output explicit by the given value. Otherwise xmlformatter use the inpurt encoding. Setting the boolean property inline to False suppresses inline formatting. By default element content will be formatted everywhere - also within mixed content. The following example shows the usage of the xmlfromatter class:</p>\n   <pre class=\"prettyprint\"><code class=\"lang-python\">import xmlformatter\n\nformatter = xmlformatter.Formatter(indent=\"1\", indent_char=\"\\t\", encoding_output=\"ISO-8859-1\", preserve=[\"literal\"])\nformatter.format_file(\"/home/pa/doc.xml\")</code></pre>\n<p id=\"idp583005860\">The example formats the XML document in <code>/home/pa/doc.xml</code>, preserving the element literal, indenting by the tab character and output in ISO-8859-1 encoding.</p>\n</section><section id=\"idp583006412\"><h2>Members</h2>\n<div class=\"funcsynopsis\"><code> <strong>compress</strong> ::= False</code></div>\n<p id=\"idp583007244\">Minify the XML document.</p>\n<div class=\"funcsynopsis\"><code> <strong>correct</strong> ::= True</code></div>\n<p id=\"idp583008012\">Apply formatting rules to whitespaces.</p>\n<div class=\"funcsynopsis\"><code> <strong>indent</strong> ::= 2</code></div>\n<p id=\"idp583008796\">Indent a child element in element content n-times by indent_char.</p>\n<div class=\"funcsynopsis\"><code> <strong>indent_char</strong> ::= \" \"</code></div>\n<p id=\"idp583009652\">Indent a child element by this string.</p>\n<div class=\"funcsynopsis\"><code> <strong>input_encoding</strong> ::= None</code></div>\n<p id=\"idp583010508\">Assume the XML document encoded by a not None value.</p>\n<div class=\"funcsynopsis\"><code> <strong>output_encoding</strong> ::= None</code></div>\n<p id=\"idp583011380\">Encode the formatted XML document by a not None value.</p>\n<div class=\"funcsynopsis\"><code> <strong>preserve</strong> ::= [ ]</code></div>\n<p id=\"idp583012228\">Skip formatting for all elements listed in preserve and all their descendants.</p>\n</section><section id=\"idp583012572\"><h2>Methods</h2>\n<div class=\"funcsynopsis\"><code> <strong>format_file</strong>(path)</code></div>\n<p id=\"idp583013644\">Format a XML document given by a path.</p>  \n<div class=\"funcsynopsis\"><code> <strong>format_string</strong>(xmldoc)</code></div>  \n<p id=\"idp583014716\">Format a XML document given by a string.</p>\n</section><section id=\"idp583015020\"><h2>Cmd</h2>\n<pre class=\"prettyprint\"><code class=\"lang-bash\">xmlformat [--preserve \"pre,literal\"] [--compress] [--indent num] [--indent-char char]\n          [--outfile file] [--encoding enc] [--outencoding enc] [--disable-inlineformatting] \n          [--dispable-correction] [--help] &lt; --infile file | file | - &gt;</code></pre></section><p id=\"idp583015540\">xmlformat can read from STDIN, like:</p><pre class=\"prettyprint\"><code class=\"lang-bash\">$ cat /home/pa/doc.xml | xmlformat -</code></pre><section id=\"idp583016500\"><h2>Notes</h2>\n<p id=\"idp583016756\">Remove XmlFormatter before installing xmlformatter:</p>\n<pre class=\"prettyprint\"><code class=\"lang-bash\">$ pip uninstall XmlFormatter</code></pre>\n<p id=\"idp583017372\">After reinstallation replace the string \"formatter.formatter\" by \"formatter\", \"preserving\" by \"preserve\" and \"indentChar\" by \"indent_char\" inside your scripts carefully. To reach compatibility with XmlFormatter call xmlformat with <code>--disable-inlineformatting</code> or use <code>inline=False</code> in your scripts.</p>\n</section></article></main><footer>\u00c2\u00a9 2011 - 2015 Peter Andreas M\u00c3\u00b6ller<!--Seite erstellt am 28 September 2015 09:45--></footer></div></body></html>\n"}}, "recorded_at": "2016-12-23T10:45:41"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://pypi.python.org/pypi/xmlformatter/0.1.1", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "X-Cache": ["MISS, MISS"], "Accept-Ranges": ["bytes"], "Fastly-Debug-Digest": ["c18da3e94abdf174f88c316f1a4b74fb583324b57c8bb60213d642c355bbdf4c"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Connection": ["keep-alive"], "Server": ["nginx/1.10.2"], "Date": ["Fri, 23 Dec 2016 10:45:41 GMT"], "Age": ["0"], "Content-Type": ["text/html; charset=utf-8"], "Content-Length": ["22887"], "X-Frame-Options": ["deny"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Served-By": ["cache-iad2151-IAD, cache-hhn1535-HHN"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Cache-Hits": ["0, 0"], "X-Timer": ["S1482489941.528636,VS0,VE237"], "X-Permitted-Cross-Domain-Policies": ["none"], "Via": ["1.1 varnish", "1.1 varnish"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/xmlformatter/0.1.1", "body": {"encoding": "utf-8", "string": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n  <html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\n    <head>\n      \n      <meta content=\"text/html; charset=utf-8\" http-equiv=\"content-type\"/>\n      <title>xmlformatter 0.1.1 : Python Package Index</title>\n      <meta content=\"\"/>\n      <meta content=\"Format and compress XML documents\"/>\n       <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"https://pypi.python.org/pypi?:action=rss\"/>\n       <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"https://pypi.python.org/pypi?:action=packages_rss\"/>\n       <link rel=\"stylesheet\" media=\"screen\" href=\"/static/styles/screen-switcher-default.css\" type=\"text/css\"/>\n       <link media=\"screen\" href=\"/static/styles/netscape4.css\" type=\"text/css\" rel=\"stylesheet\"/>\n       <link media=\"print\" href=\"/static/styles/print.css\" type=\"text/css\" rel=\"stylesheet\"/>\n       <link media=\"screen\" href=\"/static/styles/largestyles.css\" type=\"text/css\" rel=\"alternate stylesheet\" title=\"large text\"/>\n       <link media=\"screen\" href=\"/static/styles/defaultfonts.css\" type=\"text/css\" rel=\"alternate stylesheet\" title=\"default fonts\"/>\n       <link rel=\"stylesheet\" media=\"screen\" href=\"/static/css/docutils.css\" type=\"text/css\"/>\n       <link rel=\"stylesheet\" media=\"screen\" href=\"/static/css/pygments.css\" type=\"text/css\"/>\n\n       <!-- allow pypi to override the standard pydotorg/docutils/etc. styles -->\n       <link rel=\"stylesheet\" href=\"/static/css/pypi.css\" type=\"text/css\"/>\n       <link media=\"screen\" rel=\"stylesheet\" href=\"/static/css/pypi-screen.css\" type=\"text/css\"/>\n\n       \n       <meta name=\"google-site-verification\" content=\"NSgF04qslVV4P7nymxJDSkWVK09zfdPTxgZfU3dNSoQ\"/>\n       \n\n       \n \n <meta name=\"description\" content=\"Format and compress XML documents\"/>\n <link rel=\"meta\" title=\"DOAP\" type=\"application/rdf+xml\" href=\"/pypi?:action=doap&amp;name=xmlformatter&amp;version=0.1.1\"/>\n <style type=\"text/css\">\n  table.form th {white-space: pre;}\n </style>\n\n\n       <style type=\"text/css\">\n       </style>\n    </head>\n    <body>\n     \n\n      <!--  Logo  -->\n      <h1 id=\"logoheader\">\n       <a accesskey=\"1\" href=\"http://www.python.org\" id=\"logolink\">\n          <img src=\"/static/images/python-logo.png\" alt=\"homepage\" border=\"0\" id=\"logo\"/>\n       </a>\n      </h1>\n      <!--  Skip to Navigation  -->\n      <div class=\"skiptonav\"><a accesskey=\"2\" href=\"#left-hand-navigation\"><img src=\"/static/images/trans.gif\" alt=\"skip to navigation\" border=\"0\" id=\"skiptonav\"/></a></div>\n      <div class=\"skiptonav\"><a accesskey=\"3\" href=\"#content-body\"><img src=\"/static/images/trans.gif\" alt=\"skip to content\" border=\"0\" id=\"skiptocontent\"/></a></div>\n      <!--  Utility Menu  -->\n\n      <div id=\"utility-menu\">\n        <!--  Search Box  -->\n        <div id=\"searchbox\">\n          <form id=\"searchform\" method=\"get\" name=\"searchform\" action=\"/pypi\">\n            <input type=\"hidden\" name=\":action\" value=\"search\"/>\n            <div id=\"search\">\n              <input class=\"input-text\" id=\"term\" name=\"term\" autofocus=\"autofocus\"/>\n              <input class=\"input-button\" type=\"submit\" name=\"submit\" value=\"search\" id=\"submit\"/>\n            </div>\n          </form>\n        </div>\n<!-- XXX: reinstate this       <div id=\"screen-switcher\"></div> -->\n      </div>\n      <div id=\"left-hand-navigation\">\n\n        <!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER -->\n        <div id=\"menu\">\n          <ul class=\"level-one\">\n            <li class=\"selected\">\n              <a class=\"selected\" href=\"/pypi\">Package Index</a>\n\n              <ul class=\"level-two\">\n\n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=browse\">Browse&nbsp;packages</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=submit_form\">Package&nbsp;submission</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=list_classifiers\">List&nbsp;trove&nbsp;classifiers</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=rss\">RSS&nbsp;(latest&nbsp;40&nbsp;updates)</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=packages_rss\">RSS&nbsp;(newest&nbsp;40&nbsp;packages)</a></li>\n                \n        <li><a href=\"http://wiki.python.org/moin/CheeseShopTutorial\">PyPI Tutorial</a></li>\n        <li><a href=\"/security\">PyPI Security</a></li>\n        <li><a href=\"http://sourceforge.net/tracker/?group_id=66150&amp;atid=513504\">PyPI Support</a></li>\n        <li><a href=\"https://github.com/pypa/pypi-legacy/issues\">PyPI Bug Reports</a></li>\n        <li><a href=\"http://www.python.org/sigs/distutils-sig/\">PyPI Discussion</a></li>\n        <li><a href=\"http://wiki.python.org/moin/CheeseShopDev\">PyPI Developer Info</a></li>\n       </ul>\n\n            </li>\n\n\n\n\n            <li class=\"\"><a href=\"http://www.python.org/about\" class=\"\" title=\"About The Python Language\">About</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/news\" class=\"\" title=\"\">News</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/doc\" class=\"\" title=\"\">Documentation</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/download\" title=\"\">Download</a>\n\n\n            </li><li class=\"\"><a href=\"http://www.python.org/community\" class=\"\" title=\"\">Community</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/psf\" class=\"\" title=\"Python Software Foundation\">Foundation</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/dev\" class=\"\" title=\"Python Core Language Development\">Core Development</a>\n          </li>\n          </ul>\n        </div>\n\n      </div>\n      <div id=\"content-body\">\n        <div id=\"body-main\">\n          <div id=\"content\">\n\n            <div id=\"breadcrumb\">\n              <a href=\"/pypi\">Package Index</a>\n              \n                <span class=\"breadcrumb-separator\">&gt;</span>\n                <a href=\"/pypi/xmlformatter\">xmlformatter</a>\n              \n              \n                <span class=\"breadcrumb-separator\">&gt;</span>\n                <a href=\"/pypi/xmlformatter/0.1.1\">0.1.1</a>\n              \n\n            </div>\n\n            <div id=\"document-floating\">\n\n            <div id=\"document-navigation\" style=\"overflow-y: auto; max-height: 15em; overflow-x: hidden;\">\n\t\t\n                  <h4>Not Logged In</h4>\n\n                  <ul>\n\t\t    \n                    <li><a href=\"/pypi?%3Aaction=login_form\">Login</a></li>\n                    <li><a href=\"/pypi?%3Aaction=register_form\">Register</a></li>\n                    <li><a href=\"/pypi?%3Aaction=forgotten_password_form\">Lost Login?</a></li>\n\t\t    <li>Use <a href=\"/pypi?:action=openid\">OpenID</a>\n                      \n                        <a style=\"border: none;\" href=\"/pypi?:action=login&amp;provider=Launchpad\"><img width=\"16\" height=\"16\" alt=\"Launchpad\" src=\"https://launchpad.net/@@/launchpad.png\" title=\"Launchpad\"/></a>\n                      \n                    </li>\n                    <li><a href=\"/google_login\">Login with Google<img width=\"16\" height=\"16\" src=\"https://www.google.com/favicon.ico\" title=\"Google Login\" alt=\"Google Login\"/></a></li>\n                  </ul>\n\n\t\t\n\n\t\t\n\n                <div id=\"statusdiv\">\n                </div>\n            </div>\n        </div>\n        \n\n\n            <div class=\"section\">\n              <h1>xmlformatter 0.1.1</h1>\n\n              \n<div id=\"download-button\">\n \n  <a class=\"button green\" style=\"float:right;\" href=\"https://pypi.python.org/packages/ba/c6/6f958639e34957aa986041b4e474bbbf5135eeb59dcb788e41719175d48c/xmlformatter-0.1.1.tar.gz\">Download<br/>\n    <span style=\"font-size: 75%\">xmlformatter-0.1.1.tar.gz</span>\n  </a>\n \n \n</div>\n\n<p style=\"font-style: italic\">Format and compress XML documents</p>\n\n\n\n\n\n\n\n\n<div id=\"xmlformatter\">\n<h2>xmlformatter</h2>\n<p><a href=\"http://pamoller.com/xmlformatter.html\" rel=\"nofollow\">xmlformatter</a> is an Open Source Python package, which provides formatting of XML documents. <em>It is the replacement for the Python 2 package XmlFormatter, which has been removed from PyPi completely (see Notes)</em>. xmlformatter differs from others formatters by <em>handling whitespaces by a distinct set of formatting rules</em> - formatting element content by a object style and mixed content by a text style. You may find xmlformatter useful for corrections and presentations. In addition xmlformatter comes with a wrapper script named xmlformat.</p>\n</div>\n<div id=\"formatting-rules\">\n<h2>Formatting Rules</h2>\n<p>xmlformatter treats the element content from the following example as a object. The elements are associated with containers, like complex, or properties names, like real and imaginary. Text nodes are associated with property values, like 4.4E+12. Leading and trailing whitespaces are meaningless in this scenario like sequences of whitespaces. Leading and trailing whitespaces will be remove, sequences of whitespaces will be collapsed.</p>\n<pre>&lt;complex&gt;\n  &lt;real&gt;  4.4E+12&lt;/real&gt;\n &lt;imaginary&gt;5.4E-11\n   &lt;/imaginary&gt;\n&lt;/complex&gt;\n</pre>\n<p>The element content from the example above can be formatted by xmlformat:</p>\n<pre>$ xmlformat ele.xml\n</pre>\n<p>The following output shows the formatted XML document. xmlformatter has removed leading and trailing whitespaces from the text nodes and has indented the child elements equal. This formatting style is called object style.</p>\n<pre>&lt;complex&gt;\n  &lt;real&gt;4.4E+12&lt;/real&gt;\n  &lt;imaginary&gt;5.4E-11&lt;/imaginary&gt;\n&lt;/complex&gt;\n</pre>\n<p>xmlformatter treats the mixed content from the following example as a literal text with some markup. The outer element enclose poem encloses the text. The inline element em gives a text snippet a special meaning. Leading and trailing whitespaces enclosed by inline elements are misplaced. They will be adopted by the previous or following text node. Note: xmlformatter may insert a text node if necessary. Even sequences of whitespaces will be collapsed:</p>\n<pre>&lt;poem&gt; Es&lt;em&gt;   war&lt;/em&gt; einmal und &lt;em&gt;ist  &lt;/em&gt;nicht mehr...&lt;/poem&gt;\n</pre>\n<p>The following output shows the formatted XML document. xmlfromatter has removed leading and trailing whitespaces and has collapsed sequences of whitespaces. This formatting style is called text style.</p>\n<pre>&lt;poem&gt;Es &lt;em&gt;war&lt;/em&gt; einmal und &lt;em&gt;ist&lt;/em&gt; nicht mehr...&lt;/poem&gt;\n</pre>\n<p>Both styles are used while formatting a XML document. The formatting rules are:</p>\n<p>A: Surrounding whitespaces are removed from element content.</p>\n<p>B: Leading whitespaces are removed from element content.</p>\n<p>C: Trailing whitespaces are removed from element content.</p>\n<p>D: Leading whitespaces of inline elements are put to preceding text (or inserted) if necessary within mixed content.</p>\n<p>E: Trailing whitespaces of inline elements are put to following text (or inserted) if necessary within mixed content.</p>\n<p>F: Sequences of whitespaces (n&gt;2) are replaced by a single blank \u201d \u201d within element and mixed content.</p>\n<p>G: Linebreak and whitespace are used to indent elements within elements content.</p>\n<p>The following example shows the described whitespaces by their labels within a XML document:</p>\n<pre>&lt;root&gt;AAAA\nAAAA&lt;number&gt;BBBB4.4E+12CCC&lt;/number&gt;AAAA\nAAAA&lt;poem&gt;BBBBEs&lt;em&gt;DDDDwar&lt;/em&gt; einmal und &lt;em&gt;istEEEE&lt;/em&gt;nicht mehrF\nFFFFein &lt;strong&gt;riesengro\u00dfer&lt;/strong&gt;&lt;em&gt;DDDDTeddyb\u00e4r&lt;/em&gt;,F\nder a\u00dfFFFFdie &lt;em&gt;MilchEEEE&lt;/em&gt;und trank das BrotFFFF\nund als er starb da &lt;strong&gt;war erEEEE&lt;/strong&gt;&lt;em&gt;tot&lt;/em&gt;.CCCC&lt;/poem&gt;AAAA\n&lt;/root&gt;\n</pre>\n<p>The following output shows the formatted XML document:</p>\n<pre>&lt;root&gt;\n    &lt;number&gt;4.4E+12&lt;/number&gt;\n    &lt;poem&gt;Es &lt;em&gt;war&lt;/em&gt; einmal und &lt;em&gt;ist&lt;/em&gt; nicht mehr ein &lt;strong&gt;riesengro\u00dfer&lt;/strong&gt; &lt;em&gt;Teddyb\u00e4r&lt;/em&gt;, der a\u00df die &lt;em&gt;Milch&lt;/em&gt;und trank das Brot und als er starb da &lt;strong&gt;war er&lt;/strong&gt; &lt;em&gt;tot&lt;/em&gt;.&lt;/poem&gt;\n&lt;/root&gt;\n</pre>\n</div>\n<div id=\"class\">\n<h2>Class</h2>\n<pre>class xmlformatter.Formatter(compress ::= False, indent ::= 2, indent_char ::= \" \", inline ::= True, encoding_input ::= None, encoding_output ::= None, preserve ::= [ ])\n</pre>\n<p>The Formatter class can be used to format XML documents in scripts. By default all parts of the XML document will formatted. All descendants of elements listed by preserve are left unformatted. Setting the boolean property compress to True suppresses the indenting given by the indent and indent_char properties. Without a value given to encoding_input xmlformatter trys to determine the encoding from the XML document. On failure it use UTF-8 as default. encoding_output advises xmlformatter to encode the output explicit by the given value. Otherwise xmlformatter use the inpurt encoding. Setting the boolean property inline to False suppresses inline formatting. By default element content will be formatted everywhere - also within mixed content. The following example shows the usage of the xmlfromatter class:</p>\n<pre>import xmlformatter\n\nformatter = xmlformatter.Formatter(indent=\"1\", indent_char=\"\\t\", encoding_output=\"ISO-8859-1\", preserve=[\"literal\"])\nformatter.format_file(\"/home/pa/doc.xml\")\n</pre>\n<p>The example formats the XML document in /home/pa/doc.xml, preserving the element literal, indenting by the tab character and output in ISO-8859-1 encoding.</p>\n</div>\n<div id=\"members\">\n<h2>Members</h2>\n<pre>compress ::= False\n</pre>\n<p>Minify the XML document.</p>\n<pre>correct ::= True\n</pre>\n<p>Apply formatting rules to whitespaces.</p>\n<pre>indent ::= 2\n</pre>\n<p>Indent a child element in element content n-times by indent_char.</p>\n<pre>indent_char ::= \" \"\n</pre>\n<p>Indent a child element by this string.</p>\n<pre>input_encoding ::= None\n</pre>\n<p>Assume the XML document encoded by a not None value.</p>\n<pre>output_encoding ::= None\n</pre>\n<p>Encode the formatted XML document by a not None value.</p>\n<pre>preserve ::= [ ]\n</pre>\n<p>Skip formatting for all elements listed in preserve and all their descendants.</p>\n</div>\n<div id=\"methods\">\n<h2>Methods</h2>\n<pre>format_file(path)\n</pre>\n<p>Format a XML document given by a path.</p>\n<pre>format_string(xmldoc)\n</pre>\n<p>Format a XML document given by a string.</p>\n</div>\n<div id=\"cmd\">\n<h2>Cmd</h2>\n<pre>xmlformat [--preserve \"pre,literal\"] [--compress] [--indent num] [--indent-char char]\n          [--outfile file] [--encoding enc] [--outencoding enc] [--disable-inlineformatting]\n          [--dispable-correction] [--help] &lt; --infile file | file | - &gt;\n</pre>\n<p>xmlformat can read from STDIN, like:</p>\n<pre>$ cat /home/pa/doc.xml | xmlformat -\n</pre>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>Remove XmlFormatter before installing xmlformatter:</p>\n<pre>$ pip uninstall XmlFormatter\n</pre>\n<p>After reinstallation replace the string \u201cformatter.formatter\u201d by \u201cformatter\u201d, \u201cpreserving\u201d by \u201cpreserve\u201d and \u201cindentChar\u201d by \u201cindent_char\u201d inside your scripts carefully. To reach compatibility with XmlFormatter call xmlformat with \u2013disable-inlineformatting or use inline=False in your scripts.</p>\n</div>\n\n\n<a name=\"downloads\">&nbsp;</a>\n<table class=\"list\" style=\"margin-bottom: 10px;\">\n<tr>\n  <th>File</th>\n  <th>Type</th>\n  <th>Py Version</th>\n  <th>Uploaded on</th>\n  <th style=\"text-align: right;\">Size</th>\n</tr>\n\n<tr class=\"odd\">\n\n    <td>\n    <span style=\"white-space: nowrap;\">\n      <a href=\"https://pypi.python.org/packages/ba/c6/6f958639e34957aa986041b4e474bbbf5135eeb59dcb788e41719175d48c/xmlformatter-0.1.1.tar.gz#md5=af5cd269580026a460105e532082975d\">xmlformatter-0.1.1.tar.gz</a>\n      (<a title=\"MD5 Digest\" href=\"/pypi?:action=show_md5&amp;digest=af5cd269580026a460105e532082975d\">md5</a>)\n    </span>\n    \n        </td>\n  <td style=\"white-space: nowrap;\">\n    Source\n  </td>\n  <td>\n    \n  </td>\n  <td>2014-01-29</td>\n  <td style=\"text-align: right;\">13KB</td>\n\n</tr>\n\n<tr><td id=\"last\" colspan=\"6\"/></tr>\n  </table>\n\n\n\n<ul class=\"nodot\">\n <li>\n  <strong>Author:</strong>\n  <span>P. Andreas Moeller</span>\n </li>\n\n \n\n \n\n<!-- The <th> elements below are a terrible terrible hack for setuptools -->\n <li>\n  <strong>Home Page:</strong>\n  <!-- <th>Home Page -->\n  <a href=\"http://pamoller.com/xmlformatter.html\">http://pamoller.com/xmlformatter.html</a>\n </li>\n\n\n \n\n \n\n\n \n\n <li>\n  <strong>License:</strong>\n  \n  \n  <span>MIT</span>\n  \n </li>\n\n \n\n<!-- TODO: add link to products in follow dependencies... -->\n \n \n \n\n <li>\n  <strong>Categories</strong>\n  <ul class=\"nodot\">\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=69\">License :: OSI Approved :: MIT License</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=527\">Programming Language :: Python :: 2</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=531\">Programming Language :: Python :: 2.6</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=532\">Programming Language :: Python :: 2.7</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=533\">Programming Language :: Python :: 3</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=538\">Programming Language :: Python :: 3.2</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=500\">Topic :: Text Processing :: Markup :: XML</a>\n   </li>\n  </ul>\n </li>\n\n\n\n \n\n \n\n \n\n \n\n \n\n\n <li>\n  <strong>Package Index Owner:</strong>\n  <span>pamoller</span>\n </li>\n\n \n\n <li>\n  <strong><a href=\"https://github.com/edumbill/doap/wiki\">DOAP</a> record:</strong>\n  <a href=\"/pypi?:action=doap&amp;name=xmlformatter&amp;version=0.1.1\">xmlformatter-0.1.1.xml</a>\n </li>\n\n</ul>\n\n\n\n\n\n            </div>\n\n\n          </div>\n          <div id=\"footer\">\n            <div id=\"credits\">\n              <div style=\"float: left; margin-right: 1em;\" id=\"badges\">\n                \n                <img src=\"https://img.shields.io/badge/ipv6-go!-green.svg\" alt=\"ipv6 ready\" title=\"ipv6 ready\" border=\"0\"/><br/>\n                <img src=\"https://img.shields.io/badge/http2-go!-green.svg\" alt=\"http2 ready\" title=\"http2 ready\" border=\"0\"/>\n                \n              </div>\n              <div style=\"float: right\" id=\"donations\">\n                <a href=\"http://www.python.org/about/website\">Website maintained by the Python community</a><br/>\n                <a href=\"https://www.fastly.com/\" title=\"Real-time CDN services provided by Fastly\">Real-time CDN by Fastly</a> / \n                <a href=\"http://developer.rackspace.com/\" title=\"Server hosting by Rackspace Open Source support\">Hosting by Rackspace</a><br/>\n                <a href=\"https://aws.amazon.com/s3/\" title=\"Object storage provided by Amazon S3\">Object storage by Amazon S3</a> /\n                <a href=\"http://www.timparkin.co.uk/\" title=\"Design by Tim Parkin, Yorkshire man, photographer and developer\">Design by Tim Parkin</a>\n              </div>\n            </div>\n            Copyright \u00a9 1990-2016, <a href=\"http://www.python.org/psf\">Python Software Foundation</a><br/>\n            <a href=\"http://www.python.org/about/legal\">Legal Statements</a>\n          </div>\n        </div>\n      </div>\n\n      \n      <script>\n        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n        ga('create', 'UA-55961911-1', 'auto');\n        ga('require', 'linkid', 'linkid.js');\n        ga('send', 'pageview');\n      </script>\n      \n\n      <script type=\"text/javascript\" src=\"//statuspage-production.s3.amazonaws.com/se-v2.js\">\n      </script>\n      <script type=\"text/javascript\">\n        var sp = new StatusPage.page({ page : '2p66nmmycsj3' });\n        sp.summary({\n          // <![CDATA[\n          success: function(data) {\n            var div = document.getElementById('statusdiv');\n            var reports = \"</br><h4 id='statusbox'>Status</h4>\\n\";\n            var outage = 0;\n            var maintenance = 0;\n            for (i in data.incidents) {\n              var incident = data.incidents[i];\n              var message, status = incident.status;\n              if (status === 'scheduled') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' scheduled.</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status === 'in_progress') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' is currently in progress.' + '</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ': ' + incident.status + '</a></li>\\n';\n                reports += message;\n                outage += 1;\n              }\n            }\n            for (i in data.scheduled_maintenances) {\n              var incident = data.scheduled_maintenances[i];\n              var message, status = incident.status;\n              if (status === 'scheduled') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' scheduled.</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status === 'in_progress') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' is currently in progress.' + '</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ': ' + incident.status + '</a></li>\\n';\n                reports += message;\n                outage += 1;\n              }\n            }\n            if (outage + maintenance === 0) {\n              reports += \"<li><a href='http://status.python.org'>Nothing to report</a></li>\";\n            }\n            div.innerHTML=reports;\n            if (outage > 0) {\n              var statusbox = document.getElementById(\"statusbox\");\n              statusbox.style.background = '#FC234A';\n            }\n          }\n          // ]]>\n        });\n      </script>\n\n    </body>\n  </html>\n\n"}}, "recorded_at": "2016-12-23T10:45:41"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://github.com/pamoller/xmlformatter", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-XSS-Protection": ["1; mode=block"], "Server": ["GitHub.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-GitHub-Request-Id": ["54B1D78B:C3EE:E6610BE:585D0055"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Date": ["Fri, 23 Dec 2016 10:45:42 GMT"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Content-Type": ["text/html; charset=utf-8"], "X-Served-By": ["87f5c5d7dd60f60a2cf951a9aeddef08"], "X-Frame-Options": ["deny"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Content-Type-Options": ["nosniff"], "X-Request-Id": ["a4f285f809770161bd690962994016eb"], "Vary": ["X-PJAX", "Accept-Encoding"], "Transfer-Encoding": ["chunked"], "X-Runtime": ["0.080294"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Tue, 23 Dec 2036 10:45:42 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNzg3MjViMGRmZDZjN2EwZGY2OTdmMWM0YjEzYjVmMzEiLCJzcHlfcmVwbyI6InBhbW9sbGVyL3htbGZvcm1hdHRlciIsInNweV9yZXBvX2F0IjoxNDgyNDg5OTQyLCJfY3NyZl90b2tlbiI6ImpXeEtpUDl2amF2VEl5YjgxdCtzZGc1WS8vQ2hCVFlieGIzVjVoOFdJVU09IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--a23148ac2e1d7ecc8492c9e5596ee5629a4af80c; path=/; secure; HttpOnly"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/pamoller/xmlformatter", "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:45:42"}, {"request": {"method": "GET", "headers": {"Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"]}, "uri": "https://raw.githubusercontent.com/pamoller/xmlformatter/master/CHANGES.txt", "body": {"encoding": "utf-8", "string": ""}}, "response": {"headers": {"X-Frame-Options": ["deny"], "X-GitHub-Request-Id": ["C71B4C24:5BAA:68D401C:585D0056"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-XSS-Protection": ["1; mode=block"], "Date": ["Fri, 23 Dec 2016 10:45:42 GMT"], "Source-Age": ["0"], "X-Cache-Hits": ["0"], "X-Served-By": ["cache-hhn1543-HHN"], "X-Fastly-Request-ID": ["4ae089ebe639280d38a88c2b85093386db51dd87"], "X-Geo-Block-List": [""], "Strict-Transport-Security": ["max-age=31536000"], "Access-Control-Allow-Origin": ["*"], "Vary": ["Authorization,Accept-Encoding"], "X-Timer": ["S1482489942.514009,VS0,VE117"], "Content-Encoding": ["gzip"], "X-Cache": ["MISS"], "Accept-Ranges": ["bytes"], "Cache-Control": ["max-age=300"], "Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "ETag": ["\"13404dd67d32e314e15080cabecaf15ce2230f23\""], "Content-Type": ["text/plain; charset=utf-8"], "Content-Length": ["130"], "X-Content-Type-Options": ["nosniff"], "Expires": ["Fri, 23 Dec 2016 10:50:42 GMT"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/pamoller/xmlformatter/master/CHANGES.txt", "body": {"base64_string": "H4sIAAAAAAAAAxXLTQrCMBAG0H1OMUsFp0xKizcQpDtXbmP7gYH8kUwL3t5m/94hgx3kRqPYicXyOBMzPZNX7wJVBNdAlxdKcCsavWN45BqdKurVmKNv2/PMcmeZel6AQohFf3S66j+7glPezu4T6Re05XWPSNrI/AE8hYCfgAAAAA==", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:45:42"}], "recorded_with": "betamax/0.8.0"}