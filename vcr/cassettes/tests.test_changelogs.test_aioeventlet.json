{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/aioeventlet/json"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://pypi.python.org/pypi/aioeventlet/json", "headers": {"Content-Length": ["5895"], "Connection": ["keep-alive"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Age": ["68348"], "Fastly-Debug-Digest": ["64af1b41d1f4388a88e112582b3b533d603d41633899db2379de216882233882"], "Accept-Ranges": ["bytes"], "Via": ["1.1 varnish", "1.1 varnish"], "Content-Disposition": ["inline"], "X-Served-By": ["cache-iad2144-IAD, cache-hhn1530-HHN"], "X-Timer": ["S1482488772.012600,VS0,VE0"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "X-Cache": ["HIT, HIT"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-XSS-Protection": ["1; mode=block"], "X-Cache-Hits": ["1, 1"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Content-Type-Options": ["nosniff"], "Cache-Control": ["max-age=600, public"], "X-Frame-Options": ["deny"], "Date": ["Fri, 23 Dec 2016 10:26:12 GMT"], "Server": ["nginx/1.10.2"], "Content-Type": ["application/json; charset=\"UTF-8\""], "X-PYPI-LAST-SERIAL": ["2534991"], "Access-Control-Allow-Origin": ["*"]}, "body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/aioeventlet\", \n        \"author\": \"Victor Stinner\", \n        \"author_email\": \"victor.stinner@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.5.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"aioeventlet implements the asyncio API (PEP 3156) on top of eventlet. It makes\\npossible to write asyncio code in a project currently written for eventlet.\\n\\naioeventlet allows to use greenthreads in asyncio coroutines, and to use\\nasyncio coroutines, tasks and futures in greenthreads: see ``link_future()``\\nand ``wrap_greenthread()`` functions.\\n\\nThe main visible difference between aioeventlet and trollius is the behaviour\\nof ``run_forever()``: ``run_forever()`` blocks with trollius, whereas it runs\\nin a greenthread with aioeventlet. It means that aioeventlet event loop can run\\nin an greenthread while the Python main thread runs other greenthreads in\\nparallel.\\n\\n* `aioeventlet documentation <http://aioeventlet.readthedocs.org/>`_\\n* `aioeventlet project in the Python Cheeseshop (PyPI)\\n  <https://pypi.python.org/pypi/aioeventlet>`_\\n* `aioeventlet project at Bitbucket <https://bitbucket.org/haypo/aioeventlet>`_\\n* Copyright/license: Open source, Apache 2.0. Enjoy!\", \n        \"release_url\": \"http://pypi.python.org/pypi/aioeventlet/0.5.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 2, \n        \"classifiers\": [\n            \"License :: OSI Approved :: Apache Software License\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 3\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"aioeventlet\", \n        \"license\": \"Apache License 2.0\", \n        \"summary\": \"asyncio event loop scheduling callbacks in eventlet.\", \n        \"home_page\": \"http://aioeventlet.readthedocs.org/\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-02-22T13:30:20\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/d5/d7/157ecb3e5a0e6825bbaff61f531120dcba20003723213d6e4d37a9d4c4ae/aioeventlet-0.5.tar.gz\", \n                \"md5_digest\": \"c81fd19dc4de0d38912d6a6d0f991ec1\", \n                \"downloads\": 461, \n                \"filename\": \"aioeventlet-0.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"d5/d7/157ecb3e5a0e6825bbaff61f531120dcba20003723213d6e4d37a9d4c4ae/aioeventlet-0.5.tar.gz\", \n                \"size\": 62586\n            }\n        ], \n        \"0.5.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-02-22T16:41:10\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ee/1a/1573ef35a49bfe0144a98a9bdd40ac5a692e9a117ac8735e682e03dc39ce/aioeventlet-0.5.1.tar.gz\", \n                \"md5_digest\": \"572161de7277cbad0dd21c028e7d01ac\", \n                \"downloads\": 9469, \n                \"filename\": \"aioeventlet-0.5.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ee/1a/1573ef35a49bfe0144a98a9bdd40ac5a692e9a117ac8735e682e03dc39ce/aioeventlet-0.5.1.tar.gz\", \n                \"size\": 62371\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-12-02T23:56:47\", \n                \"comment_text\": \"\", \n                \"python_version\": \"2.7\", \n                \"url\": \"https://pypi.python.org/packages/65/63/501e18660ffe5d30c2ea856beeab30d41072600d5461beb13ba4bbba35f4/aioeventlet-0.4-py2-none-any.whl\", \n                \"md5_digest\": \"08cd70b05d8166c1ad61308f882e9e75\", \n                \"downloads\": 1041462, \n                \"filename\": \"aioeventlet-0.4-py2-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"65/63/501e18660ffe5d30c2ea856beeab30d41072600d5461beb13ba4bbba35f4/aioeventlet-0.4-py2-none-any.whl\", \n                \"size\": 5891\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-12-02T23:56:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b0/26/38d7af13e3d72a708b88e86eab803bdb4176677b3841388b8fb8f6524e33/aioeventlet-0.4.tar.gz\", \n                \"md5_digest\": \"678ea30265ae0326bddc767f80efd144\", \n                \"downloads\": 25529, \n                \"filename\": \"aioeventlet-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b0/26/38d7af13e3d72a708b88e86eab803bdb4176677b3841388b8fb8f6524e33/aioeventlet-0.4.tar.gz\", \n                \"size\": 64314\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-02-22T16:41:10\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/ee/1a/1573ef35a49bfe0144a98a9bdd40ac5a692e9a117ac8735e682e03dc39ce/aioeventlet-0.5.1.tar.gz\", \n            \"md5_digest\": \"572161de7277cbad0dd21c028e7d01ac\", \n            \"downloads\": 9469, \n            \"filename\": \"aioeventlet-0.5.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"ee/1a/1573ef35a49bfe0144a98a9bdd40ac5a692e9a117ac8735e682e03dc39ce/aioeventlet-0.5.1.tar.gz\", \n            \"size\": 62371\n        }\n    ]\n}"}}, "recorded_at": "2016-12-23T10:26:12"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "http://aioeventlet.readthedocs.org/"}, "response": {"status": {"message": "Moved Permanently", "code": 301}, "url": "http://aioeventlet.readthedocs.org/", "headers": {"Content-Length": ["194"], "Content-Type": ["text/html"], "Connection": ["keep-alive"], "X-Served": ["Nginx"], "X-Deity": ["web03"], "Location": ["http://aioeventlet.readthedocs.io/"], "Date": ["Fri, 23 Dec 2016 10:26:12 GMT"], "Server": ["nginx/1.10.0 (Ubuntu)"]}, "body": {"encoding": "ISO-8859-1", "string": "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx/1.10.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"}}, "recorded_at": "2016-12-23T10:26:12"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "http://aioeventlet.readthedocs.io/"}, "response": {"status": {"message": "OK", "code": 200}, "url": "http://aioeventlet.readthedocs.io/", "headers": {"X-Subdomain-TryFiles": ["True"], "Connection": ["keep-alive"], "X-Deity": ["web01"], "Date": ["Fri, 23 Dec 2016 10:26:12 GMT"], "Last-Modified": ["Mon, 12 Sep 2016 16:26:43 GMT"], "Content-Encoding": ["gzip"], "Server": ["nginx/1.10.0 (Ubuntu)"], "Content-Type": ["text/html"], "Vary": ["Accept-Encoding"], "X-Served": ["Nginx"], "ETag": ["W/\"57d6d743-3a97\""], "Transfer-Encoding": ["chunked"]}, "body": {"base64_string": "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", "encoding": "ISO-8859-1"}}, "recorded_at": "2016-12-23T10:26:12"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://pypi.python.org/pypi/aioeventlet/0.5.1"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://pypi.python.org/pypi/aioeventlet/0.5.1", "headers": {"Content-Length": ["16064"], "Connection": ["keep-alive"], "Public-Key-Pins": ["max-age=600; includeSubDomains; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"5C8kvU039KouVrl52D0eZSGf4Onjo4Khs8tmyTlV3nU=\"; pin-sha256=\"lCppFqbkrlJ3EcVFAkeip0+44VaoJUymbnOaEUk7tEU=\"; pin-sha256=\"TUDnr0MEoJ3of7+YliBMBVFB4/gJsv5zO7IxD9+YoWI=\"; pin-sha256=\"x4QzPSC810K5/cMjb05Qm4k3Bw5zBn4lTdO/nEW/Td4=\";"], "Age": ["0"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Accept-Ranges": ["bytes"], "Date": ["Fri, 23 Dec 2016 10:26:12 GMT"], "Fastly-Debug-Digest": ["4a2f37cdd7e79f653a8c412bc43a81cac0358d61a5ba5b0987ec0cb134c02d42"], "Via": ["1.1 varnish", "1.1 varnish"], "Server": ["nginx/1.10.2"], "X-Served-By": ["cache-iad2126-IAD, cache-hhn1530-HHN"], "X-Timer": ["S1482488772.718192,VS0,VE169"], "Content-Type": ["text/html; charset=utf-8"], "X-Cache": ["MISS, MISS"], "X-XSS-Protection": ["1; mode=block"], "X-Frame-Options": ["deny"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "X-Cache-Hits": ["0, 0"], "X-Permitted-Cross-Domain-Policies": ["none"], "X-Content-Type-Options": ["nosniff"]}, "body": {"encoding": "utf-8", "string": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n  <html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\n    <head>\n      \n      <meta content=\"text/html; charset=utf-8\" http-equiv=\"content-type\"/>\n      <title>aioeventlet 0.5.1 : Python Package Index</title>\n      <meta content=\"\"/>\n      <meta content=\"asyncio event loop scheduling callbacks in eventlet.\"/>\n       <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"https://pypi.python.org/pypi?:action=rss\"/>\n       <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"https://pypi.python.org/pypi?:action=packages_rss\"/>\n       <link rel=\"stylesheet\" media=\"screen\" href=\"/static/styles/screen-switcher-default.css\" type=\"text/css\"/>\n       <link media=\"screen\" href=\"/static/styles/netscape4.css\" type=\"text/css\" rel=\"stylesheet\"/>\n       <link media=\"print\" href=\"/static/styles/print.css\" type=\"text/css\" rel=\"stylesheet\"/>\n       <link media=\"screen\" href=\"/static/styles/largestyles.css\" type=\"text/css\" rel=\"alternate stylesheet\" title=\"large text\"/>\n       <link media=\"screen\" href=\"/static/styles/defaultfonts.css\" type=\"text/css\" rel=\"alternate stylesheet\" title=\"default fonts\"/>\n       <link rel=\"stylesheet\" media=\"screen\" href=\"/static/css/docutils.css\" type=\"text/css\"/>\n       <link rel=\"stylesheet\" media=\"screen\" href=\"/static/css/pygments.css\" type=\"text/css\"/>\n\n       <!-- allow pypi to override the standard pydotorg/docutils/etc. styles -->\n       <link rel=\"stylesheet\" href=\"/static/css/pypi.css\" type=\"text/css\"/>\n       <link media=\"screen\" rel=\"stylesheet\" href=\"/static/css/pypi-screen.css\" type=\"text/css\"/>\n\n       \n       <meta name=\"google-site-verification\" content=\"NSgF04qslVV4P7nymxJDSkWVK09zfdPTxgZfU3dNSoQ\"/>\n       \n\n       \n \n <meta name=\"description\" content=\"asyncio event loop scheduling callbacks in eventlet.\"/>\n <link rel=\"meta\" title=\"DOAP\" type=\"application/rdf+xml\" href=\"/pypi?:action=doap&amp;name=aioeventlet&amp;version=0.5.1\"/>\n <style type=\"text/css\">\n  table.form th {white-space: pre;}\n </style>\n\n\n       <style type=\"text/css\">\n       </style>\n    </head>\n    <body>\n     \n\n      <!--  Logo  -->\n      <h1 id=\"logoheader\">\n       <a accesskey=\"1\" href=\"http://www.python.org\" id=\"logolink\">\n          <img src=\"/static/images/python-logo.png\" alt=\"homepage\" border=\"0\" id=\"logo\"/>\n       </a>\n      </h1>\n      <!--  Skip to Navigation  -->\n      <div class=\"skiptonav\"><a accesskey=\"2\" href=\"#left-hand-navigation\"><img src=\"/static/images/trans.gif\" alt=\"skip to navigation\" border=\"0\" id=\"skiptonav\"/></a></div>\n      <div class=\"skiptonav\"><a accesskey=\"3\" href=\"#content-body\"><img src=\"/static/images/trans.gif\" alt=\"skip to content\" border=\"0\" id=\"skiptocontent\"/></a></div>\n      <!--  Utility Menu  -->\n\n      <div id=\"utility-menu\">\n        <!--  Search Box  -->\n        <div id=\"searchbox\">\n          <form id=\"searchform\" method=\"get\" name=\"searchform\" action=\"/pypi\">\n            <input type=\"hidden\" name=\":action\" value=\"search\"/>\n            <div id=\"search\">\n              <input class=\"input-text\" id=\"term\" name=\"term\" autofocus=\"autofocus\"/>\n              <input class=\"input-button\" type=\"submit\" name=\"submit\" value=\"search\" id=\"submit\"/>\n            </div>\n          </form>\n        </div>\n<!-- XXX: reinstate this       <div id=\"screen-switcher\"></div> -->\n      </div>\n      <div id=\"left-hand-navigation\">\n\n        <!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER -->\n        <div id=\"menu\">\n          <ul class=\"level-one\">\n            <li class=\"selected\">\n              <a class=\"selected\" href=\"/pypi\">Package Index</a>\n\n              <ul class=\"level-two\">\n\n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=browse\">Browse&nbsp;packages</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=submit_form\">Package&nbsp;submission</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=list_classifiers\">List&nbsp;trove&nbsp;classifiers</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=rss\">RSS&nbsp;(latest&nbsp;40&nbsp;updates)</a></li>\n                \n                \n                  <li class=\"\"><a class=\"\" href=\"/pypi?%3Aaction=packages_rss\">RSS&nbsp;(newest&nbsp;40&nbsp;packages)</a></li>\n                \n        <li><a href=\"http://wiki.python.org/moin/CheeseShopTutorial\">PyPI Tutorial</a></li>\n        <li><a href=\"/security\">PyPI Security</a></li>\n        <li><a href=\"http://sourceforge.net/tracker/?group_id=66150&amp;atid=513504\">PyPI Support</a></li>\n        <li><a href=\"https://github.com/pypa/pypi-legacy/issues\">PyPI Bug Reports</a></li>\n        <li><a href=\"http://www.python.org/sigs/distutils-sig/\">PyPI Discussion</a></li>\n        <li><a href=\"http://wiki.python.org/moin/CheeseShopDev\">PyPI Developer Info</a></li>\n       </ul>\n\n            </li>\n\n\n\n\n            <li class=\"\"><a href=\"http://www.python.org/about\" class=\"\" title=\"About The Python Language\">About</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/news\" class=\"\" title=\"\">News</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/doc\" class=\"\" title=\"\">Documentation</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/download\" title=\"\">Download</a>\n\n\n            </li><li class=\"\"><a href=\"http://www.python.org/community\" class=\"\" title=\"\">Community</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/psf\" class=\"\" title=\"Python Software Foundation\">Foundation</a>\n            </li><li class=\"\"><a href=\"http://www.python.org/dev\" class=\"\" title=\"Python Core Language Development\">Core Development</a>\n          </li>\n          </ul>\n        </div>\n\n      </div>\n      <div id=\"content-body\">\n        <div id=\"body-main\">\n          <div id=\"content\">\n\n            <div id=\"breadcrumb\">\n              <a href=\"/pypi\">Package Index</a>\n              \n                <span class=\"breadcrumb-separator\">&gt;</span>\n                <a href=\"/pypi/aioeventlet\">aioeventlet</a>\n              \n              \n                <span class=\"breadcrumb-separator\">&gt;</span>\n                <a href=\"/pypi/aioeventlet/0.5.1\">0.5.1</a>\n              \n\n            </div>\n\n            <div id=\"document-floating\">\n\n            <div id=\"document-navigation\" style=\"overflow-y: auto; max-height: 15em; overflow-x: hidden;\">\n\t\t\n                  <h4>Not Logged In</h4>\n\n                  <ul>\n\t\t    \n                    <li><a href=\"/pypi?%3Aaction=login_form\">Login</a></li>\n                    <li><a href=\"/pypi?%3Aaction=register_form\">Register</a></li>\n                    <li><a href=\"/pypi?%3Aaction=forgotten_password_form\">Lost Login?</a></li>\n\t\t    <li>Use <a href=\"/pypi?:action=openid\">OpenID</a>\n                      \n                        <a style=\"border: none;\" href=\"/pypi?:action=login&amp;provider=Launchpad\"><img width=\"16\" height=\"16\" alt=\"Launchpad\" src=\"https://launchpad.net/@@/launchpad.png\" title=\"Launchpad\"/></a>\n                      \n                    </li>\n                    <li><a href=\"/google_login\">Login with Google<img width=\"16\" height=\"16\" src=\"https://www.google.com/favicon.ico\" title=\"Google Login\" alt=\"Google Login\"/></a></li>\n                  </ul>\n\n\t\t\n\n\t\t\n\n                <div id=\"statusdiv\">\n                </div>\n            </div>\n        </div>\n        \n\n\n            <div class=\"section\">\n              <h1>aioeventlet 0.5.1</h1>\n\n              \n<div id=\"download-button\">\n \n  <a class=\"button green\" style=\"float:right;\" href=\"https://pypi.python.org/packages/ee/1a/1573ef35a49bfe0144a98a9bdd40ac5a692e9a117ac8735e682e03dc39ce/aioeventlet-0.5.1.tar.gz\">Download<br/>\n    <span style=\"font-size: 75%\">aioeventlet-0.5.1.tar.gz</span>\n  </a>\n \n \n</div>\n\n<p style=\"font-style: italic\">asyncio event loop scheduling callbacks in eventlet.</p>\n\n\n\n\n\n\n\n\n<p>aioeventlet implements the asyncio API (PEP 3156) on top of eventlet. It makes\npossible to write asyncio code in a project currently written for eventlet.</p>\n<p>aioeventlet allows to use greenthreads in asyncio coroutines, and to use\nasyncio coroutines, tasks and futures in greenthreads: see <tt>link_future()</tt>\nand <tt>wrap_greenthread()</tt> functions.</p>\n<p>The main visible difference between aioeventlet and trollius is the behaviour\nof <tt>run_forever()</tt>: <tt>run_forever()</tt> blocks with trollius, whereas it runs\nin a greenthread with aioeventlet. It means that aioeventlet event loop can run\nin an greenthread while the Python main thread runs other greenthreads in\nparallel.</p>\n<ul>\n<li><a href=\"http://aioeventlet.readthedocs.org/\" rel=\"nofollow\">aioeventlet documentation</a></li>\n<li><a href=\"https://pypi.python.org/pypi/aioeventlet\" rel=\"nofollow\">aioeventlet project in the Python Cheeseshop (PyPI)</a></li>\n<li><a href=\"https://bitbucket.org/haypo/aioeventlet\" rel=\"nofollow\">aioeventlet project at Bitbucket</a></li>\n<li>Copyright/license: Open source, Apache 2.0. Enjoy!</li>\n</ul>\n\n\n<a name=\"downloads\">&nbsp;</a>\n<table class=\"list\" style=\"margin-bottom: 10px;\">\n<tr>\n  <th>File</th>\n  <th>Type</th>\n  <th>Py Version</th>\n  <th>Uploaded on</th>\n  <th style=\"text-align: right;\">Size</th>\n</tr>\n\n<tr class=\"odd\">\n\n    <td>\n    <span style=\"white-space: nowrap;\">\n      <a href=\"https://pypi.python.org/packages/ee/1a/1573ef35a49bfe0144a98a9bdd40ac5a692e9a117ac8735e682e03dc39ce/aioeventlet-0.5.1.tar.gz#md5=572161de7277cbad0dd21c028e7d01ac\">aioeventlet-0.5.1.tar.gz</a>\n      (<a title=\"MD5 Digest\" href=\"/pypi?:action=show_md5&amp;digest=572161de7277cbad0dd21c028e7d01ac\">md5</a>)\n    </span>\n    \n        </td>\n  <td style=\"white-space: nowrap;\">\n    Source\n  </td>\n  <td>\n    \n  </td>\n  <td>2016-02-22</td>\n  <td style=\"text-align: right;\">60KB</td>\n\n</tr>\n\n<tr><td id=\"last\" colspan=\"6\"/></tr>\n  </table>\n\n\n\n<ul class=\"nodot\">\n <li>\n  <strong>Author:</strong>\n  <span>Victor Stinner</span>\n </li>\n\n \n\n \n\n<!-- The <th> elements below are a terrible terrible hack for setuptools -->\n <li>\n  <strong>Home Page:</strong>\n  <!-- <th>Home Page -->\n  <a href=\"http://aioeventlet.readthedocs.org/\">http://aioeventlet.readthedocs.org/</a>\n </li>\n\n\n \n\n \n\n\n \n\n <li>\n  <strong>License:</strong>\n  \n  \n  <span>Apache License 2.0</span>\n  \n </li>\n\n \n\n<!-- TODO: add link to products in follow dependencies... -->\n \n \n \n\n <li>\n  <strong>Categories</strong>\n  <ul class=\"nodot\">\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=56\">License :: OSI Approved :: Apache Software License</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=214\">Programming Language :: Python</a>\n   </li>\n   <li>\n    <a href=\"/pypi?:action=browse&amp;c=533\">Programming Language :: Python :: 3</a>\n   </li>\n  </ul>\n </li>\n\n\n\n \n\n \n\n \n\n \n\n \n\n\n <li>\n  <strong>Package Index Owner:</strong>\n  <span>haypo</span>\n </li>\n\n \n\n <li>\n  <strong><a href=\"https://github.com/edumbill/doap/wiki\">DOAP</a> record:</strong>\n  <a href=\"/pypi?:action=doap&amp;name=aioeventlet&amp;version=0.5.1\">aioeventlet-0.5.1.xml</a>\n </li>\n\n</ul>\n\n\n\n\n\n            </div>\n\n\n          </div>\n          <div id=\"footer\">\n            <div id=\"credits\">\n              <div style=\"float: left; margin-right: 1em;\" id=\"badges\">\n                \n                <img src=\"https://img.shields.io/badge/ipv6-go!-green.svg\" alt=\"ipv6 ready\" title=\"ipv6 ready\" border=\"0\"/><br/>\n                <img src=\"https://img.shields.io/badge/http2-go!-green.svg\" alt=\"http2 ready\" title=\"http2 ready\" border=\"0\"/>\n                \n              </div>\n              <div style=\"float: right\" id=\"donations\">\n                <a href=\"http://www.python.org/about/website\">Website maintained by the Python community</a><br/>\n                <a href=\"https://www.fastly.com/\" title=\"Real-time CDN services provided by Fastly\">Real-time CDN by Fastly</a> / \n                <a href=\"http://developer.rackspace.com/\" title=\"Server hosting by Rackspace Open Source support\">Hosting by Rackspace</a><br/>\n                <a href=\"https://aws.amazon.com/s3/\" title=\"Object storage provided by Amazon S3\">Object storage by Amazon S3</a> /\n                <a href=\"http://www.timparkin.co.uk/\" title=\"Design by Tim Parkin, Yorkshire man, photographer and developer\">Design by Tim Parkin</a>\n              </div>\n            </div>\n            Copyright \u00a9 1990-2016, <a href=\"http://www.python.org/psf\">Python Software Foundation</a><br/>\n            <a href=\"http://www.python.org/about/legal\">Legal Statements</a>\n          </div>\n        </div>\n      </div>\n\n      \n      <script>\n        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n        ga('create', 'UA-55961911-1', 'auto');\n        ga('require', 'linkid', 'linkid.js');\n        ga('send', 'pageview');\n      </script>\n      \n\n      <script type=\"text/javascript\" src=\"//statuspage-production.s3.amazonaws.com/se-v2.js\">\n      </script>\n      <script type=\"text/javascript\">\n        var sp = new StatusPage.page({ page : '2p66nmmycsj3' });\n        sp.summary({\n          // <![CDATA[\n          success: function(data) {\n            var div = document.getElementById('statusdiv');\n            var reports = \"</br><h4 id='statusbox'>Status</h4>\\n\";\n            var outage = 0;\n            var maintenance = 0;\n            for (i in data.incidents) {\n              var incident = data.incidents[i];\n              var message, status = incident.status;\n              if (status === 'scheduled') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' scheduled.</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status === 'in_progress') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' is currently in progress.' + '</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ': ' + incident.status + '</a></li>\\n';\n                reports += message;\n                outage += 1;\n              }\n            }\n            for (i in data.scheduled_maintenances) {\n              var incident = data.scheduled_maintenances[i];\n              var message, status = incident.status;\n              if (status === 'scheduled') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' scheduled.</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status === 'in_progress') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ' is currently in progress.' + '</a></li>\\n';\n                reports += message;\n                maintenance += 1;\n              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {\n                message = '<li><a href=\"' + incident.shortlink + '\">' + incident.name + ': ' + incident.status + '</a></li>\\n';\n                reports += message;\n                outage += 1;\n              }\n            }\n            if (outage + maintenance === 0) {\n              reports += \"<li><a href='http://status.python.org'>Nothing to report</a></li>\";\n            }\n            div.innerHTML=reports;\n            if (outage > 0) {\n              var statusbox = document.getElementById(\"statusbox\");\n              statusbox.style.background = '#FC234A';\n            }\n          }\n          // ]]>\n        });\n      </script>\n\n    </body>\n  </html>\n\n"}}, "recorded_at": "2016-12-23T10:26:12"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://bitbucket.org/haypo/aioeventlet/src/"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://bitbucket.org/haypo/aioeventlet/src/", "headers": {"X-Request-Count": ["69"], "X-Cache-Info": ["caching"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["SAMEORIGIN"], "Connection": ["keep-alive"], "Strict-Transport-Security": ["max-age=31536000"], "Content-Language": ["en"], "Date": ["Fri, 23 Dec 2016 10:26:13 GMT"], "Server": ["nginx"], "Content-Encoding": ["gzip"], "X-Served-By": ["app-107"], "Content-Type": ["text/html; charset=utf-8"], "Vary": ["Accept-Language, Cookie, Accept-Encoding"], "X-Static-Version": ["e72177d765d6"], "Cache-Control": ["max-age=900"], "X-Version": ["e72177d765d6"], "Transfer-Encoding": ["chunked"], "X-Render-Time": ["0.228214979172"]}, "body": {"base64_string": "", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:13"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://bitbucket.org/haypo/aioeventlet/src/8808cbbbc7295fe7ff498d454e2fb5b0d1ccffcd/doc/"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://bitbucket.org/haypo/aioeventlet/src/8808cbbbc7295fe7ff498d454e2fb5b0d1ccffcd/doc/", "headers": {"X-Request-Count": ["74"], "X-Cache-Info": ["caching"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["SAMEORIGIN"], "Connection": ["keep-alive"], "Strict-Transport-Security": ["max-age=31536000"], "Content-Language": ["en"], "Date": ["Fri, 23 Dec 2016 10:26:13 GMT"], "Server": ["nginx"], "Content-Encoding": ["gzip"], "X-Served-By": ["app-124"], "Content-Type": ["text/html; charset=utf-8"], "Vary": ["Accept-Language, Cookie, Accept-Encoding"], "X-Static-Version": ["e72177d765d6"], "Cache-Control": ["max-age=900"], "X-Version": ["e72177d765d6"], "Transfer-Encoding": ["chunked"], "X-Render-Time": ["0.165197134018"]}, "body": {"base64_string": "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", "encoding": "utf-8"}}, "recorded_at": "2016-12-23T10:26:14"}, {"request": {"method": "GET", "headers": {"Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate"], "Connection": ["keep-alive"], "User-Agent": ["python-requests/2.12.4"]}, "body": {"encoding": "utf-8", "string": ""}, "uri": "https://bitbucket.org/haypo/aioeventlet/raw/8808cbbbc7295fe7ff498d454e2fb5b0d1ccffcd/doc/changelog.rst"}, "response": {"status": {"message": "OK", "code": 200}, "url": "https://bitbucket.org/haypo/aioeventlet/raw/8808cbbbc7295fe7ff498d454e2fb5b0d1ccffcd/doc/changelog.rst", "headers": {"X-Request-Count": ["15"], "X-Cache-Info": ["caching"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["SAMEORIGIN"], "Connection": ["keep-alive"], "Strict-Transport-Security": ["max-age=31536000"], "Content-Language": ["en"], "Date": ["Fri, 23 Dec 2016 10:26:14 GMT"], "Last-Modified": ["Mon, 12 Sep 2016 16:25:44 GMT"], "Server": ["nginx"], "Content-Encoding": ["gzip"], "X-Served-By": ["app-124"], "Content-Type": ["text/plain"], "X-Version": ["e72177d765d6"], "Vary": ["Accept-Language, Cookie, Accept-Encoding"], "X-Static-Version": ["e72177d765d6"], "Cache-Control": ["max-age=900"], "ETag": ["\"2ce264e2d17e175e387551789e323142\""], "Transfer-Encoding": ["chunked"], "X-Render-Time": ["0.0511951446533"]}, "body": {"base64_string": "H4sIAAAAAAAAA31XUW/bOBJ+168Y9GWTwFZjNy2wBu6h6F0XAfauxXZ7d282LY4srimOQI7i+N8vZijJSpM0T45EjobzffN9w0+NCQf0dCj+Mf4Vxfp29WF5u16u1xv4L8bkKMBt+b5cFcvX/oriBj67R/jXAwb+nagrE1N3dQ01ReAGIeAJErYmsKsSUA3Dexc4ku0rtAWAC/D1zA0FeFfelXdggr08eF+uSvizQWiRG7IQ6ASn6BgTuMCkX0no62XnOiwAmOBkjrjsO32Fkhl4SQ2+cIPx5BIu8q6camvOEIhhj8DmiEHSMVVFfWDJrW3ROsP+vNC8JB7sPVVHOSM+YCxfrdxrdZOqfQ+OgTFx0hP1CTUn40gegnf7aOK5HOor5dSTeGToE1o4OW6gpXDE87IzXDUuHDbgwl9YsUai6A4uGA/cRDTWhUMB0JLtPepBBJ3na8oD8tZZDCwg9qFiYYELBYBJ51A5Kvcm4VaTSZLePyN1kPquo8gK+wDluvzwFMh1CcbRdAqLHQabgAJwJO9dn+QjwULnOjg1rmrAUviFp+DcYMKRGA+ZoAlMOLcUMaNwt1ytl7fv5vy9+xkKH62F2IftUPayOxc3wPSomBifSN4+AUbRSb1jLG7gDwymzcB1kbT0daQWdjvj6BARw24nhNT/x5Pvdk937nbeheO27rmPeHW9213qzgQbAWGzOzv0dlij+/sQXDgMDFIyjPF/ZEXuGIrHlEkztZry9m65Wi3X7zYwFBRuy3c/q9iQzymabqsnzPTa6VeicQkFEsDHCrvMnVrrN1sLTpCOwwkogvHC0DPULrjUoC3hPoDFfX8Qwg7dOosoLcMgqIOnw0E1hAnSOZWJLcaoPJx9UYk6ZD4rdk7aVJJqgooi9ewCAu0Fyp9ueuWkjsElqIz3aEGpwI2I0iwXEUHpvZEhua+zQg3dPiFpkTF3INVZdBRzk45pA5UJFUp7IxhvYgunBieu6gcLmAVX5dUziWBzZrYgNQmkCt8gF2BdXWMU7eTG5LCtcfJDsJKlClDWFNyAdcnsPV5U6o2+36pUunB4s4BcHNd2HlsMPIqYHODb/W8ff//j3wVAcodg/AL2PQ+/oTHBeoxS1wAU/FmkOiFLErJ5ltekAqvlejXn9Pp1Tr8ABDQmwR4xQETxGpbCEkQUmVbeDWL4dpQuqMhiCfdciD9pkhLDQC0G2GHlalflRUVxryyRhR2l5KRsEnhGEvG2UXAvxEzZgph0+ZBCMfE2LYCFGiqiWU40zjzuBhLiKCpPWsEEW7za3KMTpLIoPno/pRaQTxSPYCKOMo12A39++rqA75++aibf/3P/f6i8w8A5tYRRxKYsim+DbVAtoo9p8Qxy8YPU77tIFaYkzZXYeQ/42GF0QiPjy6L4pPNM2oiziqYb+NY1LjyCparXVapFXb/3qjBgGBrmbvP27Qh/KbzmBi1VqaR4eDuEEoa9JB1jSTZwMi47n4Fc9dz55mnfi1dKarN4z0V0FjSaDsycE3ncMfBZjaK4gbF66lOTZtyWq7uFCqSycP78PVCUiQzjbPe04KWJQp1Kpy3NW0ie21F0qHYewWKqouuYYpIWwZD6KI5o8hTiXWIMGLPma0aDOlKoEDqMqnzgGKMRjBa50aRleKLZ2EC6Qgr5TVTE1WfNSoa7S4ANRGzpAaHqE1OrPXdpXhcSi35lWX6xi+FqKyOB5Het55felKS3iSS/6ec2a2EyNQ5PDQ8/vGGMSoPL4DRpxeKFDIsbSFQdtxWFgJUMXy4PhppiEylQnyZy6/whRmJ6ptaIlPbTPPnKSL4ZpymWas2mWlXaqkGdDGU879RkmkHLC8gIKT2ms19JaZTO9Fi64LTCMirpRKtrmR4FKWSWeBc7Hw1wZjyWMMmkh0E95EfrAKpHK5P5lwL8zwVLp2n4y/N8jUZGqFw5hrnRXLbk68ZIeuGSsXYrvY/x6loFSx4o5+WBqHR22qRk6yI+OOrT4Eq6ISHr7Kq3nexWxc2PM0z2cmWPdsqslFkv5jI9zL8iq4HkGnKhGlydqPdyD2K96MCzi861nOqL+KSY5FDMaXxKb54AIAVt+v1leHgG1Fj6oVHTgJKdee3q17nXvnpfzLfFmBhUiCuI6NEkLP4GYMUJsI8OAAA=", "encoding": "ISO-8859-1"}}, "recorded_at": "2016-12-23T10:26:14"}]}